<?xml version="1.0"?>
<doc>
    <assembly>
        <name>cvlibcs</name>
    </assembly>
    <members>
        <member name="T:MachineLearning.CvPair32s32f">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
        </member>
        <member name="F:MachineLearning.CvPair32s32f.swigCMemOwn">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvPair32s32f.Finalize">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvPair32s32f.Dispose">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="P:MachineLearning.CvPair32s32f.i">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="P:MachineLearning.CvPair32s32f.val">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="T:MachineLearning.CvStatModel">
            <summary>
            Base class for statistical models in ML
            </summary>
        </member>
        <member name="F:MachineLearning.CvStatModel.swigCMemOwn">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvStatModel.Finalize">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvStatModel.Dispose">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvStatModel.#ctor">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvStatModel.clear">
            <summary>
            Deallocates memory and resets the model state
            </summary>
        </member>
        <member name="M:MachineLearning.CvStatModel.save(System.String,System.String)">
            <summary>
            Saves the model to file
            </summary>
            <param name="filename">No comment available for this member. Please check the openCV documenation.</param>
            <param name="name">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvStatModel.save(System.String)">
            <summary>
            Saves the model to file
            </summary>
            <param name="filename">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvStatModel.load(System.String,System.String)">
            <summary>
            Loads the model from file
            </summary>
            <param name="filename">No comment available for this member. Please check the openCV documenation.</param>
            <param name="name">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvStatModel.load(System.String)">
            <summary>
            Loads the model from file
            </summary>
            <param name="filename">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="T:CxCore.cxcore">
            <summary>
            The openCV wrapper class
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_FILLED">
            <summary>
            Value = -1. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_AA">
            <summary>
            Value = 16. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_AUTOSTEP">
            <summary>
            Value = 0x7fffffff. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_MAX_ARR">
            <summary>
            Value = 10. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_NO_DEPTH_CHECK">
            <summary>
            Value = 1. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_NO_CN_CHECK">
            <summary>
            Value = 2. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_NO_SIZE_CHECK">
            <summary>
            Value = 4. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_CMP_EQ">
            <summary>
            Value = 0. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_CMP_GT">
            <summary>
            Value = 1. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_CMP_GE">
            <summary>
            Value = 2. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_CMP_LT">
            <summary>
            Value = 3. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_CMP_LE">
            <summary>
            Value = 4. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_CMP_NE">
            <summary>
            Value = 5. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_CHECK_RANGE">
            <summary>
            Value = 1. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_CHECK_QUIET">
            <summary>
            Value = 2. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_RAND_UNI">
            <summary>
            Value = 0. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_RAND_NORMAL">
            <summary>
            Value = 1. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_GEMM_A_T">
            <summary>
            Value = 1. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_GEMM_B_T">
            <summary>
            Value = 2. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_GEMM_C_T">
            <summary>
            Value = 4. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_SVD_MODIFY_A">
            <summary>
            Value = 1. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_SVD_U_T">
            <summary>
            Value = 2. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_SVD_V_T">
            <summary>
            Value = 4. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_LU">
            <summary>
            Value = 0. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_SVD">
            <summary>
            Value = 1. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_SVD_SYM">
            <summary>
            Value = 2. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_COVAR_SCRAMBLED">
            <summary>
            Value = 0. Calculates covariation matrix for a set of vectors transpose( v1-avg v2-avg ) v1-avg v2-avg 
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_COVAR_NORMAL">
            <summary>
            Value = 1. v1-avg v2-avg transpose( v1-avg v2-avg ) 
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_COVAR_USE_AVG">
            <summary>
            Value = 2. do not calc average (i e mean vector) - use the input vector instead (useful for calculating covariance matrix by parts) 
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_COVAR_SCALE">
            <summary>
            Value = 4. scale the covariance matrix coefficients by number of the vectors 
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_COVAR_ROWS">
            <summary>
            Value = 8. all the input vectors are stored in a single matrix as its rows 
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_COVAR_COLS">
            <summary>
            Value = 16. all the input vectors are stored in a single matrix as its columns 
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_PCA_DATA_AS_ROW">
            <summary>
            Value = 0. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_PCA_DATA_AS_COL">
            <summary>
            Value = 1. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_PCA_USE_AVG">
            <summary>
            Value = 2. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_C">
            <summary>
            Value = 1. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_L1">
            <summary>
            Value = 2. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_L2">
            <summary>
            Value = 4. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_NORM_MASK">
            <summary>
            Value = 7. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_RELATIVE">
            <summary>
            Value = 8. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_DIFF">
            <summary>
            Value = 16. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_MINMAX">
            <summary>
            Value = 32. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_DIFF_C">
            <summary>
            Value = (CV_DIFF|CV_C). No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_DIFF_L1">
            <summary>
            Value = (CV_DIFF|CV_L1). No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_DIFF_L2">
            <summary>
            Value = (CV_DIFF|CV_L2). No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_RELATIVE_C">
            <summary>
            Value = (CV_RELATIVE|CV_C). No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_RELATIVE_L1">
            <summary>
            Value = (CV_RELATIVE|CV_L1). No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_RELATIVE_L2">
            <summary>
            Value = (CV_RELATIVE|CV_L2). No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_REDUCE_SUM">
            <summary>
            Value = 0. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_REDUCE_AVG">
            <summary>
            Value = 1. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_REDUCE_MAX">
            <summary>
            Value = 2. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_REDUCE_MIN">
            <summary>
            Value = 3. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_DXT_FORWARD">
            <summary>
            Value = 0. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_DXT_INVERSE">
            <summary>
            Value = 1. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_DXT_SCALE">
            <summary>
            Value = 2. divide result by size of array 
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_DXT_INV_SCALE">
            <summary>
            Value = (CV_DXT_INVERSE|CV_DXT_SCALE). No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_DXT_INVERSE_SCALE">
            <summary>
            Value = CV_DXT_INV_SCALE. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_DXT_ROWS">
            <summary>
            Value = 4. transform each row individually 
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_DXT_MUL_CONJ">
            <summary>
            Value = 8. conjugate the second argument of cvMulSpectrums 
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_FRONT">
            <summary>
            Value = 1. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_BACK">
            <summary>
            Value = 0. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_GRAPH_VERTEX">
            <summary>
            Value = 1. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_GRAPH_TREE_EDGE">
            <summary>
            Value = 2. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_GRAPH_BACK_EDGE">
            <summary>
            Value = 4. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_GRAPH_FORWARD_EDGE">
            <summary>
            Value = 8. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_GRAPH_CROSS_EDGE">
            <summary>
            Value = 16. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_GRAPH_ANY_EDGE">
            <summary>
            Value = 30. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_GRAPH_NEW_TREE">
            <summary>
            Value = 32. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_GRAPH_BACKTRACKING">
            <summary>
            Value = 64. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_GRAPH_OVER">
            <summary>
            Value = -1. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_GRAPH_ALL_ITEMS">
            <summary>
            Value = -1. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_GRAPH_ITEM_VISITED_FLAG">
            <summary>
            Value = (1|30). No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_GRAPH_SEARCH_TREE_NODE_FLAG">
            <summary>
            Value = (1&lt;&lt;29). No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_GRAPH_FORWARD_EDGE_FLAG">
            <summary>
            Value = (1&lt;&lt;28). No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_FONT_HERSHEY_SIMPLEX">
            <summary>
            Value = 0. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_FONT_HERSHEY_PLAIN">
            <summary>
            Value = 1. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_FONT_HERSHEY_DUPLEX">
            <summary>
            Value = 2. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_FONT_HERSHEY_COMPLEX">
            <summary>
            Value = 3. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_FONT_HERSHEY_TRIPLEX">
            <summary>
            Value = 4. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_FONT_HERSHEY_COMPLEX_SMALL">
            <summary>
            Value = 5. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_FONT_HERSHEY_SCRIPT_SIMPLEX">
            <summary>
            Value = 6. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_FONT_HERSHEY_SCRIPT_COMPLEX">
            <summary>
            Value = 7. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_FONT_ITALIC">
            <summary>
            Value = 16. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_FONT_VECTOR0">
            <summary>
            Value = CV_FONT_HERSHEY_SIMPLEX. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_ErrModeLeaf">
            <summary>
            Value = 0. Print error and exit program 
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_ErrModeParent">
            <summary>
            Value = 1. Print error and continue 
            </summary>
        </member>
        <member name="F:CxCore.cxcore.CV_ErrModeSilent">
            <summary>
            Value = 2. Don t print and continue 
            </summary>
        </member>
        <member name="M:CxCore.cxcore.CvCreateImage(CxCore.CvSize,System.Int32,System.Int32)">
            <summary>
            The function cvCreateImage creates the header and allocates data. This call is a shortened form of
            header = cvCreateImageHeader(size,depth,channels);
            cvCreateData(header);
            </summary>
            <param name="size">Image width and height.</param>
            <param name="depth">Bit depth of image elements. Can be one of:
            IPL_DEPTH_8U - uint 8-bit integers
            IPL_DEPTH_8S - signed 8-bit integers
            IPL_DEPTH_16U - uint 16-bit integers
            IPL_DEPTH_16S - signed 16-bit integers
            IPL_DEPTH_32S - signed 32-bit integers
            IPL_DEPTH_32F - single precision floating-point numbers
            IPL_DEPTH_64F - double precision floating-point numbers</param>
            <param name="channels">Number of channels per element(pixel). Can be 1, 2, 3 or 4. The channels are interleaved, for example the usual data layout of a color image is:
            b0 g0 r0 b1 g1 r1 ...
            Although in general IPL image format can store non-interleaved images as well and some of OpenCV can process it, this function can create interleaved images only.</param>
            <returns>IplImage</returns>
            <example>
            <code lang="cs">
            //Create 8 Bit / 3 Channel Image (Color Image).
            IplImage img = CxCore.CvCreateImage(new CvSize(10, 10), CxTypes.IPL_DEPTH_8U, 3);
            </code>
            </example>
        </member>
        <member name="M:CxCore.cxcore.CvCreateImageHeader(CxCore.CvSize,System.Int32,System.Int32)">
            <summary>
            The function CvCreateImageHeader allocates, initializes, and
            returns the structure IplImage. This call is an analogue of
            iplCreateImageHeader( channels, 0, depth,
            channels == 1 ? "GRAY" : "RGB",
            channels == 1 ? "GRAY" : channels == 3 ? "BGR" :
            channels == 4 ? "BGRA" : "",
            IPL_DATA_ORDER_PIXEL, IPL_ORIGIN_TL, 4,
            size.width, size.height,0,0,0,0);
            though it does not use IPL functions by default
            (see also CV_TURN_ON_IPL_COMPATIBILITY macro)
            </summary>
            <param name="size">Image width and height.</param>
            <param name="depth">Image depth (see CreateImage).</param>
            <param name="channels">Number of channels (see CreateImage).</param>
            <returns>structure IplImage</returns>
        </member>
        <member name="M:CxCore.cxcore.CvReleaseImageHeader(CxCore.IplImage@)">
            <summary>
            The function CvReleaseImageHeader releases the header of a Image.
            </summary>
            <param name="image">ref to the deallocated header.</param>
        </member>
        <member name="M:CxCore.cxcore.CvReleaseImage(CxCore.IplImage@)">
            <summary>
            Releases header and image data
            The function CvReleaseImage releases the header and 
            the image data. This call is a shortened form of
            if( image.ptr != IntPtr.Zero )
            {
            cvReleaseData( ref image );
            cvReleaseImageHeader( ref image );
            }
            </summary>
            <param name="image">Reference to IplImage</param>
        </member>
        <member name="M:CxCore.cxcore.CvInitImageHeader(CxCore.IplImage@,CxCore.CvSize,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            The function cvInitImageHeader initializes the
            image header structure, pointer to which is passed by the user,
            and returns the pointer.
            </summary>
            <param name="image">Image header to initialize.</param>
            <param name="size">Image width and height.</param>
            <param name="depth">Image depth (see CreateImage).</param>
            <param name="channels">Number of channels (see CreateImage).</param>
            <param name="origin">IPL_ORIGIN_TL or IPL_ORIGIN_BL.</param>
            <param name="align">Alignment for image rows, typically 4 or 8 bytes.</param>
            <returns>pointer to passed image</returns>
        </member>
        <member name="M:CxCore.cxcore.CvCloneImage(CxCore.IplImage@)">
            <summary>
            Makes a full copy of image
            </summary>
            <param name="image">ref to IplImage</param>
            <returns>newly allocated image</returns>
        </member>
        <member name="M:CxCore.cxcore.CvSetImageCOI(CxCore.IplImage@,System.Int32)">
            <summary>
            The function cvSetImageCOI sets the channel of interest
            to a given value. Value 0 means that all channels are
            selected, 1 means that the first channel is selected etc.
            If ROI is NULL and coi != 0, ROI is allocated. Note that
            most of OpenCV functions do not support COI, so to process
            separate image/matrix channel one may copy
            (via cvCopy or cvSplit) the channel to separate
            image/matrix, process it and copy the result back
            (via cvCopy or cvCvtPlaneToPix) if need.
            </summary>
            <param name="image">reference to Image header.</param>
            <param name="coi">The coi.</param>
        </member>
        <member name="M:CxCore.cxcore.CvGetImageCOI(CxCore.IplImage@)">
            <summary>
            The function cvGetImageCOI returns channel of interest of 
            the image (it returns 0 if all the channels are selected).
            </summary>
            <param name="image">Reference to Image header. </param>
            <returns>channel of interest of the image (it returns 0 if 
            all the channels are selected)</returns>
        </member>
        <member name="M:CxCore.cxcore.CvSetImageROI(CxCore.IplImage@,CxCore.CvRect)">
            <summary>
            The function cvSetImageROI sets the image ROI to a 
            given rectangle. If ROI is NULL and the value of the 
            parameter rect is not equal to the whole image, ROI 
            is allocated. Unlike COI, most of OpenCV functions do 
            support ROI and treat it in a way as it would be a 
            separate image (for example, all the pixel coordinates 
            are counted from top-left or bottom-left (depending on 
            the image origin) corner of ROI)
            </summary>
            <param name="image">Reference to Image header.</param>
            <param name="rect">ROI Rectangle</param>
        </member>
        <member name="M:CxCore.cxcore.CvResetImageROI(CxCore.IplImage@)">
            <summary>
            The function cvResetImageROI releases image ROI. After 
            that the whole image is considered selected.
            </summary>
            <param name="image">Image header</param>
        </member>
        <member name="M:CxCore.cxcore.CvGetImageROI(CxCore.IplImage@)">
            <summary>
            The function returns Roi of the channel of interest (coi).
            The rectangle cvRect(0,0,image.width,image.height)
            is returned if there is no ROI
            </summary>
            <param name="image">Image header.</param>
            <returns>Roi as Rectangle</returns>
        </member>
        <member name="M:CxCore.cxcore.CvCreateMat(System.Int32,System.Int32,System.Int32)">
            <summary>
            The function cvCreateMat allocates header for the new matrix
            and underlying data, and returns a pointer to the created
            matrix. It is a short form for:
            CvMat mat = cxcore.CvCreateMatHeader( rows, cols, type );
            Matrices are stored row by row. All the rows are aligned by
            4 bytes.
            </summary>
            <param name="rows">Number of rows in the matrix.</param>
            <param name="cols">Number of columns in the matrix.</param>
            <param name="type">Type of the matrix elements. Usually it
            is specified in form CV_bit_depth(S|U|F)Cnumber_of_channels,
            for example: CV_8UC1 means an 8-bit unsigned single-channel
            matrix, CV_32SC2 means a 32-bit signed matrix with two
            channels.</param>
            <returns>Math Structure</returns>
        </member>
        <member name="M:CxCore.cxcore.CvCreateMatHeader(System.Int32,System.Int32,System.Int32,System.IntPtr)">
            <summary>
            Creates new matrix header
            </summary>
            <param name="rows">N rows.</param>
            <param name="cols">M cols.</param>
            <param name="type">type of Matrix.</param>
            <param name="data">Initializing data or zero.</param>
            <returns>CvMat</returns>
        </member>
        <member name="M:CxCore.cxcore.CvReleaseMat(CxCore.CvMat@)">
            <summary>
            Deallocates matrix 
            </summary>
            <param name="mat">Matrix to deallocate</param>
        </member>
        <member name="M:CxCore.cxcore.CvInitMatHeader(CxCore.CvMat@,System.Int32,System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Initializes matrix header
            </summary>
            <param name="mat">The matrix.</param>
            <param name="rows">N rows.</param>
            <param name="cols">M cols.</param>
            <param name="type">The type of the matrix.</param>
            <param name="data">Data or zero.
            Create a Array with data and use cvtools for creating the IntPtr.
            </param>
            <param name="step">Stepsize.</param>
            <returns>CvMat</returns>
        </member>
        <member name="M:CxCore.cxcore.CvInitMatHeader(CxCore.CvMat@,System.Int32,System.Int32,System.Int32,System.Int16[],System.Int32)">
            <summary>
            Initializes matrix header
            </summary>
            <param name="mat">The matrix.</param>
            <param name="rows">N rows.</param>
            <param name="cols">M cols.</param>
            <param name="type">The type of the matrix.</param>
            <param name="data">Data or zero.
            Create a Array with data and use cvtools for creating the IntPtr.
            </param>
            <param name="step">Stepsize.</param>
            <returns>CvMat</returns>
        </member>
        <member name="M:CxCore.cxcore.CvInitMatHeader(CxCore.CvMat@,System.Int32,System.Int32,System.Int32,System.Int32[],System.Int32)">
            <summary>
            Initializes matrix header
            </summary>
            <param name="mat">The matrix.</param>
            <param name="rows">N rows.</param>
            <param name="cols">M cols.</param>
            <param name="type">The type of the matrix.</param>
            <param name="data">Data or zero.
            Create a Array with data and use cvtools for creating the IntPtr.
            </param>
            <param name="step">Stepsize.</param>
            <returns>CvMat</returns>
        </member>
        <member name="M:CxCore.cxcore.CvInitMatHeader(CxCore.CvMat@,System.Int32,System.Int32,System.Int32,System.Single[],System.Int32)">
            <summary>
            Initializes matrix header
            </summary>
            <param name="mat">The matrix.</param>
            <param name="rows">N rows.</param>
            <param name="cols">M cols.</param>
            <param name="type">The type of the matrix.</param>
            <param name="data">Data or zero.
            Create a Array with data and use cvtools for creating the IntPtr.
            </param>
            <param name="step">Stepsize.</param>
            <returns>CvMat</returns>
        </member>
        <member name="M:CxCore.cxcore.CvInitMatHeader(CxCore.CvMat@,System.Int32,System.Int32,System.Int32,System.Double[],System.Int32)">
            <summary>
            Initializes matrix header
            </summary>
            <param name="mat">The matrix.</param>
            <param name="rows">N rows.</param>
            <param name="cols">M cols.</param>
            <param name="type">The type of the matrix.</param>
            <param name="data">Data or zero.
            Create a Array with data and use cvtools for creating the IntPtr.
            </param>
            <param name="step">Stepsize.</param>
            <returns>CvMat</returns>
        </member>
        <member name="M:CxCore.cxcore.CvInitMatHeader(CxCore.CvMat@,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes matrix header
            </summary>
            <param name="mat">The matrix.</param>
            <param name="rows">N rows.</param>
            <param name="cols">M cols.</param>
            <param name="type">The type of the matrix.</param>
            <returns>CvMat</returns>
        </member>
        <member name="M:CxCore.cxcore.CvCloneMat(CxCore.CvMat@)">
            <summary>
            Creates matrix copy 
            </summary>
            <param name="mat">Matrix to clone</param>
            <returns>Cloned Matrix</returns>
        </member>
        <member name="M:CxCore.cxcore.CvCreateMatND(System.Int32,System.Int32[],System.Int32)">
            <summary>
            Creates multi-dimensional dense array
            </summary>
            <param name="dims">Number of array dimensions. 
            It must not exceed CV_MAX_DIM (=32 by default, though 
            it may be changed at build time)</param>
            <param name="sizes">Array of dimension sizes.</param>
            <param name="type">Type of array elements. The same as for CvMat.</param>
            <returns>CvMatND</returns>
        </member>
        <member name="M:CxCore.cxcore.CvCreateMatNDHeader(System.Int32,System.Int32[],System.Int32)">
            <summary>
            Creates new matrix header
            </summary>
            <param name="dims">Number of dimension.</param>
            <param name="sizes">Array of sizes of the dimensions.</param>
            <param name="type">Type of array elements. The same as for CvMat.</param>
            <returns>CvMatND</returns>
        </member>
        <member name="M:CxCore.cxcore.CvInitMatNDHeader(CxCore.CvMatND@,System.Int32,System.Int32[],System.Int32,System.Byte[])">
            <summary>
            Initializes multi-dimensional array header
            </summary>
            <param name="mat">The Matrix.</param>
            <param name="dims">Number of dimensions.</param>
            <param name="sizes">Array of dimension sizes.</param>
            <param name="type">Type of array elements. The same as for CvMat.</param>
            <param name="data">Optional data pointer assigned to the matrix header.</param>
            <returns>CvMatND</returns>
        </member>
        <member name="M:CxCore.cxcore.CvInitMatNDHeader(CxCore.CvMatND@,System.Int32,System.Int32[],System.Int32,System.Int16[])">
            <summary>
            Initializes multi-dimensional array header
            </summary>
            <param name="mat">Pointer to the array header to be initialized. </param>
            <param name="dims">Number of array dimensions. </param>
            <param name="sizes">Array of dimension sizes. </param>
            <param name="type">Type of array elements. The same as for CvMat </param>
            <param name="data">Optional data pointer assigned to the matrix header. </param>
        </member>
        <member name="M:CxCore.cxcore.CvInitMatNDHeader(CxCore.CvMatND@,System.Int32,System.Int32[],System.Int32,System.Int32[])">
            <summary>
            Initializes multi-dimensional array header
            </summary>
            <param name="mat">Pointer to the array header to be initialized. </param>
            <param name="dims">Number of array dimensions. </param>
            <param name="sizes">Array of dimension sizes. </param>
            <param name="type">Type of array elements. The same as for CvMat </param>
            <param name="data">Optional data pointer assigned to the matrix header. </param>
        </member>
        <member name="M:CxCore.cxcore.CvInitMatNDHeader(CxCore.CvMatND@,System.Int32,System.Int32[],System.Int32,System.Single[])">
            <summary>
            Initializes multi-dimensional array header
            </summary>
            <param name="mat">Pointer to the array header to be initialized. </param>
            <param name="dims">Number of array dimensions. </param>
            <param name="sizes">Array of dimension sizes. </param>
            <param name="type">Type of array elements. The same as for CvMat </param>
            <param name="data">Optional data pointer assigned to the matrix header. </param>
        </member>
        <member name="M:CxCore.cxcore.CvInitMatNDHeader(CxCore.CvMatND@,System.Int32,System.Int32[],System.Int32,System.Double[])">
            <summary>
            Initializes multi-dimensional array header
            </summary>
            <param name="mat">Pointer to the array header to be initialized. </param>
            <param name="dims">Number of array dimensions. </param>
            <param name="sizes">Array of dimension sizes. </param>
            <param name="type">Type of array elements. The same as for CvMat </param>
            <param name="data">Optional data pointer assigned to the matrix header. </param>
        </member>
        <member name="M:CxCore.cxcore.CvInitMatNDHeader(CxCore.CvMatND@,System.Int32,System.Int32[],System.Int32)">
            <summary>
            Initializes multi-dimensional array header
            </summary>
            <param name="mat">Pointer to the array header to be initialized. </param>
            <param name="dims">Number of array dimensions. </param>
            <param name="sizes">Array of dimension sizes. </param>
            <param name="type">Type of array elements. The same as for CvMat </param>
        </member>
        <member name="M:CxCore.cxcore.CvCloneMatND(CxCore.CvMatND@)">
            <summary>
            Creates full copy of multi-dimensional array
            </summary>
            <param name="mat">Input array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvCreateData(CxCore.IplImage@)">
            <summary>
            Allocates array data
            </summary>
            <param name="arr">Array header. </param>
        </member>
        <member name="M:CxCore.cxcore.CvCreateData(CxCore.CvMat@)">
            <summary>
            Allocates array data
            </summary>
            <param name="arr">Array header. </param>
        </member>
        <member name="M:CxCore.cxcore.CvCreateData(CxCore.CvMatND@)">
            <summary>
            Allocates array data
            </summary>
            <param name="arr">Array header. </param>
        </member>
        <member name="M:CxCore.cxcore.CvCreateData(CxCore.CvSeq@)">
            <summary>
            Allocates array data
            </summary>
            <param name="arr">Array header. </param>
        </member>
        <member name="M:CxCore.cxcore.CvReleaseData(CxCore.IplImage@)">
            <summary>
            Releases array data
            </summary>
            <param name="arr">Array header </param>
        </member>
        <member name="M:CxCore.cxcore.CvReleaseData(CxCore.CvMat@)">
            <summary>
            Releases array data
            </summary>
            <param name="arr">Array header </param>
        </member>
        <member name="M:CxCore.cxcore.CvReleaseData(CxCore.CvMatND@)">
            <summary>
            Releases array data
            </summary>
            <param name="arr">Array header </param>
        </member>
        <member name="M:CxCore.cxcore.CvReleaseData(CxCore.CvSeq@)">
            <summary>
            Releases array data
            </summary>
            <param name="arr">Array header </param>
        </member>
        <member name="M:CxCore.cxcore.CvSetData(CxCore.IplImage@,System.Byte[],System.Int32)">
            <summary>
            Assigns user data to the array header
            </summary>
            <param name="arr">Array header. </param>
            <param name="data">User data. </param>
            <param name="step">Full row length in bytes. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSetData(CxCore.CvMat@,System.Byte[],System.Int32)">
            <summary>
            Assigns user data to the array header
            </summary>
            <param name="arr">Array header. </param>
            <param name="data">User data. </param>
            <param name="step">Full row length in bytes. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSetData(CxCore.CvMatND@,System.Byte[],System.Int32)">
            <summary>
            Assigns user data to the array header
            </summary>
            <param name="arr">Array header. </param>
            <param name="data">User data. </param>
            <param name="step">Full row length in bytes. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSetData(CxCore.CvSeq@,System.Byte[],System.Int32)">
            <summary>
            Assigns user data to the array header
            </summary>
            <param name="arr">Array header. </param>
            <param name="data">User data. </param>
            <param name="step">Full row length in bytes. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSetData(CxCore.IplImage@,System.Int16[],System.Int32)">
            <summary>
            Assigns user data to the array header
            </summary>
            <param name="arr">Array header. </param>
            <param name="data">User data. </param>
            <param name="step">Full row length in bytes. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSetData(CxCore.CvMat@,System.Int16[],System.Int32)">
            <summary>
            Assigns user data to the array header
            </summary>
            <param name="arr">Array header. </param>
            <param name="data">User data. </param>
            <param name="step">Full row length in bytes. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSetData(CxCore.CvMatND@,System.Int16[],System.Int32)">
            <summary>
            Assigns user data to the array header
            </summary>
            <param name="arr">Array header. </param>
            <param name="data">User data. </param>
            <param name="step">Full row length in bytes. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSetData(CxCore.CvSeq@,System.Int16[],System.Int32)">
            <summary>
            Assigns user data to the array header
            </summary>
            <param name="arr">Array header. </param>
            <param name="data">User data. </param>
            <param name="step">Full row length in bytes. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSetData(CxCore.IplImage@,System.Int32[],System.Int32)">
            <summary>
            Assigns user data to the array header
            </summary>
            <param name="arr">Array header. </param>
            <param name="data">User data. </param>
            <param name="step">Full row length in bytes. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSetData(CxCore.CvMat@,System.Int32[],System.Int32)">
            <summary>
            Assigns user data to the array header
            </summary>
            <param name="arr">Array header. </param>
            <param name="data">User data. </param>
            <param name="step">Full row length in bytes. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSetData(CxCore.CvMatND@,System.Int32[],System.Int32)">
            <summary>
            Assigns user data to the array header
            </summary>
            <param name="arr">Array header. </param>
            <param name="data">User data. </param>
            <param name="step">Full row length in bytes. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSetData(CxCore.CvSeq@,System.Int32[],System.Int32)">
            <summary>
            Assigns user data to the array header
            </summary>
            <param name="arr">Array header. </param>
            <param name="data">User data. </param>
            <param name="step">Full row length in bytes. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSetData(CxCore.IplImage@,System.Single[],System.Int32)">
            <summary>
            Assigns user data to the array header
            </summary>
            <param name="arr">Array header. </param>
            <param name="data">User data. </param>
            <param name="step">Full row length in bytes. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSetData(CxCore.CvMat@,System.Single[],System.Int32)">
            <summary>
            Assigns user data to the array header
            </summary>
            <param name="arr">Array header. </param>
            <param name="data">User data. </param>
            <param name="step">Full row length in bytes. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSetData(CxCore.CvMatND@,System.Single[],System.Int32)">
            <summary>
            Assigns user data to the array header
            </summary>
            <param name="arr">Array header. </param>
            <param name="data">User data. </param>
            <param name="step">Full row length in bytes. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSetData(CxCore.CvSeq@,System.Single[],System.Int32)">
            <summary>
            Assigns user data to the array header
            </summary>
            <param name="arr">Array header. </param>
            <param name="data">User data. </param>
            <param name="step">Full row length in bytes. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSetData(CxCore.IplImage@,System.Double[],System.Int32)">
            <summary>
            Assigns user data to the array header
            </summary>
            <param name="arr">Array header. </param>
            <param name="data">User data. </param>
            <param name="step">Full row length in bytes. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSetData(CxCore.CvMat@,System.Double[],System.Int32)">
            <summary>
            Assigns user data to the array header
            </summary>
            <param name="arr">Array header. </param>
            <param name="data">User data. </param>
            <param name="step">Full row length in bytes. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSetData(CxCore.CvMatND@,System.Double[],System.Int32)">
            <summary>
            Assigns user data to the array header
            </summary>
            <param name="arr">Array header. </param>
            <param name="data">User data. </param>
            <param name="step">Full row length in bytes. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSetData(CxCore.CvSeq@,System.Double[],System.Int32)">
            <summary>
            Assigns user data to the array header
            </summary>
            <param name="arr">Array header. </param>
            <param name="data">User data. </param>
            <param name="step">Full row length in bytes. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetRawData(CxCore.IplImage@,System.IntPtr@,System.Int32@,CxCore.CvSize@)">
            <summary>
            Retrieves low-level information about the array
            </summary>
            <param name="arr">Array header. </param>
            <param name="data">Output pointer to the whole image origin or ROI origin ifROI is set. </param>
            <param name="step">Output full row length in bytes. </param>
            <param name="roi_size">Output ROI size. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetRawData(CxCore.CvMat@,System.IntPtr@,System.Int32@,CxCore.CvSize@)">
            <summary>
            Retrieves low-level information about the array
            </summary>
            <param name="arr">Array header. </param>
            <param name="data">Output pointer to the whole image origin or ROI origin ifROI is set. </param>
            <param name="step">Output full row length in bytes. </param>
            <param name="roi_size">Output ROI size. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetRawData(CxCore.CvMatND@,System.IntPtr@,System.Int32@,CxCore.CvSize@)">
            <summary>
            Retrieves low-level information about the array
            </summary>
            <param name="arr">Array header. </param>
            <param name="data">Output pointer to the whole image origin or ROI origin ifROI is set. </param>
            <param name="step">Output full row length in bytes. </param>
            <param name="roi_size">Output ROI size. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetRawData(CxCore.CvSeq@,System.IntPtr@,System.Int32@,CxCore.CvSize@)">
            <summary>
            Retrieves low-level information about the array
            </summary>
            <param name="arr">Array header. </param>
            <param name="data">Output pointer to the whole image origin or ROI origin ifROI is set. </param>
            <param name="step">Output full row length in bytes. </param>
            <param name="roi_size">Output ROI size. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetRawData(CxCore.IplImage@,System.IntPtr@)">
            <summary>
            Retrieves low-level information about the array
            </summary>
            <param name="arr">Array header. </param>
            <param name="data">Output pointer to the whole image origin or ROI origin ifROI is set. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetRawData(CxCore.CvMat@,System.IntPtr@)">
            <summary>
            Retrieves low-level information about the array
            </summary>
            <param name="arr">Array header. </param>
            <param name="data">Output pointer to the whole image origin or ROI origin ifROI is set. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetRawData(CxCore.CvMatND@,System.IntPtr@)">
            <summary>
            Retrieves low-level information about the array
            </summary>
            <param name="arr">Array header. </param>
            <param name="data">Output pointer to the whole image origin or ROI origin ifROI is set. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetRawData(CxCore.CvSeq@,System.IntPtr@)">
            <summary>
            Retrieves low-level information about the array
            </summary>
            <param name="arr">Array header. </param>
            <param name="data">Output pointer to the whole image origin or ROI origin ifROI is set. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetMat(CxCore.IplImage@,CxCore.CvMat@,System.Int32@,System.Int32)">
            <summary>
            Returns matrix header for arbitrary array
            </summary>
            <param name="arr">Input array. </param>
            <param name="header">Pointer to </param>
            <param name="coi">Optional output parameter for storing COI. </param>
            <param name="allowND">If non-zero, the function accepts multi-dimensional dense              arrays (CvMatND*) and returns 2D (if CvMatND has two dimensions)              or 1D matrix (when CvMatND has 1 dimension or more than 2 dimensions).              The array must be continuous. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetMat(CxCore.IplImage@,CxCore.CvMat@,System.Int32@)">
            <summary>
            Returns matrix header for arbitrary array
            </summary>
            <param name="arr">Input array. </param>
            <param name="header">Pointer to </param>
            <param name="coi">Optional output parameter for storing COI. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetMat(CxCore.IplImage@,CxCore.CvMat@)">
            <summary>
            Returns matrix header for arbitrary array
            </summary>
            <param name="arr">Input array. </param>
            <param name="header">Pointer to </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetMat(CxCore.IplImage@,CxCore.CvMat@,System.Int32)">
            <summary>
            Returns matrix header for arbitrary array
            </summary>
            <param name="arr">Input array. </param>
            <param name="header">Pointer to </param>
            <param name="allowND">If non-zero, the function accepts multi-dimensional dense              arrays (CvMatND*) and returns 2D (if CvMatND has two dimensions)              or 1D matrix (when CvMatND has 1 dimension or more than 2 dimensions).              The array must be continuous. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetMat(CxCore.CvMat@,CxCore.CvMat@,System.Int32@,System.Int32)">
            <summary>
            Returns matrix header for arbitrary array
            </summary>
            <param name="arr">Input array. </param>
            <param name="header">Pointer to </param>
            <param name="coi">Optional output parameter for storing COI. </param>
            <param name="allowND">If non-zero, the function accepts multi-dimensional dense              arrays (CvMatND*) and returns 2D (if CvMatND has two dimensions)              or 1D matrix (when CvMatND has 1 dimension or more than 2 dimensions).              The array must be continuous. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetMat(CxCore.CvMat@,CxCore.CvMat@,System.Int32@)">
            <summary>
            Returns matrix header for arbitrary array
            </summary>
            <param name="arr">Input array. </param>
            <param name="header">Pointer to </param>
            <param name="coi">Optional output parameter for storing COI. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetMat(CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Returns matrix header for arbitrary array
            </summary>
            <param name="arr">Input array. </param>
            <param name="header">Pointer to </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetMat(CxCore.CvMat@,CxCore.CvMat@,System.Int32)">
            <summary>
            Returns matrix header for arbitrary array
            </summary>
            <param name="arr">Input array. </param>
            <param name="header">Pointer to </param>
            <param name="allowND">If non-zero, the function accepts multi-dimensional dense              arrays (CvMatND*) and returns 2D (if CvMatND has two dimensions)              or 1D matrix (when CvMatND has 1 dimension or more than 2 dimensions).              The array must be continuous. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetMat(CxCore.CvMatND@,CxCore.CvMat@,System.Int32@,System.Int32)">
            <summary>
            Returns matrix header for arbitrary array
            </summary>
            <param name="arr">Input array. </param>
            <param name="header">Pointer to </param>
            <param name="coi">Optional output parameter for storing COI. </param>
            <param name="allowND">If non-zero, the function accepts multi-dimensional dense              arrays (CvMatND*) and returns 2D (if CvMatND has two dimensions)              or 1D matrix (when CvMatND has 1 dimension or more than 2 dimensions).              The array must be continuous. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetMat(CxCore.CvMatND@,CxCore.CvMat@,System.Int32@)">
            <summary>
            Returns matrix header for arbitrary array
            </summary>
            <param name="arr">Input array. </param>
            <param name="header">Pointer to </param>
            <param name="coi">Optional output parameter for storing COI. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetMat(CxCore.CvMatND@,CxCore.CvMat@)">
            <summary>
            Returns matrix header for arbitrary array
            </summary>
            <param name="arr">Input array. </param>
            <param name="header">Pointer to </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetMat(CxCore.CvMatND@,CxCore.CvMat@,System.Int32)">
            <summary>
            Returns matrix header for arbitrary array
            </summary>
            <param name="arr">Input array. </param>
            <param name="header">Pointer to </param>
            <param name="allowND">If non-zero, the function accepts multi-dimensional dense              arrays (CvMatND*) and returns 2D (if CvMatND has two dimensions)              or 1D matrix (when CvMatND has 1 dimension or more than 2 dimensions).              The array must be continuous. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetMat(CxCore.CvSeq@,CxCore.CvMat@,System.Int32@,System.Int32)">
            <summary>
            Returns matrix header for arbitrary array
            </summary>
            <param name="arr">Input array. </param>
            <param name="header">Pointer to </param>
            <param name="coi">Optional output parameter for storing COI. </param>
            <param name="allowND">If non-zero, the function accepts multi-dimensional dense              arrays (CvMatND*) and returns 2D (if CvMatND has two dimensions)              or 1D matrix (when CvMatND has 1 dimension or more than 2 dimensions).              The array must be continuous. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetMat(CxCore.CvSeq@,CxCore.CvMat@,System.Int32@)">
            <summary>
            Returns matrix header for arbitrary array
            </summary>
            <param name="arr">Input array. </param>
            <param name="header">Pointer to </param>
            <param name="coi">Optional output parameter for storing COI. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetMat(CxCore.CvSeq@,CxCore.CvMat@)">
            <summary>
            Returns matrix header for arbitrary array
            </summary>
            <param name="arr">Input array. </param>
            <param name="header">Pointer to </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetMat(CxCore.CvSeq@,CxCore.CvMat@,System.Int32)">
            <summary>
            Returns matrix header for arbitrary array
            </summary>
            <param name="arr">Input array. </param>
            <param name="header">Pointer to </param>
            <param name="allowND">If non-zero, the function accepts multi-dimensional dense              arrays (CvMatND*) and returns 2D (if CvMatND has two dimensions)              or 1D matrix (when CvMatND has 1 dimension or more than 2 dimensions).              The array must be continuous. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetImage(CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Returns image header for arbitrary array
            </summary>
            <param name="arr">Input array. </param>
            <param name="image_header">Pointer to IplImage </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetImage(CxCore.CvMat@,CxCore.IplImage@)">
            <summary>
            Returns image header for arbitrary array
            </summary>
            <param name="arr">Input array. </param>
            <param name="image_header">Pointer to IplImage </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetImage(CxCore.CvMatND@,CxCore.IplImage@)">
            <summary>
            Returns image header for arbitrary array
            </summary>
            <param name="arr">Input array. </param>
            <param name="image_header">Pointer to IplImage </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetImage(CxCore.CvSeq@,CxCore.IplImage@)">
            <summary>
            Returns image header for arbitrary array
            </summary>
            <param name="arr">Input array. </param>
            <param name="image_header">Pointer to IplImage </param>
        </member>
        <member name="M:CxCore.cxcore.CvCreateSparseMat(System.Int32,System.Int32[],System.Int32)">
            <summary>
            Creates sparse array
            </summary>
            <param name="dims">Number of array dimensions. As opposite to the dense matrix, the number            of dimensions is practically unlimited (up to 2 </param>
            <param name="sizes">Array of dimension sizes. </param>
            <param name="type">Type of array elements. The same as for CvMat </param>
        </member>
        <member name="M:CxCore.cxcore.CvReleaseSparseMat(CxCore.CvSparseMat@)">
            <summary>
            Deallocates sparse array
            </summary>
            <param name="mat">Double pointer to the array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvCloneSparseMat(CxCore.CvSparseMat@)">
            <summary>
            Creates full copy of sparse array
            </summary>
            <param name="mat">Input array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetSubRect(CxCore.IplImage@,CxCore.CvMat@,CxCore.CvRect)">
            <summary>
            Returns matrix header corresponding to the rectangular sub-array of input image or matrix
            </summary>
            <param name="arr">Input array. </param>
            <param name="submat">Pointer to the resultant sub-array header. </param>
            <param name="rect">Zero-based coordinates of the rectangle of interest. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetSubRect(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvRect)">
            <summary>
            Returns matrix header corresponding to the rectangular sub-array of input image or matrix
            </summary>
            <param name="arr">Input array. </param>
            <param name="submat">Pointer to the resultant sub-array header. </param>
            <param name="rect">Zero-based coordinates of the rectangle of interest. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetSubRect(CxCore.CvMatND@,CxCore.CvMat@,CxCore.CvRect)">
            <summary>
            Returns matrix header corresponding to the rectangular sub-array of input image or matrix
            </summary>
            <param name="arr">Input array. </param>
            <param name="submat">Pointer to the resultant sub-array header. </param>
            <param name="rect">Zero-based coordinates of the rectangle of interest. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetSubRect(CxCore.CvSeq@,CxCore.CvMat@,CxCore.CvRect)">
            <summary>
            Returns matrix header corresponding to the rectangular sub-array of input image or matrix
            </summary>
            <param name="arr">Input array. </param>
            <param name="submat">Pointer to the resultant sub-array header. </param>
            <param name="rect">Zero-based coordinates of the rectangle of interest. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetRows(CxCore.IplImage@,CxCore.CvMat@,System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns array row or row span
            </summary>
            <param name="arr">Input array. </param>
            <param name="submat">Pointer to the resulting sub-array header. </param>
            <param name="start_row">Zero-based index of the starting row (inclusive) of the span. </param>
            <param name="end_row">Zero-based index of the ending row (exclusive) of the span. </param>
            <param name="delta_row">Index step in the row span. That is, the function extracts every delta_row start_row end_row </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetRows(CxCore.IplImage@,CxCore.CvMat@,System.Int32,System.Int32)">
            <summary>
            Returns array row or row span
            </summary>
            <param name="arr">Input array. </param>
            <param name="submat">Pointer to the resulting sub-array header. </param>
            <param name="start_row">Zero-based index of the starting row (inclusive) of the span. </param>
            <param name="end_row">Zero-based index of the ending row (exclusive) of the span. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetRows(CxCore.CvMat@,CxCore.CvMat@,System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns array row or row span
            </summary>
            <param name="arr">Input array. </param>
            <param name="submat">Pointer to the resulting sub-array header. </param>
            <param name="start_row">Zero-based index of the starting row (inclusive) of the span. </param>
            <param name="end_row">Zero-based index of the ending row (exclusive) of the span. </param>
            <param name="delta_row">Index step in the row span. That is, the function extracts every delta_row start_row end_row </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetRows(CxCore.CvMat@,CxCore.CvMat@,System.Int32,System.Int32)">
            <summary>
            Returns array row or row span
            </summary>
            <param name="arr">Input array. </param>
            <param name="submat">Pointer to the resulting sub-array header. </param>
            <param name="start_row">Zero-based index of the starting row (inclusive) of the span. </param>
            <param name="end_row">Zero-based index of the ending row (exclusive) of the span. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetRows(CxCore.CvMatND@,CxCore.CvMat@,System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns array row or row span
            </summary>
            <param name="arr">Input array. </param>
            <param name="submat">Pointer to the resulting sub-array header. </param>
            <param name="start_row">Zero-based index of the starting row (inclusive) of the span. </param>
            <param name="end_row">Zero-based index of the ending row (exclusive) of the span. </param>
            <param name="delta_row">Index step in the row span. That is, the function extracts every delta_row start_row end_row </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetRows(CxCore.CvMatND@,CxCore.CvMat@,System.Int32,System.Int32)">
            <summary>
            Returns array row or row span
            </summary>
            <param name="arr">Input array. </param>
            <param name="submat">Pointer to the resulting sub-array header. </param>
            <param name="start_row">Zero-based index of the starting row (inclusive) of the span. </param>
            <param name="end_row">Zero-based index of the ending row (exclusive) of the span. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetRows(CxCore.CvSeq@,CxCore.CvMat@,System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns array row or row span
            </summary>
            <param name="arr">Input array. </param>
            <param name="submat">Pointer to the resulting sub-array header. </param>
            <param name="start_row">Zero-based index of the starting row (inclusive) of the span. </param>
            <param name="end_row">Zero-based index of the ending row (exclusive) of the span. </param>
            <param name="delta_row">Index step in the row span. That is, the function extracts every delta_row start_row end_row </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetRows(CxCore.CvSeq@,CxCore.CvMat@,System.Int32,System.Int32)">
            <summary>
            Returns array row or row span
            </summary>
            <param name="arr">Input array. </param>
            <param name="submat">Pointer to the resulting sub-array header. </param>
            <param name="start_row">Zero-based index of the starting row (inclusive) of the span. </param>
            <param name="end_row">Zero-based index of the ending row (exclusive) of the span. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetCols(CxCore.IplImage@,CxCore.CvMat@,System.Int32,System.Int32)">
            <summary>
            Returns array column or column span
            </summary>
            <param name="arr">Input array. </param>
            <param name="submat">Pointer to the resulting sub-array header. </param>
            <param name="start_col">Zero-based index of the starting column (inclusive) of the span. </param>
            <param name="end_col">Zero-based index of the ending column (exclusive) of the span. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetCols(CxCore.CvMat@,CxCore.CvMat@,System.Int32,System.Int32)">
            <summary>
            Returns array column or column span
            </summary>
            <param name="arr">Input array. </param>
            <param name="submat">Pointer to the resulting sub-array header. </param>
            <param name="start_col">Zero-based index of the starting column (inclusive) of the span. </param>
            <param name="end_col">Zero-based index of the ending column (exclusive) of the span. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetCols(CxCore.CvMatND@,CxCore.CvMat@,System.Int32,System.Int32)">
            <summary>
            Returns array column or column span
            </summary>
            <param name="arr">Input array. </param>
            <param name="submat">Pointer to the resulting sub-array header. </param>
            <param name="start_col">Zero-based index of the starting column (inclusive) of the span. </param>
            <param name="end_col">Zero-based index of the ending column (exclusive) of the span. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetCols(CxCore.CvSeq@,CxCore.CvMat@,System.Int32,System.Int32)">
            <summary>
            Returns array column or column span
            </summary>
            <param name="arr">Input array. </param>
            <param name="submat">Pointer to the resulting sub-array header. </param>
            <param name="start_col">Zero-based index of the starting column (inclusive) of the span. </param>
            <param name="end_col">Zero-based index of the ending column (exclusive) of the span. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetDiag(CxCore.IplImage@,CxCore.CvMat@,System.Int32)">
            <summary>
            Returns one of array diagonals
            </summary>
            <param name="arr">Input array. </param>
            <param name="submat">Pointer to the resulting sub-array header. </param>
            <param name="diag">Array diagonal. Zero corresponds to the main diagonal, -1 corresponds to the diagonal abovethe main etc., 1 corresponds to the diagonal below the main etc. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetDiag(CxCore.IplImage@,CxCore.CvMat@)">
            <summary>
            Returns one of array diagonals
            </summary>
            <param name="arr">Input array. </param>
            <param name="submat">Pointer to the resulting sub-array header. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetDiag(CxCore.CvMat@,CxCore.CvMat@,System.Int32)">
            <summary>
            Returns one of array diagonals
            </summary>
            <param name="arr">Input array. </param>
            <param name="submat">Pointer to the resulting sub-array header. </param>
            <param name="diag">Array diagonal. Zero corresponds to the main diagonal, -1 corresponds to the diagonal abovethe main etc., 1 corresponds to the diagonal below the main etc. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetDiag(CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Returns one of array diagonals
            </summary>
            <param name="arr">Input array. </param>
            <param name="submat">Pointer to the resulting sub-array header. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetDiag(CxCore.CvMatND@,CxCore.CvMat@,System.Int32)">
            <summary>
            Returns one of array diagonals
            </summary>
            <param name="arr">Input array. </param>
            <param name="submat">Pointer to the resulting sub-array header. </param>
            <param name="diag">Array diagonal. Zero corresponds to the main diagonal, -1 corresponds to the diagonal abovethe main etc., 1 corresponds to the diagonal below the main etc. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetDiag(CxCore.CvMatND@,CxCore.CvMat@)">
            <summary>
            Returns one of array diagonals
            </summary>
            <param name="arr">Input array. </param>
            <param name="submat">Pointer to the resulting sub-array header. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetDiag(CxCore.CvSeq@,CxCore.CvMat@,System.Int32)">
            <summary>
            Returns one of array diagonals
            </summary>
            <param name="arr">Input array. </param>
            <param name="submat">Pointer to the resulting sub-array header. </param>
            <param name="diag">Array diagonal. Zero corresponds to the main diagonal, -1 corresponds to the diagonal abovethe main etc., 1 corresponds to the diagonal below the main etc. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetDiag(CxCore.CvSeq@,CxCore.CvMat@)">
            <summary>
            Returns one of array diagonals
            </summary>
            <param name="arr">Input array. </param>
            <param name="submat">Pointer to the resulting sub-array header. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetSize(CxCore.IplImage@)">
            <summary>
            Returns size of matrix or image ROI
            </summary>
            <param name="arr">array header. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetSize(CxCore.CvMat@)">
            <summary>
            Returns size of matrix or image ROI
            </summary>
            <param name="arr">array header. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetSize(CxCore.CvMatND@)">
            <summary>
            Returns size of matrix or image ROI
            </summary>
            <param name="arr">array header. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetSize(CxCore.CvSeq@)">
            <summary>
            Returns size of matrix or image ROI
            </summary>
            <param name="arr">array header. </param>
        </member>
        <member name="M:CxCore.cxcore.CvInitSparseMatIterator(CxCore.CvSparseMat@,CxCore.CvSparseMatIterator@)">
            <summary>
            Initializes sparse array elements iterator
            </summary>
            <param name="mat">Input array. </param>
            <param name="mat_iterator">Initialized iterator. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetElemType(CxCore.IplImage@)">
            <summary>
            Returns type of array elements
            </summary>
            <param name="arr">Input array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetElemType(CxCore.CvMat@)">
            <summary>
            Returns type of array elements
            </summary>
            <param name="arr">Input array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetElemType(CxCore.CvSeq@)">
            <summary>
            Returns type of array elements
            </summary>
            <param name="arr">Input array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetDims(CxCore.IplImage@,System.Int32[])">
            <summary>
            Return number of array dimensions and their sizes or the size of particular dimension
            </summary>
            <param name="arr">Input array. </param>
            <param name="sizes">Optional output vector of the array dimension sizes. For 2d arrays the number of rows (height)goes first, number of columns (width) next. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetDims(CxCore.IplImage@)">
            <summary>
            Return number of array dimensions and their sizes or the size of particular dimension
            </summary>
            <param name="arr">Input array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetDims(CxCore.CvMat@,System.Int32[])">
            <summary>
            Return number of array dimensions and their sizes or the size of particular dimension
            </summary>
            <param name="arr">Input array. </param>
            <param name="sizes">Optional output vector of the array dimension sizes. For 2d arrays the number of rows (height)goes first, number of columns (width) next. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetDims(CxCore.CvMat@)">
            <summary>
            Return number of array dimensions and their sizes or the size of particular dimension
            </summary>
            <param name="arr">Input array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetDims(CxCore.CvMatND@,System.Int32[])">
            <summary>
            Return number of array dimensions and their sizes or the size of particular dimension
            </summary>
            <param name="arr">Input array. </param>
            <param name="sizes">Optional output vector of the array dimension sizes. For 2d arrays the number of rows (height)goes first, number of columns (width) next. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetDims(CxCore.CvMatND@)">
            <summary>
            Return number of array dimensions and their sizes or the size of particular dimension
            </summary>
            <param name="arr">Input array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetDims(CxCore.CvSeq@,System.Int32[])">
            <summary>
            Return number of array dimensions and their sizes or the size of particular dimension
            </summary>
            <param name="arr">Input array. </param>
            <param name="sizes">Optional output vector of the array dimension sizes. For 2d arrays the number of rows (height)goes first, number of columns (width) next. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetDims(CxCore.CvSeq@)">
            <summary>
            Return number of array dimensions and their sizes or the size of particular dimension
            </summary>
            <param name="arr">Input array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetDimSize(CxCore.IplImage@,System.Int32)">
            <summary>
            Return number of array dimensions and their sizes or the size of particular dimension
            </summary>
            <param name="arr">Input array. </param>
            <param name="index">Zero-based dimension index (for matrices 0 means number of rows, 1 means number of columns;for images 0 means height, 1 means width). </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetDimSize(CxCore.CvMat@,System.Int32)">
            <summary>
            Return number of array dimensions and their sizes or the size of particular dimension
            </summary>
            <param name="arr">Input array. </param>
            <param name="index">Zero-based dimension index (for matrices 0 means number of rows, 1 means number of columns;for images 0 means height, 1 means width). </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetDimSize(CxCore.CvMatND@,System.Int32)">
            <summary>
            Return number of array dimensions and their sizes or the size of particular dimension
            </summary>
            <param name="arr">Input array. </param>
            <param name="index">Zero-based dimension index (for matrices 0 means number of rows, 1 means number of columns;for images 0 means height, 1 means width). </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetDimSize(CxCore.CvSeq@,System.Int32)">
            <summary>
            Return number of array dimensions and their sizes or the size of particular dimension
            </summary>
            <param name="arr">Input array. </param>
            <param name="index">Zero-based dimension index (for matrices 0 means number of rows, 1 means number of columns;for images 0 means height, 1 means width). </param>
        </member>
        <member name="M:CxCore.cxcore.CvPtr1D(CxCore.IplImage@,System.Int32,System.Int32@)">
            <summary>
            Return pointer to the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx0">The first zero-based component of the element index </param>
            <param name="type">Optional output parameter: type of matrix elements </param>
        </member>
        <member name="M:CxCore.cxcore.CvPtr1D(CxCore.IplImage@,System.Int32)">
            <summary>
            Return pointer to the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx0">The first zero-based component of the element index </param>
        </member>
        <member name="M:CxCore.cxcore.CvPtr1D(CxCore.CvMat@,System.Int32,System.Int32@)">
            <summary>
            Return pointer to the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx0">The first zero-based component of the element index </param>
            <param name="type">Optional output parameter: type of matrix elements </param>
        </member>
        <member name="M:CxCore.cxcore.CvPtr1D(CxCore.CvMat@,System.Int32)">
            <summary>
            Return pointer to the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx0">The first zero-based component of the element index </param>
        </member>
        <member name="M:CxCore.cxcore.CvPtr1D(CxCore.CvMatND@,System.Int32,System.Int32@)">
            <summary>
            Return pointer to the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx0">The first zero-based component of the element index </param>
            <param name="type">Optional output parameter: type of matrix elements </param>
        </member>
        <member name="M:CxCore.cxcore.CvPtr1D(CxCore.CvMatND@,System.Int32)">
            <summary>
            Return pointer to the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx0">The first zero-based component of the element index </param>
        </member>
        <member name="M:CxCore.cxcore.CvPtr1D(CxCore.CvSeq@,System.Int32,System.Int32@)">
            <summary>
            Return pointer to the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx0">The first zero-based component of the element index </param>
            <param name="type">Optional output parameter: type of matrix elements </param>
        </member>
        <member name="M:CxCore.cxcore.CvPtr1D(CxCore.CvSeq@,System.Int32)">
            <summary>
            Return pointer to the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx0">The first zero-based component of the element index </param>
        </member>
        <member name="M:CxCore.cxcore.CvPtr2D(CxCore.IplImage@,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Return pointer to the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx0">The first zero-based component of the element index </param>
            <param name="idx1">The second zero-based component of the element index </param>
            <param name="type">Optional output parameter: type of matrix elements </param>
        </member>
        <member name="M:CxCore.cxcore.CvPtr2D(CxCore.IplImage@,System.Int32,System.Int32)">
            <summary>
            Return pointer to the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx0">The first zero-based component of the element index </param>
            <param name="idx1">The second zero-based component of the element index </param>
        </member>
        <member name="M:CxCore.cxcore.CvPtr2D(CxCore.CvMat@,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Return pointer to the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx0">The first zero-based component of the element index </param>
            <param name="idx1">The second zero-based component of the element index </param>
            <param name="type">Optional output parameter: type of matrix elements </param>
        </member>
        <member name="M:CxCore.cxcore.CvPtr2D(CxCore.CvMat@,System.Int32,System.Int32)">
            <summary>
            Return pointer to the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx0">The first zero-based component of the element index </param>
            <param name="idx1">The second zero-based component of the element index </param>
        </member>
        <member name="M:CxCore.cxcore.CvPtr2D(CxCore.CvMatND@,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Return pointer to the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx0">The first zero-based component of the element index </param>
            <param name="idx1">The second zero-based component of the element index </param>
            <param name="type">Optional output parameter: type of matrix elements </param>
        </member>
        <member name="M:CxCore.cxcore.CvPtr2D(CxCore.CvMatND@,System.Int32,System.Int32)">
            <summary>
            Return pointer to the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx0">The first zero-based component of the element index </param>
            <param name="idx1">The second zero-based component of the element index </param>
        </member>
        <member name="M:CxCore.cxcore.CvPtr2D(CxCore.CvSeq@,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Return pointer to the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx0">The first zero-based component of the element index </param>
            <param name="idx1">The second zero-based component of the element index </param>
            <param name="type">Optional output parameter: type of matrix elements </param>
        </member>
        <member name="M:CxCore.cxcore.CvPtr2D(CxCore.CvSeq@,System.Int32,System.Int32)">
            <summary>
            Return pointer to the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx0">The first zero-based component of the element index </param>
            <param name="idx1">The second zero-based component of the element index </param>
        </member>
        <member name="M:CxCore.cxcore.CvPtr3D(CxCore.IplImage@,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Return pointer to the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx0">The first zero-based component of the element index </param>
            <param name="idx1">The second zero-based component of the element index </param>
            <param name="idx2">The third zero-based component of the element index </param>
            <param name="type">Optional output parameter: type of matrix elements </param>
        </member>
        <member name="M:CxCore.cxcore.CvPtr3D(CxCore.IplImage@,System.Int32,System.Int32,System.Int32)">
            <summary>
            Return pointer to the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx0">The first zero-based component of the element index </param>
            <param name="idx1">The second zero-based component of the element index </param>
            <param name="idx2">The third zero-based component of the element index </param>
        </member>
        <member name="M:CxCore.cxcore.CvPtr3D(CxCore.CvMat@,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Return pointer to the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx0">The first zero-based component of the element index </param>
            <param name="idx1">The second zero-based component of the element index </param>
            <param name="idx2">The third zero-based component of the element index </param>
            <param name="type">Optional output parameter: type of matrix elements </param>
        </member>
        <member name="M:CxCore.cxcore.CvPtr3D(CxCore.CvMat@,System.Int32,System.Int32,System.Int32)">
            <summary>
            Return pointer to the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx0">The first zero-based component of the element index </param>
            <param name="idx1">The second zero-based component of the element index </param>
            <param name="idx2">The third zero-based component of the element index </param>
        </member>
        <member name="M:CxCore.cxcore.CvPtr3D(CxCore.CvMatND@,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Return pointer to the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx0">The first zero-based component of the element index </param>
            <param name="idx1">The second zero-based component of the element index </param>
            <param name="idx2">The third zero-based component of the element index </param>
            <param name="type">Optional output parameter: type of matrix elements </param>
        </member>
        <member name="M:CxCore.cxcore.CvPtr3D(CxCore.CvMatND@,System.Int32,System.Int32,System.Int32)">
            <summary>
            Return pointer to the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx0">The first zero-based component of the element index </param>
            <param name="idx1">The second zero-based component of the element index </param>
            <param name="idx2">The third zero-based component of the element index </param>
        </member>
        <member name="M:CxCore.cxcore.CvPtr3D(CxCore.CvSeq@,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Return pointer to the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx0">The first zero-based component of the element index </param>
            <param name="idx1">The second zero-based component of the element index </param>
            <param name="idx2">The third zero-based component of the element index </param>
            <param name="type">Optional output parameter: type of matrix elements </param>
        </member>
        <member name="M:CxCore.cxcore.CvPtr3D(CxCore.CvSeq@,System.Int32,System.Int32,System.Int32)">
            <summary>
            Return pointer to the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx0">The first zero-based component of the element index </param>
            <param name="idx1">The second zero-based component of the element index </param>
            <param name="idx2">The third zero-based component of the element index </param>
        </member>
        <member name="M:CxCore.cxcore.CvPtrND(CxCore.IplImage@,System.Int32[],System.Int32@,System.Int32,System.UInt32[])">
            <summary>
            Return pointer to the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx">Array of the element indices </param>
            <param name="type">Optional output parameter: type of matrix elements </param>
            <param name="create_node">Optional input parameter for sparse matrices. Non-zero value of the parameter means thatthe requested element is created if it does not exist already. </param>
            <param name="precalc_hashval">Optional input parameter for sparse matrices. If the pointer is not NULL, the functiondoes not recalculate the node hash value, but takes it from the specified location. It is useful for speedingup pair-wise operations (TODO: provide an example) </param>
        </member>
        <member name="M:CxCore.cxcore.CvPtrND(CxCore.IplImage@,System.Int32,System.Int32@,System.Int32)">
            <summary>
            Return pointer to the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx">Array of the element indices </param>
            <param name="type">Optional output parameter: type of matrix elements </param>
            <param name="create_node">Optional input parameter for sparse matrices. Non-zero value of the parameter means thatthe requested element is created if it does not exist already. </param>
        </member>
        <member name="M:CxCore.cxcore.CvPtrND(CxCore.IplImage@,System.Int32,System.Int32@)">
            <summary>
            Return pointer to the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx">Array of the element indices </param>
            <param name="type">Optional output parameter: type of matrix elements </param>
        </member>
        <member name="M:CxCore.cxcore.CvPtrND(CxCore.IplImage@,System.Int32)">
            <summary>
            Return pointer to the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx">Array of the element indices </param>
        </member>
        <member name="M:CxCore.cxcore.CvPtrND(CxCore.CvMat@,System.Int32[],System.Int32@,System.Int32,System.UInt32[])">
            <summary>
            Return pointer to the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx">Array of the element indices </param>
            <param name="type">Optional output parameter: type of matrix elements </param>
            <param name="create_node">Optional input parameter for sparse matrices. Non-zero value of the parameter means thatthe requested element is created if it does not exist already. </param>
            <param name="precalc_hashval">Optional input parameter for sparse matrices. If the pointer is not NULL, the functiondoes not recalculate the node hash value, but takes it from the specified location. It is useful for speedingup pair-wise operations (TODO: provide an example) </param>
        </member>
        <member name="M:CxCore.cxcore.CvPtrND(CxCore.CvMat@,System.Int32,System.Int32@,System.Int32)">
            <summary>
            Return pointer to the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx">Array of the element indices </param>
            <param name="type">Optional output parameter: type of matrix elements </param>
            <param name="create_node">Optional input parameter for sparse matrices. Non-zero value of the parameter means thatthe requested element is created if it does not exist already. </param>
        </member>
        <member name="M:CxCore.cxcore.CvPtrND(CxCore.CvMat@,System.Int32,System.Int32@)">
            <summary>
            Return pointer to the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx">Array of the element indices </param>
            <param name="type">Optional output parameter: type of matrix elements </param>
        </member>
        <member name="M:CxCore.cxcore.CvPtrND(CxCore.CvMat@,System.Int32)">
            <summary>
            Return pointer to the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx">Array of the element indices </param>
        </member>
        <member name="M:CxCore.cxcore.CvPtrND(CxCore.CvMatND@,System.Int32[],System.Int32@,System.Int32,System.UInt32[])">
            <summary>
            Return pointer to the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx">Array of the element indices </param>
            <param name="type">Optional output parameter: type of matrix elements </param>
            <param name="create_node">Optional input parameter for sparse matrices. Non-zero value of the parameter means thatthe requested element is created if it does not exist already. </param>
            <param name="precalc_hashval">Optional input parameter for sparse matrices. If the pointer is not NULL, the functiondoes not recalculate the node hash value, but takes it from the specified location. It is useful for speedingup pair-wise operations (TODO: provide an example) </param>
        </member>
        <member name="M:CxCore.cxcore.CvPtrND(CxCore.CvMatND@,System.Int32,System.Int32@,System.Int32)">
            <summary>
            Return pointer to the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx">Array of the element indices </param>
            <param name="type">Optional output parameter: type of matrix elements </param>
            <param name="create_node">Optional input parameter for sparse matrices. Non-zero value of the parameter means thatthe requested element is created if it does not exist already. </param>
        </member>
        <member name="M:CxCore.cxcore.CvPtrND(CxCore.CvMatND@,System.Int32,System.Int32@)">
            <summary>
            Return pointer to the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx">Array of the element indices </param>
            <param name="type">Optional output parameter: type of matrix elements </param>
        </member>
        <member name="M:CxCore.cxcore.CvPtrND(CxCore.CvMatND@,System.Int32)">
            <summary>
            Return pointer to the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx">Array of the element indices </param>
        </member>
        <member name="M:CxCore.cxcore.CvPtrND(CxCore.CvSeq@,System.Int32[],System.Int32@,System.Int32,System.UInt32[])">
            <summary>
            Return pointer to the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx">Array of the element indices </param>
            <param name="type">Optional output parameter: type of matrix elements </param>
            <param name="create_node">Optional input parameter for sparse matrices. Non-zero value of the parameter means thatthe requested element is created if it does not exist already. </param>
            <param name="precalc_hashval">Optional input parameter for sparse matrices. If the pointer is not NULL, the functiondoes not recalculate the node hash value, but takes it from the specified location. It is useful for speedingup pair-wise operations (TODO: provide an example) </param>
        </member>
        <member name="M:CxCore.cxcore.CvPtrND(CxCore.CvSeq@,System.Int32,System.Int32@,System.Int32)">
            <summary>
            Return pointer to the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx">Array of the element indices </param>
            <param name="type">Optional output parameter: type of matrix elements </param>
            <param name="create_node">Optional input parameter for sparse matrices. Non-zero value of the parameter means thatthe requested element is created if it does not exist already. </param>
        </member>
        <member name="M:CxCore.cxcore.CvPtrND(CxCore.CvSeq@,System.Int32,System.Int32@)">
            <summary>
            Return pointer to the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx">Array of the element indices </param>
            <param name="type">Optional output parameter: type of matrix elements </param>
        </member>
        <member name="M:CxCore.cxcore.CvPtrND(CxCore.CvSeq@,System.Int32)">
            <summary>
            Return pointer to the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx">Array of the element indices </param>
        </member>
        <member name="M:CxCore.cxcore.CvGet1D(CxCore.IplImage@,System.Int32)">
            <summary>
            Return the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx0">The first zero-based component of the element index </param>
        </member>
        <member name="M:CxCore.cxcore.CvGet1D(CxCore.CvMat@,System.Int32)">
            <summary>
            Return the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx0">The first zero-based component of the element index </param>
        </member>
        <member name="M:CxCore.cxcore.CvGet1D(CxCore.CvMatND@,System.Int32)">
            <summary>
            Return the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx0">The first zero-based component of the element index </param>
        </member>
        <member name="M:CxCore.cxcore.CvGet1D(CxCore.CvSeq@,System.Int32)">
            <summary>
            Return the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx0">The first zero-based component of the element index </param>
        </member>
        <member name="M:CxCore.cxcore.CvGet2D(CxCore.IplImage@,System.Int32,System.Int32)">
            <summary>
            Return the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx0">The first zero-based component of the element index </param>
            <param name="idx1">The second zero-based component of the element index </param>
        </member>
        <member name="M:CxCore.cxcore.CvGet2D(CxCore.CvMat@,System.Int32,System.Int32)">
            <summary>
            Return the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx0">The first zero-based component of the element index </param>
            <param name="idx1">The second zero-based component of the element index </param>
        </member>
        <member name="M:CxCore.cxcore.CvGet2D(CxCore.CvMatND@,System.Int32,System.Int32)">
            <summary>
            Return the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx0">The first zero-based component of the element index </param>
            <param name="idx1">The second zero-based component of the element index </param>
        </member>
        <member name="M:CxCore.cxcore.CvGet2D(CxCore.CvSeq@,System.Int32,System.Int32)">
            <summary>
            Return the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx0">The first zero-based component of the element index </param>
            <param name="idx1">The second zero-based component of the element index </param>
        </member>
        <member name="M:CxCore.cxcore.CvGet3D(CxCore.IplImage@,System.Int32,System.Int32,System.Int32)">
            <summary>
            Return the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx0">The first zero-based component of the element index </param>
            <param name="idx1">The second zero-based component of the element index </param>
            <param name="idx2">The third zero-based component of the element index </param>
        </member>
        <member name="M:CxCore.cxcore.CvGet3D(CxCore.CvMat@,System.Int32,System.Int32,System.Int32)">
            <summary>
            Return the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx0">The first zero-based component of the element index </param>
            <param name="idx1">The second zero-based component of the element index </param>
            <param name="idx2">The third zero-based component of the element index </param>
        </member>
        <member name="M:CxCore.cxcore.CvGet3D(CxCore.CvMatND@,System.Int32,System.Int32,System.Int32)">
            <summary>
            Return the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx0">The first zero-based component of the element index </param>
            <param name="idx1">The second zero-based component of the element index </param>
            <param name="idx2">The third zero-based component of the element index </param>
        </member>
        <member name="M:CxCore.cxcore.CvGet3D(CxCore.CvSeq@,System.Int32,System.Int32,System.Int32)">
            <summary>
            Return the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx0">The first zero-based component of the element index </param>
            <param name="idx1">The second zero-based component of the element index </param>
            <param name="idx2">The third zero-based component of the element index </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetND(CxCore.IplImage@,System.Int32[])">
            <summary>
            Return the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx">Array of the element indices </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetND(CxCore.CvMat@,System.Int32[])">
            <summary>
            Return the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx">Array of the element indices </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetND(CxCore.CvMatND@,System.Int32[])">
            <summary>
            Return the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx">Array of the element indices </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetND(CxCore.CvSeq@,System.Int32[])">
            <summary>
            Return the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx">Array of the element indices </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetReal1D(CxCore.IplImage@,System.Int32)">
            <summary>
            Return the particular element of single-channel array
            </summary>
            <param name="arr">Input array. Must have a single channel. </param>
            <param name="idx0">The first zero-based component of the element index </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetReal1D(CxCore.CvMat@,System.Int32)">
            <summary>
            Return the particular element of single-channel array
            </summary>
            <param name="arr">Input array. Must have a single channel. </param>
            <param name="idx0">The first zero-based component of the element index </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetReal1D(CxCore.CvMatND@,System.Int32)">
            <summary>
            Return the particular element of single-channel array
            </summary>
            <param name="arr">Input array. Must have a single channel. </param>
            <param name="idx0">The first zero-based component of the element index </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetReal1D(CxCore.CvSeq@,System.Int32)">
            <summary>
            Return the particular element of single-channel array
            </summary>
            <param name="arr">Input array. Must have a single channel. </param>
            <param name="idx0">The first zero-based component of the element index </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetReal1D(System.IntPtr,System.Int32)">
            <summary>
            Return the particular element of single-channel array
            </summary>
            <param name="arr">Input array. Must have a single channel. </param>
            <param name="idx0">The first zero-based component of the element index </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetReal2D(CxCore.IplImage@,System.Int32,System.Int32)">
            <summary>
            Return the particular element of single-channel array
            </summary>
            <param name="arr">Input array. Must have a single channel. </param>
            <param name="idx0">The first zero-based component of the element index </param>
            <param name="idx1">The second zero-based component of the element index </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetReal2D(CxCore.CvMat@,System.Int32,System.Int32)">
            <summary>
            Return the particular element of single-channel array
            </summary>
            <param name="arr">Input array. Must have a single channel. </param>
            <param name="idx0">The first zero-based component of the element index </param>
            <param name="idx1">The second zero-based component of the element index </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetReal2D(CxCore.CvMatND@,System.Int32,System.Int32)">
            <summary>
            Return the particular element of single-channel array
            </summary>
            <param name="arr">Input array. Must have a single channel. </param>
            <param name="idx0">The first zero-based component of the element index </param>
            <param name="idx1">The second zero-based component of the element index </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetReal2D(CxCore.CvSeq@,System.Int32,System.Int32)">
            <summary>
            Return the particular element of single-channel array
            </summary>
            <param name="arr">Input array. Must have a single channel. </param>
            <param name="idx0">The first zero-based component of the element index </param>
            <param name="idx1">The second zero-based component of the element index </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetReal2D(System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Return the particular element of single-channel array
            </summary>
            <param name="arr">Input array. Must have a single channel. </param>
            <param name="idx0">The first zero-based component of the element index </param>
            <param name="idx1">The second zero-based component of the element index </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetReal3D(CxCore.IplImage@,System.Int32,System.Int32,System.Int32)">
            <summary>
            Return the particular element of single-channel array
            </summary>
            <param name="arr">Input array. Must have a single channel. </param>
            <param name="idx0">The first zero-based component of the element index </param>
            <param name="idx1">The second zero-based component of the element index </param>
            <param name="idx2">The third zero-based component of the element index </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetReal3D(CxCore.CvMat@,System.Int32,System.Int32,System.Int32)">
            <summary>
            Return the particular element of single-channel array
            </summary>
            <param name="arr">Input array. Must have a single channel. </param>
            <param name="idx0">The first zero-based component of the element index </param>
            <param name="idx1">The second zero-based component of the element index </param>
            <param name="idx2">The third zero-based component of the element index </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetReal3D(CxCore.CvMatND@,System.Int32,System.Int32,System.Int32)">
            <summary>
            Return the particular element of single-channel array
            </summary>
            <param name="arr">Input array. Must have a single channel. </param>
            <param name="idx0">The first zero-based component of the element index </param>
            <param name="idx1">The second zero-based component of the element index </param>
            <param name="idx2">The third zero-based component of the element index </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetReal3D(CxCore.CvSeq@,System.Int32,System.Int32,System.Int32)">
            <summary>
            Return the particular element of single-channel array
            </summary>
            <param name="arr">Input array. Must have a single channel. </param>
            <param name="idx0">The first zero-based component of the element index </param>
            <param name="idx1">The second zero-based component of the element index </param>
            <param name="idx2">The third zero-based component of the element index </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetReal3D(System.IntPtr,System.Int32,System.Int32,System.Int32)">
            <summary>
            Return the particular element of single-channel array
            </summary>
            <param name="arr">Input array. Must have a single channel. </param>
            <param name="idx0">The first zero-based component of the element index </param>
            <param name="idx1">The second zero-based component of the element index </param>
            <param name="idx2">The third zero-based component of the element index </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetRealND(CxCore.IplImage@,System.Int32[])">
            <summary>
            Return the particular element of single-channel array
            </summary>
            <param name="arr">Input array. Must have a single channel. </param>
            <param name="idx">Array of the element indices </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetRealND(CxCore.CvMat@,System.Int32[])">
            <summary>
            Return the particular element of single-channel array
            </summary>
            <param name="arr">Input array. Must have a single channel. </param>
            <param name="idx">Array of the element indices </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetRealND(CxCore.CvMatND@,System.Int32[])">
            <summary>
            Return the particular element of single-channel array
            </summary>
            <param name="arr">Input array. Must have a single channel. </param>
            <param name="idx">Array of the element indices </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetRealND(CxCore.CvSeq@,System.Int32[])">
            <summary>
            Return the particular element of single-channel array
            </summary>
            <param name="arr">Input array. Must have a single channel. </param>
            <param name="idx">Array of the element indices </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetRealND(System.IntPtr,System.Int32[])">
            <summary>
            Return the particular element of single-channel array
            </summary>
            <param name="arr">Input array. Must have a single channel. </param>
            <param name="idx">Array of the element indices </param>
        </member>
        <member name="M:CxCore.cxcore.CvSet1D(CxCore.IplImage@,System.Int32,CxCore.CvScalar)">
            <summary>
            Change the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx0">The first zero-based component of the element index </param>
            <param name="value">The assigned value </param>
        </member>
        <member name="M:CxCore.cxcore.CvSet1D(CxCore.CvMat@,System.Int32,CxCore.CvScalar)">
            <summary>
            Change the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx0">The first zero-based component of the element index </param>
            <param name="value">The assigned value </param>
        </member>
        <member name="M:CxCore.cxcore.CvSet1D(CxCore.CvMatND@,System.Int32,CxCore.CvScalar)">
            <summary>
            Change the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx0">The first zero-based component of the element index </param>
            <param name="value">The assigned value </param>
        </member>
        <member name="M:CxCore.cxcore.CvSet1D(CxCore.CvSeq@,System.Int32,CxCore.CvScalar)">
            <summary>
            Change the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx0">The first zero-based component of the element index </param>
            <param name="value">The assigned value </param>
        </member>
        <member name="M:CxCore.cxcore.CvSet2D(CxCore.IplImage@,System.Int32,System.Int32,CxCore.CvScalar)">
            <summary>
            Change the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx0">The first zero-based component of the element index </param>
            <param name="idx1">The second zero-based component of the element index </param>
            <param name="value">The assigned value </param>
        </member>
        <member name="M:CxCore.cxcore.CvSet2D(CxCore.CvMat@,System.Int32,System.Int32,CxCore.CvScalar)">
            <summary>
            Change the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx0">The first zero-based component of the element index </param>
            <param name="idx1">The second zero-based component of the element index </param>
            <param name="value">The assigned value </param>
        </member>
        <member name="M:CxCore.cxcore.CvSet2D(CxCore.CvMatND@,System.Int32,System.Int32,CxCore.CvScalar)">
            <summary>
            Change the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx0">The first zero-based component of the element index </param>
            <param name="idx1">The second zero-based component of the element index </param>
            <param name="value">The assigned value </param>
        </member>
        <member name="M:CxCore.cxcore.CvSet2D(CxCore.CvSeq@,System.Int32,System.Int32,CxCore.CvScalar)">
            <summary>
            Change the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx0">The first zero-based component of the element index </param>
            <param name="idx1">The second zero-based component of the element index </param>
            <param name="value">The assigned value </param>
        </member>
        <member name="M:CxCore.cxcore.CvSet3D(CxCore.IplImage@,System.Int32,System.Int32,System.Int32,CxCore.CvScalar)">
            <summary>
            Change the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx0">The first zero-based component of the element index </param>
            <param name="idx1">The second zero-based component of the element index </param>
            <param name="idx2">The third zero-based component of the element index </param>
            <param name="value">The assigned value </param>
        </member>
        <member name="M:CxCore.cxcore.CvSet3D(CxCore.CvMat@,System.Int32,System.Int32,System.Int32,CxCore.CvScalar)">
            <summary>
            Change the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx0">The first zero-based component of the element index </param>
            <param name="idx1">The second zero-based component of the element index </param>
            <param name="idx2">The third zero-based component of the element index </param>
            <param name="value">The assigned value </param>
        </member>
        <member name="M:CxCore.cxcore.CvSet3D(CxCore.CvMatND@,System.Int32,System.Int32,System.Int32,CxCore.CvScalar)">
            <summary>
            Change the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx0">The first zero-based component of the element index </param>
            <param name="idx1">The second zero-based component of the element index </param>
            <param name="idx2">The third zero-based component of the element index </param>
            <param name="value">The assigned value </param>
        </member>
        <member name="M:CxCore.cxcore.CvSet3D(CxCore.CvSeq@,System.Int32,System.Int32,System.Int32,CxCore.CvScalar)">
            <summary>
            Change the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx0">The first zero-based component of the element index </param>
            <param name="idx1">The second zero-based component of the element index </param>
            <param name="idx2">The third zero-based component of the element index </param>
            <param name="value">The assigned value </param>
        </member>
        <member name="M:CxCore.cxcore.CvSetND(CxCore.IplImage@,System.Int32[],CxCore.CvScalar)">
            <summary>
            Change the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx">Array of the element indices </param>
            <param name="value">The assigned value </param>
        </member>
        <member name="M:CxCore.cxcore.CvSetND(CxCore.CvMat@,System.Int32[],CxCore.CvScalar)">
            <summary>
            Change the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx">Array of the element indices </param>
            <param name="value">The assigned value </param>
        </member>
        <member name="M:CxCore.cxcore.CvSetND(CxCore.CvMatND@,System.Int32[],CxCore.CvScalar)">
            <summary>
            Change the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx">Array of the element indices </param>
            <param name="value">The assigned value </param>
        </member>
        <member name="M:CxCore.cxcore.CvSetND(CxCore.CvSeq@,System.Int32[],CxCore.CvScalar)">
            <summary>
            Change the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx">Array of the element indices </param>
            <param name="value">The assigned value </param>
        </member>
        <member name="M:CxCore.cxcore.CvSetReal1D(CxCore.IplImage@,System.Int32,System.Double)">
            <summary>
            Change the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx0">The first zero-based component of the element index </param>
            <param name="value">The assigned value </param>
        </member>
        <member name="M:CxCore.cxcore.CvSetReal1D(CxCore.CvMat@,System.Int32,System.Double)">
            <summary>
            Change the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx0">The first zero-based component of the element index </param>
            <param name="value">The assigned value </param>
        </member>
        <member name="M:CxCore.cxcore.CvSetReal1D(CxCore.CvMatND@,System.Int32,System.Double)">
            <summary>
            Change the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx0">The first zero-based component of the element index </param>
            <param name="value">The assigned value </param>
        </member>
        <member name="M:CxCore.cxcore.CvSetReal1D(CxCore.CvSeq@,System.Int32,System.Double)">
            <summary>
            Change the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx0">The first zero-based component of the element index </param>
            <param name="value">The assigned value </param>
        </member>
        <member name="M:CxCore.cxcore.CvSetReal2D(CxCore.IplImage@,System.Int32,System.Int32,System.Double)">
            <summary>
            Change the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx0">The first zero-based component of the element index </param>
            <param name="idx1">The second zero-based component of the element index </param>
            <param name="value">The assigned value </param>
        </member>
        <member name="M:CxCore.cxcore.CvSetReal2D(CxCore.CvMat@,System.Int32,System.Int32,System.Double)">
            <summary>
            Change the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx0">The first zero-based component of the element index </param>
            <param name="idx1">The second zero-based component of the element index </param>
            <param name="value">The assigned value </param>
        </member>
        <member name="M:CxCore.cxcore.CvSetReal2D(CxCore.CvMatND@,System.Int32,System.Int32,System.Double)">
            <summary>
            Change the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx0">The first zero-based component of the element index </param>
            <param name="idx1">The second zero-based component of the element index </param>
            <param name="value">The assigned value </param>
        </member>
        <member name="M:CxCore.cxcore.CvSetReal2D(CxCore.CvSeq@,System.Int32,System.Int32,System.Double)">
            <summary>
            Change the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx0">The first zero-based component of the element index </param>
            <param name="idx1">The second zero-based component of the element index </param>
            <param name="value">The assigned value </param>
        </member>
        <member name="M:CxCore.cxcore.CvSetReal3D(CxCore.IplImage@,System.Int32,System.Int32,System.Int32,System.Double)">
            <summary>
            Change the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx0">The first zero-based component of the element index </param>
            <param name="idx1">The second zero-based component of the element index </param>
            <param name="idx2">The third zero-based component of the element index </param>
            <param name="value">The assigned value </param>
        </member>
        <member name="M:CxCore.cxcore.CvSetReal3D(CxCore.CvMat@,System.Int32,System.Int32,System.Int32,System.Double)">
            <summary>
            Change the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx0">The first zero-based component of the element index </param>
            <param name="idx1">The second zero-based component of the element index </param>
            <param name="idx2">The third zero-based component of the element index </param>
            <param name="value">The assigned value </param>
        </member>
        <member name="M:CxCore.cxcore.CvSetReal3D(CxCore.CvMatND@,System.Int32,System.Int32,System.Int32,System.Double)">
            <summary>
            Change the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx0">The first zero-based component of the element index </param>
            <param name="idx1">The second zero-based component of the element index </param>
            <param name="idx2">The third zero-based component of the element index </param>
            <param name="value">The assigned value </param>
        </member>
        <member name="M:CxCore.cxcore.CvSetReal3D(CxCore.CvSeq@,System.Int32,System.Int32,System.Int32,System.Double)">
            <summary>
            Change the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx0">The first zero-based component of the element index </param>
            <param name="idx1">The second zero-based component of the element index </param>
            <param name="idx2">The third zero-based component of the element index </param>
            <param name="value">The assigned value </param>
        </member>
        <member name="M:CxCore.cxcore.CvSetRealND(CxCore.IplImage@,System.Int32[],System.Double)">
            <summary>
            Change the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx">Array of the element indices </param>
            <param name="value">The assigned value </param>
        </member>
        <member name="M:CxCore.cxcore.CvSetRealND(CxCore.CvMat@,System.Int32[],System.Double)">
            <summary>
            Change the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx">Array of the element indices </param>
            <param name="value">The assigned value </param>
        </member>
        <member name="M:CxCore.cxcore.CvSetRealND(CxCore.CvMatND@,System.Int32[],System.Double)">
            <summary>
            Change the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx">Array of the element indices </param>
            <param name="value">The assigned value </param>
        </member>
        <member name="M:CxCore.cxcore.CvSetRealND(CxCore.CvSeq@,System.Int32[],System.Double)">
            <summary>
            Change the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx">Array of the element indices </param>
            <param name="value">The assigned value </param>
        </member>
        <member name="M:CxCore.cxcore.CvClearND(CxCore.IplImage@,System.Int32[])">
            <summary>
            Clears the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx">Array of the element indices </param>
        </member>
        <member name="M:CxCore.cxcore.CvClearND(CxCore.CvMat@,System.Int32[])">
            <summary>
            Clears the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx">Array of the element indices </param>
        </member>
        <member name="M:CxCore.cxcore.CvClearND(CxCore.CvMatND@,System.Int32[])">
            <summary>
            Clears the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx">Array of the element indices </param>
        </member>
        <member name="M:CxCore.cxcore.CvClearND(CxCore.CvSeq@,System.Int32[])">
            <summary>
            Clears the particular array element
            </summary>
            <param name="arr">Input array. </param>
            <param name="idx">Array of the element indices </param>
        </member>
        <member name="M:CxCore.cxcore.CvCopy(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage)">
            <summary>
            Copies one array to another
            </summary>
            <param name="src">The source array. </param>
            <param name="dst">The destination array. </param>
            <param name="mask">Operation mask, 8-bit single channel array; specifies elements ofdestination array to be changed. </param>
        </member>
        <member name="M:CxCore.cxcore.CvCopy(CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Copies one array to another
            </summary>
            <param name="src">The source array. </param>
            <param name="dst">The destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvCopy(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat)">
            <summary>
            Copies one array to another
            </summary>
            <param name="src">The source array. </param>
            <param name="dst">The destination array. </param>
            <param name="mask">Operation mask, 8-bit single channel array; specifies elements ofdestination array to be changed. </param>
        </member>
        <member name="M:CxCore.cxcore.CvCopy(CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Copies one array to another
            </summary>
            <param name="src">The source array. </param>
            <param name="dst">The destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvCopy(CxCore.CvMatND@,CxCore.CvMatND@,CxCore.CvMatND)">
            <summary>
            Copies one array to another
            </summary>
            <param name="src">The source array. </param>
            <param name="dst">The destination array. </param>
            <param name="mask">Operation mask, 8-bit single channel array; specifies elements ofdestination array to be changed. </param>
        </member>
        <member name="M:CxCore.cxcore.CvCopy(CxCore.CvMatND@,CxCore.CvMatND@)">
            <summary>
            Copies one array to another
            </summary>
            <param name="src">The source array. </param>
            <param name="dst">The destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvCopy(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq)">
            <summary>
            Copies one array to another
            </summary>
            <param name="src">The source array. </param>
            <param name="dst">The destination array. </param>
            <param name="mask">Operation mask, 8-bit single channel array; specifies elements ofdestination array to be changed. </param>
        </member>
        <member name="M:CxCore.cxcore.CvCopy(CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Copies one array to another
            </summary>
            <param name="src">The source array. </param>
            <param name="dst">The destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSet(CxCore.IplImage@,CxCore.CvScalar,CxCore.IplImage)">
            <summary>
            Sets every element of array to given value
            </summary>
            <param name="arr">The destination array. </param>
            <param name="value">Fill value. </param>
            <param name="mask">Operation mask, 8-bit single channel array; specifies elements ofdestination array to be changed. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSet(CxCore.IplImage@,CxCore.CvScalar)">
            <summary>
            Sets every element of array to given value
            </summary>
            <param name="arr">The destination array. </param>
            <param name="value">Fill value. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSet(CxCore.CvMatND@,CxCore.CvScalar,CxCore.CvMatND)">
            <summary>
            Sets every element of array to given value
            </summary>
            <param name="arr">The destination array. </param>
            <param name="value">Fill value. </param>
            <param name="mask">Operation mask, 8-bit single channel array; specifies elements ofdestination array to be changed. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSet(CxCore.CvMatND@,CxCore.CvScalar)">
            <summary>
            Sets every element of array to given value
            </summary>
            <param name="arr">The destination array. </param>
            <param name="value">Fill value. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSet(CxCore.CvMat@,CxCore.CvScalar,CxCore.CvMat)">
            <summary>
            Sets every element of array to given value
            </summary>
            <param name="arr">The destination array. </param>
            <param name="value">Fill value. </param>
            <param name="mask">Operation mask, 8-bit single channel array; specifies elements ofdestination array to be changed. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSet(CxCore.CvMat@,CxCore.CvScalar)">
            <summary>
            Sets every element of array to given value
            </summary>
            <param name="arr">The destination array. </param>
            <param name="value">Fill value. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSet(CxCore.CvSeq@,CxCore.CvScalar,CxCore.CvSeq)">
            <summary>
            Sets every element of array to given value
            </summary>
            <param name="arr">The destination array. </param>
            <param name="value">Fill value. </param>
            <param name="mask">Operation mask, 8-bit single channel array; specifies elements ofdestination array to be changed. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSet(CxCore.CvSeq@,CxCore.CvScalar)">
            <summary>
            Sets every element of array to given value
            </summary>
            <param name="arr">The destination array. </param>
            <param name="value">Fill value. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSetZero(CxCore.IplImage@)">
            <summary>
            Clears the array
            </summary>
            <param name="arr">array to be cleared. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSetZero(CxCore.CvMat@)">
            <summary>
            Clears the array
            </summary>
            <param name="arr">array to be cleared. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSetZero(CxCore.CvMatND@)">
            <summary>
            Clears the array
            </summary>
            <param name="arr">array to be cleared. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSetZero(CxCore.CvSeq@)">
            <summary>
            Clears the array
            </summary>
            <param name="arr">array to be cleared. </param>
        </member>
        <member name="M:CxCore.cxcore.CvZero(CxCore.IplImage@)">
            <summary>
            Clears the array
            </summary>
            <param name="arr">array to be cleared. </param>
        </member>
        <member name="M:CxCore.cxcore.CvZero(CxCore.CvMat@)">
            <summary>
            Clears the array
            </summary>
            <param name="arr">array to be cleared. </param>
        </member>
        <member name="M:CxCore.cxcore.CvZero(CxCore.CvMatND@)">
            <summary>
            Clears the array
            </summary>
            <param name="arr">array to be cleared. </param>
        </member>
        <member name="M:CxCore.cxcore.CvZero(CxCore.CvSeq@)">
            <summary>
            Clears the array
            </summary>
            <param name="arr">array to be cleared. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSetIdentity(CxCore.IplImage@,CxCore.CvScalar)">
            <summary>
            Initializes scaled identity matrix
            </summary>
            <param name="mat">mat</param>
            <param name="value">The value to assign to the diagonal elements. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSetIdentity(CxCore.IplImage@)">
            <summary>
            Initializes scaled identity matrix
            </summary>
            <param name="mat">mat</param>
        </member>
        <member name="M:CxCore.cxcore.CvSetIdentity(CxCore.CvMat@,CxCore.CvScalar)">
            <summary>
            Initializes scaled identity matrix
            </summary>
            <param name="mat">mat</param>
            <param name="value">The value to assign to the diagonal elements. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSetIdentity(CxCore.CvMat@)">
            <summary>
            Initializes scaled identity matrix
            </summary>
            <param name="mat">mat</param>
        </member>
        <member name="M:CxCore.cxcore.CvSetIdentity(CxCore.CvMatND@,CxCore.CvScalar)">
            <summary>
            Initializes scaled identity matrix
            </summary>
            <param name="mat">mat</param>
            <param name="value">The value to assign to the diagonal elements. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSetIdentity(CxCore.CvMatND@)">
            <summary>
            Initializes scaled identity matrix
            </summary>
            <param name="mat">mat</param>
        </member>
        <member name="M:CxCore.cxcore.CvSetIdentity(CxCore.CvSeq@,CxCore.CvScalar)">
            <summary>
            Initializes scaled identity matrix
            </summary>
            <param name="mat">mat</param>
            <param name="value">The value to assign to the diagonal elements. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSetIdentity(CxCore.CvSeq@)">
            <summary>
            Initializes scaled identity matrix
            </summary>
            <param name="mat">mat</param>
        </member>
        <member name="M:CxCore.cxcore.CvRange(CxCore.IplImage@,System.Double,System.Double)">
            <summary>
            Fills matrix with given range of numbers
            </summary>
            <param name="mat">The matrix to initialize. It should be single-channel 32-bit, integer or floating-point. </param>
            <param name="start">The lower inclusive boundary of the range. </param>
            <param name="end">The upper exclusive boundary of the range. </param>
        </member>
        <member name="M:CxCore.cxcore.CvRange(CxCore.CvMat@,System.Double,System.Double)">
            <summary>
            Fills matrix with given range of numbers
            </summary>
            <param name="mat">The matrix to initialize. It should be single-channel 32-bit, integer or floating-point. </param>
            <param name="start">The lower inclusive boundary of the range. </param>
            <param name="end">The upper exclusive boundary of the range. </param>
        </member>
        <member name="M:CxCore.cxcore.CvRange(CxCore.CvMatND@,System.Double,System.Double)">
            <summary>
            Fills matrix with given range of numbers
            </summary>
            <param name="mat">The matrix to initialize. It should be single-channel 32-bit, integer or floating-point. </param>
            <param name="start">The lower inclusive boundary of the range. </param>
            <param name="end">The upper exclusive boundary of the range. </param>
        </member>
        <member name="M:CxCore.cxcore.CvRange(CxCore.CvSeq@,System.Double,System.Double)">
            <summary>
            Fills matrix with given range of numbers
            </summary>
            <param name="mat">The matrix to initialize. It should be single-channel 32-bit, integer or floating-point. </param>
            <param name="start">The lower inclusive boundary of the range. </param>
            <param name="end">The upper exclusive boundary of the range. </param>
        </member>
        <member name="M:CxCore.cxcore.CvReshape(CxCore.IplImage@,CxCore.CvMat@,System.Int32,System.Int32)">
            <summary>
            Changes shape of matrix/image without copying data
            </summary>
            <param name="arr">Input array. </param>
            <param name="header">Output header to be filled. </param>
            <param name="new_cn">New number of channels. new_cn = 0 </param>
            <param name="new_rows">New number of rows. new_rows = 0 new_cn </param>
        </member>
        <member name="M:CxCore.cxcore.CvReshape(CxCore.IplImage@,CxCore.CvMat@,System.Int32)">
            <summary>
            Changes shape of matrix/image without copying data
            </summary>
            <param name="arr">Input array. </param>
            <param name="header">Output header to be filled. </param>
            <param name="new_cn">New number of channels. new_cn = 0 </param>
        </member>
        <member name="M:CxCore.cxcore.CvReshape(CxCore.CvMat@,CxCore.CvMat@,System.Int32,System.Int32)">
            <summary>
            Changes shape of matrix/image without copying data
            </summary>
            <param name="arr">Input array. </param>
            <param name="header">Output header to be filled. </param>
            <param name="new_cn">New number of channels. new_cn = 0 </param>
            <param name="new_rows">New number of rows. new_rows = 0 new_cn </param>
        </member>
        <member name="M:CxCore.cxcore.CvReshape(CxCore.CvMat@,CxCore.CvMat@,System.Int32)">
            <summary>
            Changes shape of matrix/image without copying data
            </summary>
            <param name="arr">Input array. </param>
            <param name="header">Output header to be filled. </param>
            <param name="new_cn">New number of channels. new_cn = 0 </param>
        </member>
        <member name="M:CxCore.cxcore.CvReshape(CxCore.CvSeq@,CxCore.CvMat@,System.Int32,System.Int32)">
            <summary>
            Changes shape of matrix/image without copying data
            </summary>
            <param name="arr">Input array. </param>
            <param name="header">Output header to be filled. </param>
            <param name="new_cn">New number of channels. new_cn = 0 </param>
            <param name="new_rows">New number of rows. new_rows = 0 new_cn </param>
        </member>
        <member name="M:CxCore.cxcore.CvReshape(CxCore.CvSeq@,CxCore.CvMat@,System.Int32)">
            <summary>
            Changes shape of matrix/image without copying data
            </summary>
            <param name="arr">Input array. </param>
            <param name="header">Output header to be filled. </param>
            <param name="new_cn">New number of channels. new_cn = 0 </param>
        </member>
        <member name="M:CxCore.cxcore.CvReshapeMatND(CxCore.IplImage@,System.Int32,CxCore.IplImage@,System.Int32,System.Int32,System.Int32[])">
            <summary>
            Changes shape of multi-dimensional array w/o copying data
            </summary>
            <param name="arr">Input array. </param>
            <param name="sizeof_header">Size of output header to distinguish between IplImage, CvMat and CvMatND output headers. </param>
            <param name="header">Output header to be filled. </param>
            <param name="new_cn">New number of channels. new_cn = 0 </param>
            <param name="new_dims">New number of dimensions. new_dims = 0 </param>
            <param name="new_sizes">Array of new dimension sizes. Only new_dims-1 new_dims = 1 new_sizes </param>
        </member>
        <member name="M:CxCore.cxcore.CvReshapeMatND(CxCore.CvMat@,System.Int32,CxCore.CvMat@,System.Int32,System.Int32,System.Int32[])">
            <summary>
            Changes shape of multi-dimensional array w/o copying data
            </summary>
            <param name="arr">Input array. </param>
            <param name="sizeof_header">Size of output header to distinguish between IplImage, CvMat and CvMatND output headers. </param>
            <param name="header">Output header to be filled. </param>
            <param name="new_cn">New number of channels. new_cn = 0 </param>
            <param name="new_dims">New number of dimensions. new_dims = 0 </param>
            <param name="new_sizes">Array of new dimension sizes. Only new_dims-1 new_dims = 1 new_sizes </param>
        </member>
        <member name="M:CxCore.cxcore.CvReshapeMatND(CxCore.CvMatND@,System.Int32,CxCore.CvMat@,System.Int32,System.Int32,System.Int32[])">
            <summary>
            Changes shape of multi-dimensional array w/o copying data
            </summary>
            <param name="arr">Input array. </param>
            <param name="sizeof_header">Size of output header to distinguish between IplImage, CvMat and CvMatND output headers. </param>
            <param name="header">Output header to be filled. </param>
            <param name="new_cn">New number of channels. new_cn = 0 </param>
            <param name="new_dims">New number of dimensions. new_dims = 0 </param>
            <param name="new_sizes">Array of new dimension sizes. Only new_dims-1 new_dims = 1 new_sizes </param>
        </member>
        <member name="M:CxCore.cxcore.CvReshapeMatND(CxCore.CvSeq@,System.Int32,CxCore.CvSeq@,System.Int32,System.Int32,System.Int32[])">
            <summary>
            Changes shape of multi-dimensional array w/o copying data
            </summary>
            <param name="arr">Input array. </param>
            <param name="sizeof_header">Size of output header to distinguish between IplImage, CvMat and CvMatND output headers. </param>
            <param name="header">Output header to be filled. </param>
            <param name="new_cn">New number of channels. new_cn = 0 </param>
            <param name="new_dims">New number of dimensions. new_dims = 0 </param>
            <param name="new_sizes">Array of new dimension sizes. Only new_dims-1 new_dims = 1 new_sizes </param>
        </member>
        <member name="M:CxCore.cxcore.CvRepeat(CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Fill destination array with tiled source array
            </summary>
            <param name="src">Source array, image or matrix. </param>
            <param name="dst">Destination array, image or matrix. </param>
        </member>
        <member name="M:CxCore.cxcore.CvRepeat(CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Fill destination array with tiled source array
            </summary>
            <param name="src">Source array, image or matrix. </param>
            <param name="dst">Destination array, image or matrix. </param>
        </member>
        <member name="M:CxCore.cxcore.CvRepeat(CxCore.CvMatND@,CxCore.CvMatND@)">
            <summary>
            Fill destination array with tiled source array
            </summary>
            <param name="src">Source array, image or matrix. </param>
            <param name="dst">Destination array, image or matrix. </param>
        </member>
        <member name="M:CxCore.cxcore.CvRepeat(CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Fill destination array with tiled source array
            </summary>
            <param name="src">Source array, image or matrix. </param>
            <param name="dst">Destination array, image or matrix. </param>
        </member>
        <member name="M:CxCore.cxcore.CvFlip(CxCore.IplImage@,CxCore.IplImage@,System.Int32)">
            <summary>
            Flip a 2D array around vertical, horizontall or both axises
            </summary>
            <param name="src">Source array. </param>
            <param name="dst">Destination array. If dst = NULL </param>
            <param name="flip_mode">Specifies how to flip the array. flip_mode = 0 means flipping around x-axis,                 flip_mode > 0 (e.g. 1) means flipping around y-axis                 and flip_mode  0 (e.g. -1) means flipping around both axises.                 See also the discussion below for the formulas </param>
        </member>
        <member name="M:CxCore.cxcore.CvFlip(CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Flip a 2D array around vertical, horizontall or both axises
            </summary>
            <param name="src">Source array. </param>
            <param name="dst">Destination array. If dst = NULL </param>
        </member>
        <member name="M:CxCore.cxcore.CvFlip(CxCore.IplImage@)">
            <summary>
            Flip a 2D array around vertical, horizontall or both axises
            </summary>
            <param name="src">Source array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvFlip(CxCore.IplImage@,System.Int32)">
            <summary>
            Flip a 2D array around vertical, horizontall or both axises
            </summary>
            <param name="src">Source array. </param>
            <param name="flip_mode">Specifies how to flip the array. flip_mode = 0 means flipping around x-axis,                 flip_mode > 0 (e.g. 1) means flipping around y-axis                 and flip_mode  0 (e.g. -1) means flipping around both axises.                 See also the discussion below for the formulas </param>
        </member>
        <member name="M:CxCore.cxcore.CvFlip(CxCore.CvMat@,CxCore.CvMat@,System.Int32)">
            <summary>
            Flip a 2D array around vertical, horizontall or both axises
            </summary>
            <param name="src">Source array. </param>
            <param name="dst">Destination array. If dst = NULL </param>
            <param name="flip_mode">Specifies how to flip the array. flip_mode = 0 means flipping around x-axis,                 flip_mode > 0 (e.g. 1) means flipping around y-axis                 and flip_mode  0 (e.g. -1) means flipping around both axises.                 See also the discussion below for the formulas </param>
        </member>
        <member name="M:CxCore.cxcore.CvFlip(CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Flip a 2D array around vertical, horizontall or both axises
            </summary>
            <param name="src">Source array. </param>
            <param name="dst">Destination array. If dst = NULL </param>
        </member>
        <member name="M:CxCore.cxcore.CvFlip(CxCore.CvMat@)">
            <summary>
            Flip a 2D array around vertical, horizontall or both axises
            </summary>
            <param name="src">Source array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvFlip(CxCore.CvMat@,System.Int32)">
            <summary>
            Flip a 2D array around vertical, horizontall or both axises
            </summary>
            <param name="src">Source array. </param>
            <param name="flip_mode">Specifies how to flip the array. flip_mode = 0 means flipping around x-axis,                 flip_mode > 0 (e.g. 1) means flipping around y-axis                 and flip_mode  0 (e.g. -1) means flipping around both axises.                 See also the discussion below for the formulas </param>
        </member>
        <member name="M:CxCore.cxcore.CvFlip(CxCore.CvMatND@,CxCore.CvMatND@,System.Int32)">
            <summary>
            Flip a 2D array around vertical, horizontall or both axises
            </summary>
            <param name="src">Source array. </param>
            <param name="dst">Destination array. If dst = NULL </param>
            <param name="flip_mode">Specifies how to flip the array. flip_mode = 0 means flipping around x-axis,                 flip_mode > 0 (e.g. 1) means flipping around y-axis                 and flip_mode  0 (e.g. -1) means flipping around both axises.                 See also the discussion below for the formulas </param>
        </member>
        <member name="M:CxCore.cxcore.CvFlip(CxCore.CvMatND@,CxCore.CvMatND@)">
            <summary>
            Flip a 2D array around vertical, horizontall or both axises
            </summary>
            <param name="src">Source array. </param>
            <param name="dst">Destination array. If dst = NULL </param>
        </member>
        <member name="M:CxCore.cxcore.CvFlip(CxCore.CvMatND@)">
            <summary>
            Flip a 2D array around vertical, horizontall or both axises
            </summary>
            <param name="src">Source array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvFlip(CxCore.CvMatND@,System.Int32)">
            <summary>
            Flip a 2D array around vertical, horizontall or both axises
            </summary>
            <param name="src">Source array. </param>
            <param name="flip_mode">Specifies how to flip the array. flip_mode = 0 means flipping around x-axis,                 flip_mode > 0 (e.g. 1) means flipping around y-axis                 and flip_mode  0 (e.g. -1) means flipping around both axises.                 See also the discussion below for the formulas </param>
        </member>
        <member name="M:CxCore.cxcore.CvFlip(CxCore.CvSeq@,CxCore.CvSeq@,System.Int32)">
            <summary>
            Flip a 2D array around vertical, horizontall or both axises
            </summary>
            <param name="src">Source array. </param>
            <param name="dst">Destination array. If dst = NULL </param>
            <param name="flip_mode">Specifies how to flip the array. flip_mode = 0 means flipping around x-axis,                 flip_mode > 0 (e.g. 1) means flipping around y-axis                 and flip_mode  0 (e.g. -1) means flipping around both axises.                 See also the discussion below for the formulas </param>
        </member>
        <member name="M:CxCore.cxcore.CvFlip(CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Flip a 2D array around vertical, horizontall or both axises
            </summary>
            <param name="src">Source array. </param>
            <param name="dst">Destination array. If dst = NULL </param>
        </member>
        <member name="M:CxCore.cxcore.CvFlip(CxCore.CvSeq@)">
            <summary>
            Flip a 2D array around vertical, horizontall or both axises
            </summary>
            <param name="src">Source array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvFlip(CxCore.CvSeq@,System.Int32)">
            <summary>
            Flip a 2D array around vertical, horizontall or both axises
            </summary>
            <param name="src">Source array. </param>
            <param name="flip_mode">Specifies how to flip the array. flip_mode = 0 means flipping around x-axis,                 flip_mode > 0 (e.g. 1) means flipping around y-axis                 and flip_mode  0 (e.g. -1) means flipping around both axises.                 See also the discussion below for the formulas </param>
        </member>
        <member name="M:CxCore.cxcore.CvSplit(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Divides multi-channel array into several single-channel arrays or extractsa single channel from the array
            </summary>
            <param name="src">Source array. </param>
            <param name="dst0">dst0</param>
            <param name="dst1">dst1</param>
            <param name="dst2">dst2</param>
            <param name="dst3">dst3</param>
        </member>
        <member name="M:CxCore.cxcore.CvSplit(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Divides multi-channel array into several single-channel arrays or extractsa single channel from the array
            </summary>
            <param name="src">Source array. </param>
            <param name="dst0">dst0</param>
            <param name="dst1">dst1</param>
            <param name="dst2">dst2</param>
        </member>
        <member name="M:CxCore.cxcore.CvSplit(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Divides multi-channel array into several single-channel arrays or extractsa single channel from the array
            </summary>
            <param name="src">Source array. </param>
            <param name="dst0">dst0</param>
            <param name="dst1">dst1</param>
        </member>
        <member name="M:CxCore.cxcore.CvSplit(CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Divides multi-channel array into several single-channel arrays or extractsa single channel from the array
            </summary>
            <param name="src">Source array. </param>
            <param name="dst0">dst0</param>
        </member>
        <member name="M:CxCore.cxcore.CvSplit(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Divides multi-channel array into several single-channel arrays or extractsa single channel from the array
            </summary>
            <param name="src">Source array. </param>
            <param name="dst0">dst0</param>
            <param name="dst1">dst1</param>
            <param name="dst2">dst2</param>
            <param name="dst3">dst3</param>
        </member>
        <member name="M:CxCore.cxcore.CvSplit(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Divides multi-channel array into several single-channel arrays or extractsa single channel from the array
            </summary>
            <param name="src">Source array. </param>
            <param name="dst0">dst0</param>
            <param name="dst1">dst1</param>
            <param name="dst2">dst2</param>
        </member>
        <member name="M:CxCore.cxcore.CvSplit(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Divides multi-channel array into several single-channel arrays or extractsa single channel from the array
            </summary>
            <param name="src">Source array. </param>
            <param name="dst0">dst0</param>
            <param name="dst1">dst1</param>
        </member>
        <member name="M:CxCore.cxcore.CvSplit(CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Divides multi-channel array into several single-channel arrays or extractsa single channel from the array
            </summary>
            <param name="src">Source array. </param>
            <param name="dst0">dst0</param>
        </member>
        <member name="M:CxCore.cxcore.CvMerge(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Composes multi-channel array from several single-channel arrays or inserts asingle channel into the array
            </summary>
            <param name="src0">src0</param>
            <param name="src1">src1</param>
            <param name="src2">src2</param>
            <param name="src3">src3</param>
            <param name="dst">Destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvMerge(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Composes multi-channel array from several single-channel arrays or inserts asingle channel into the array
            </summary>
            <param name="src1">src1</param>
            <param name="src2">src2</param>
            <param name="src3">src3</param>
            <param name="dst">Destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvMerge(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Composes multi-channel array from several single-channel arrays or inserts asingle channel into the array
            </summary>
            <param name="src2">src2</param>
            <param name="src3">src3</param>
            <param name="dst">Destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvMerge(CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Composes multi-channel array from several single-channel arrays or inserts asingle channel into the array
            </summary>
            <param name="src3">src3</param>
            <param name="dst">Destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvMerge(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Composes multi-channel array from several single-channel arrays or inserts asingle channel into the array
            </summary>
            <param name="src0">src0</param>
            <param name="src1">src1</param>
            <param name="src2">src2</param>
            <param name="src3">src3</param>
            <param name="dst">Destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvMerge(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Composes multi-channel array from several single-channel arrays or inserts asingle channel into the array
            </summary>
            <param name="src1">src1</param>
            <param name="src2">src2</param>
            <param name="src3">src3</param>
            <param name="dst">Destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvMerge(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Composes multi-channel array from several single-channel arrays or inserts asingle channel into the array
            </summary>
            <param name="src2">src2</param>
            <param name="src3">src3</param>
            <param name="dst">Destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvMerge(CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Composes multi-channel array from several single-channel arrays or inserts asingle channel into the array
            </summary>
            <param name="src3">src3</param>
            <param name="dst">Destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvMixChannels(CxCore.IplImage[],System.Int32,CxCore.IplImage[],System.Int32,System.Int32[],System.Int32)">
            <summary>
            Copies several channels from input arrays to   certain channels of output arrays
            </summary>
            <param name="src">The array of input arrays. </param>
            <param name="src_count">The number of input arrays. </param>
            <param name="dst">The array of output arrays. </param>
            <param name="dst_count">The number of output arrays. </param>
            <param name="from_to">The array of pairs of indices of the planes copied. from_to[k*2] from_to[k*2+1] from_to[k*2] </param>
            <param name="pair_count">The number of pairs in from_to </param>
        </member>
        <member name="M:CxCore.cxcore.CvMixChannels(CxCore.CvMat[],System.Int32,CxCore.CvMat[],System.Int32,System.Int32[],System.Int32)">
            <summary>
            Copies several channels from input arrays to   certain channels of output arrays
            </summary>
            <param name="src">The array of input arrays. </param>
            <param name="src_count">The number of input arrays. </param>
            <param name="dst">The array of output arrays. </param>
            <param name="dst_count">The number of output arrays. </param>
            <param name="from_to">The array of pairs of indices of the planes copied. from_to[k*2] from_to[k*2+1] from_to[k*2] </param>
            <param name="pair_count">The number of pairs in from_to </param>
        </member>
        <member name="M:CxCore.cxcore.CvMixChannels(CxCore.CvMatND[],System.Int32,CxCore.CvMatND[],System.Int32,System.Int32[],System.Int32)">
            <summary>
            Copies several channels from input arrays to   certain channels of output arrays
            </summary>
            <param name="src">The array of input arrays. </param>
            <param name="src_count">The number of input arrays. </param>
            <param name="dst">The array of output arrays. </param>
            <param name="dst_count">The number of output arrays. </param>
            <param name="from_to">The array of pairs of indices of the planes copied. from_to[k*2] from_to[k*2+1] from_to[k*2] </param>
            <param name="pair_count">The number of pairs in from_to </param>
        </member>
        <member name="M:CxCore.cxcore.CvRandShuffle(CxCore.IplImage@,System.UInt64,System.Double)">
            <summary>
            Randomly shuffles the array elements
            </summary>
            <param name="mat">The input/output matrix. It is shuffled in-place. </param>
            <param name="rng">The </param>
            <param name="iter_factor">The relative parameter that characterizes intensity of the shuffling performed.                   See the description below. </param>
        </member>
        <member name="M:CxCore.cxcore.CvRandShuffle(CxCore.IplImage@,System.UInt64)">
            <summary>
            Randomly shuffles the array elements
            </summary>
            <param name="mat">The input/output matrix. It is shuffled in-place. </param>
            <param name="rng">The </param>
        </member>
        <member name="M:CxCore.cxcore.CvRandShuffle(CxCore.CvMat@,System.UInt64,System.Double)">
            <summary>
            Randomly shuffles the array elements
            </summary>
            <param name="mat">The input/output matrix. It is shuffled in-place. </param>
            <param name="rng">The </param>
            <param name="iter_factor">The relative parameter that characterizes intensity of the shuffling performed.                   See the description below. </param>
        </member>
        <member name="M:CxCore.cxcore.CvRandShuffle(CxCore.CvMat@,System.UInt64)">
            <summary>
            Randomly shuffles the array elements
            </summary>
            <param name="mat">The input/output matrix. It is shuffled in-place. </param>
            <param name="rng">The </param>
        </member>
        <member name="M:CxCore.cxcore.CvRandShuffle(CxCore.CvSeq@,System.UInt64,System.Double)">
            <summary>
            Randomly shuffles the array elements
            </summary>
            <param name="mat">The input/output matrix. It is shuffled in-place. </param>
            <param name="rng">The </param>
            <param name="iter_factor">The relative parameter that characterizes intensity of the shuffling performed.                   See the description below. </param>
        </member>
        <member name="M:CxCore.cxcore.CvRandShuffle(CxCore.CvSeq@,System.UInt64)">
            <summary>
            Randomly shuffles the array elements
            </summary>
            <param name="mat">The input/output matrix. It is shuffled in-place. </param>
            <param name="rng">The </param>
        </member>
        <member name="M:CxCore.cxcore.CvLUT(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Performs look-up table transform of array
            </summary>
            <param name="src">Source array of 8-bit elements. </param>
            <param name="dst">Destination array of arbitrary depth and of the same number of channels as thesource array. </param>
            <param name="lut">Look-up table of 256 elements; should have the same depth as thedestination array. In case of multi-channel source and destination arrays, the tableshould either have a single-channel (in this case the same table is used for all channels),or the same number of channels as the source/destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvLUT(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Performs look-up table transform of array
            </summary>
            <param name="src">Source array of 8-bit elements. </param>
            <param name="dst">Destination array of arbitrary depth and of the same number of channels as thesource array. </param>
            <param name="lut">Look-up table of 256 elements; should have the same depth as thedestination array. In case of multi-channel source and destination arrays, the tableshould either have a single-channel (in this case the same table is used for all channels),or the same number of channels as the source/destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvLUT(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Performs look-up table transform of array
            </summary>
            <param name="src">Source array of 8-bit elements. </param>
            <param name="dst">Destination array of arbitrary depth and of the same number of channels as thesource array. </param>
            <param name="lut">Look-up table of 256 elements; should have the same depth as thedestination array. In case of multi-channel source and destination arrays, the tableshould either have a single-channel (in this case the same table is used for all channels),or the same number of channels as the source/destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvConvertScale(CxCore.IplImage@,CxCore.IplImage@,System.Double,System.Double)">
            <summary>
            Converts one array to another with optional linear transformation
            </summary>
            <param name="src">Source array. </param>
            <param name="dst">Destination array. </param>
            <param name="scale">Scale factor. </param>
            <param name="shift">Value added to the scaled source array elements. </param>
        </member>
        <member name="M:CxCore.cxcore.CvConvertScale(CxCore.IplImage@,CxCore.IplImage@,System.Double)">
            <summary>
            Converts one array to another with optional linear transformation
            </summary>
            <param name="src">Source array. </param>
            <param name="dst">Destination array. </param>
            <param name="scale">Scale factor. </param>
        </member>
        <member name="M:CxCore.cxcore.CvConvertScale(CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Converts one array to another with optional linear transformation
            </summary>
            <param name="src">Source array. </param>
            <param name="dst">Destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvConvertScale(CxCore.CvMat@,CxCore.CvMat@,System.Double,System.Double)">
            <summary>
            Converts one array to another with optional linear transformation
            </summary>
            <param name="src">Source array. </param>
            <param name="dst">Destination array. </param>
            <param name="scale">Scale factor. </param>
            <param name="shift">Value added to the scaled source array elements. </param>
        </member>
        <member name="M:CxCore.cxcore.CvConvertScale(CxCore.CvMat@,CxCore.CvMat@,System.Double)">
            <summary>
            Converts one array to another with optional linear transformation
            </summary>
            <param name="src">Source array. </param>
            <param name="dst">Destination array. </param>
            <param name="scale">Scale factor. </param>
        </member>
        <member name="M:CxCore.cxcore.CvConvertScale(CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Converts one array to another with optional linear transformation
            </summary>
            <param name="src">Source array. </param>
            <param name="dst">Destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvConvertScale(CxCore.CvSeq@,CxCore.CvSeq@,System.Double,System.Double)">
            <summary>
            Converts one array to another with optional linear transformation
            </summary>
            <param name="src">Source array. </param>
            <param name="dst">Destination array. </param>
            <param name="scale">Scale factor. </param>
            <param name="shift">Value added to the scaled source array elements. </param>
        </member>
        <member name="M:CxCore.cxcore.CvConvertScale(CxCore.CvSeq@,CxCore.CvSeq@,System.Double)">
            <summary>
            Converts one array to another with optional linear transformation
            </summary>
            <param name="src">Source array. </param>
            <param name="dst">Destination array. </param>
            <param name="scale">Scale factor. </param>
        </member>
        <member name="M:CxCore.cxcore.CvConvertScale(CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Converts one array to another with optional linear transformation
            </summary>
            <param name="src">Source array. </param>
            <param name="dst">Destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvConvertScale(System.IntPtr,System.IntPtr,System.Double,System.Double)">
            <summary>
            Converts one array to another with optional linear transformation
            </summary>
            <param name="src">Source array. </param>
            <param name="dst">Destination array. </param>
            <param name="scale">Scale factor. </param>
            <param name="shift">Value added to the scaled source array elements. </param>
        </member>
        <member name="M:CxCore.cxcore.CvConvertScale(System.IntPtr,System.IntPtr,System.Double)">
            <summary>
            Converts one array to another with optional linear transformation
            </summary>
            <param name="src">Source array. </param>
            <param name="dst">Destination array. </param>
            <param name="scale">Scale factor. </param>
        </member>
        <member name="M:CxCore.cxcore.CvConvertScale(System.IntPtr,System.IntPtr)">
            <summary>
            Converts one array to another with optional linear transformation
            </summary>
            <param name="src">Source array. </param>
            <param name="dst">Destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvConvertScaleAbs(CxCore.IplImage@,CxCore.IplImage@,System.Double,System.Double)">
            <summary>
            Converts input array elements to 8-bit unsigned integer another with optional linear transformation
            </summary>
            <param name="src">Source array. </param>
            <param name="dst">Destination array (should have 8u depth). </param>
            <param name="scale">ScaleAbs factor. </param>
            <param name="shift">Value added to the scaled source array elements. </param>
        </member>
        <member name="M:CxCore.cxcore.CvConvertScaleAbs(CxCore.IplImage@,CxCore.IplImage@,System.Double)">
            <summary>
            Converts input array elements to 8-bit unsigned integer another with optional linear transformation
            </summary>
            <param name="src">Source array. </param>
            <param name="dst">Destination array (should have 8u depth). </param>
            <param name="scale">ScaleAbs factor. </param>
        </member>
        <member name="M:CxCore.cxcore.CvConvertScaleAbs(CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Converts input array elements to 8-bit unsigned integer another with optional linear transformation
            </summary>
            <param name="src">Source array. </param>
            <param name="dst">Destination array (should have 8u depth). </param>
        </member>
        <member name="M:CxCore.cxcore.CvConvertScaleAbs(CxCore.CvMat@,CxCore.CvMat@,System.Double,System.Double)">
            <summary>
            Converts input array elements to 8-bit unsigned integer another with optional linear transformation
            </summary>
            <param name="src">Source array. </param>
            <param name="dst">Destination array (should have 8u depth). </param>
            <param name="scale">ScaleAbs factor. </param>
            <param name="shift">Value added to the scaled source array elements. </param>
        </member>
        <member name="M:CxCore.cxcore.CvConvertScaleAbs(CxCore.CvMat@,CxCore.CvMat@,System.Double)">
            <summary>
            Converts input array elements to 8-bit unsigned integer another with optional linear transformation
            </summary>
            <param name="src">Source array. </param>
            <param name="dst">Destination array (should have 8u depth). </param>
            <param name="scale">ScaleAbs factor. </param>
        </member>
        <member name="M:CxCore.cxcore.CvConvertScaleAbs(CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Converts input array elements to 8-bit unsigned integer another with optional linear transformation
            </summary>
            <param name="src">Source array. </param>
            <param name="dst">Destination array (should have 8u depth). </param>
        </member>
        <member name="M:CxCore.cxcore.CvConvertScaleAbs(CxCore.CvSeq@,CxCore.CvSeq@,System.Double,System.Double)">
            <summary>
            Converts input array elements to 8-bit unsigned integer another with optional linear transformation
            </summary>
            <param name="src">Source array. </param>
            <param name="dst">Destination array (should have 8u depth). </param>
            <param name="scale">ScaleAbs factor. </param>
            <param name="shift">Value added to the scaled source array elements. </param>
        </member>
        <member name="M:CxCore.cxcore.CvConvertScaleAbs(CxCore.CvSeq@,CxCore.CvSeq@,System.Double)">
            <summary>
            Converts input array elements to 8-bit unsigned integer another with optional linear transformation
            </summary>
            <param name="src">Source array. </param>
            <param name="dst">Destination array (should have 8u depth). </param>
            <param name="scale">ScaleAbs factor. </param>
        </member>
        <member name="M:CxCore.cxcore.CvConvertScaleAbs(CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Converts input array elements to 8-bit unsigned integer another with optional linear transformation
            </summary>
            <param name="src">Source array. </param>
            <param name="dst">Destination array (should have 8u depth). </param>
        </member>
        <member name="M:CxCore.cxcore.CvAdd(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Computes per-element sum of two arrays
            </summary>
            <param name="src1">The first source array. </param>
            <param name="src2">The second source array. </param>
            <param name="dst">The destination array. </param>
            <param name="mask">Operation mask, 8-bit single channel array; specifies elements ofdestination array to be changed. </param>
        </member>
        <member name="M:CxCore.cxcore.CvAdd(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Computes per-element sum of two arrays
            </summary>
            <param name="src1">The first source array. </param>
            <param name="src2">The second source array. </param>
            <param name="dst">The destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvAdd(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Computes per-element sum of two arrays
            </summary>
            <param name="src1">The first source array. </param>
            <param name="src2">The second source array. </param>
            <param name="dst">The destination array. </param>
            <param name="mask">Operation mask, 8-bit single channel array; specifies elements ofdestination array to be changed. </param>
        </member>
        <member name="M:CxCore.cxcore.CvAdd(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Computes per-element sum of two arrays
            </summary>
            <param name="src1">The first source array. </param>
            <param name="src2">The second source array. </param>
            <param name="dst">The destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvAdd(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Computes per-element sum of two arrays
            </summary>
            <param name="src1">The first source array. </param>
            <param name="src2">The second source array. </param>
            <param name="dst">The destination array. </param>
            <param name="mask">Operation mask, 8-bit single channel array; specifies elements ofdestination array to be changed. </param>
        </member>
        <member name="M:CxCore.cxcore.CvAdd(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Computes per-element sum of two arrays
            </summary>
            <param name="src1">The first source array. </param>
            <param name="src2">The second source array. </param>
            <param name="dst">The destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvAddS(CxCore.IplImage@,CxCore.CvScalar,CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Computes sum of array and scalar
            </summary>
            <param name="src">The source array. </param>
            <param name="value">Added scalar. </param>
            <param name="dst">The destination array. </param>
            <param name="mask">Operation mask, 8-bit single channel array; specifies elements ofdestination array to be changed. </param>
        </member>
        <member name="M:CxCore.cxcore.CvAddS(CxCore.IplImage@,CxCore.CvScalar,CxCore.IplImage@)">
            <summary>
            Computes sum of array and scalar
            </summary>
            <param name="src">The source array. </param>
            <param name="value">Added scalar. </param>
            <param name="dst">The destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvAddS(CxCore.CvMat@,CxCore.CvScalar,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Computes sum of array and scalar
            </summary>
            <param name="src">The source array. </param>
            <param name="value">Added scalar. </param>
            <param name="dst">The destination array. </param>
            <param name="mask">Operation mask, 8-bit single channel array; specifies elements ofdestination array to be changed. </param>
        </member>
        <member name="M:CxCore.cxcore.CvAddS(CxCore.CvMat@,CxCore.CvScalar,CxCore.CvMat@)">
            <summary>
            Computes sum of array and scalar
            </summary>
            <param name="src">The source array. </param>
            <param name="value">Added scalar. </param>
            <param name="dst">The destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvAddS(CxCore.CvSeq@,CxCore.CvScalar,CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Computes sum of array and scalar
            </summary>
            <param name="src">The source array. </param>
            <param name="value">Added scalar. </param>
            <param name="dst">The destination array. </param>
            <param name="mask">Operation mask, 8-bit single channel array; specifies elements ofdestination array to be changed. </param>
        </member>
        <member name="M:CxCore.cxcore.CvAddS(CxCore.CvSeq@,CxCore.CvScalar,CxCore.CvSeq@)">
            <summary>
            Computes sum of array and scalar
            </summary>
            <param name="src">The source array. </param>
            <param name="value">Added scalar. </param>
            <param name="dst">The destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvAddWeighted(CxCore.IplImage@,System.Double,CxCore.IplImage@,System.Double,System.Double,CxCore.IplImage@)">
            <summary>
            Computes weighted sum of two arrays
            </summary>
            <param name="src1">The first source array. </param>
            <param name="alpha">Weight of the first array elements. </param>
            <param name="src2">The second source array. </param>
            <param name="beta">Weight of the second array elements. </param>
            <param name="gamma">Scalar, added to each sum. </param>
            <param name="dst">The destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvAddWeighted(CxCore.CvMat@,System.Double,CxCore.CvMat@,System.Double,System.Double,CxCore.CvMat@)">
            <summary>
            Computes weighted sum of two arrays
            </summary>
            <param name="src1">The first source array. </param>
            <param name="alpha">Weight of the first array elements. </param>
            <param name="src2">The second source array. </param>
            <param name="beta">Weight of the second array elements. </param>
            <param name="gamma">Scalar, added to each sum. </param>
            <param name="dst">The destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvAddWeighted(CxCore.CvSeq@,System.Double,CxCore.CvSeq@,System.Double,System.Double,CxCore.CvSeq@)">
            <summary>
            Computes weighted sum of two arrays
            </summary>
            <param name="src1">The first source array. </param>
            <param name="alpha">Weight of the first array elements. </param>
            <param name="src2">The second source array. </param>
            <param name="beta">Weight of the second array elements. </param>
            <param name="gamma">Scalar, added to each sum. </param>
            <param name="dst">The destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSub(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Computes per-element difference between two arrays
            </summary>
            <param name="src1">The first source array. </param>
            <param name="src2">The second source array. </param>
            <param name="dst">The destination array. </param>
            <param name="mask">Operation mask, 8-bit single channel array; specifies elements ofdestination array to be changed. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSub(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Computes per-element difference between two arrays
            </summary>
            <param name="src1">The first source array. </param>
            <param name="src2">The second source array. </param>
            <param name="dst">The destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSub(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Computes per-element difference between two arrays
            </summary>
            <param name="src1">The first source array. </param>
            <param name="src2">The second source array. </param>
            <param name="dst">The destination array. </param>
            <param name="mask">Operation mask, 8-bit single channel array; specifies elements ofdestination array to be changed. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSub(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Computes per-element difference between two arrays
            </summary>
            <param name="src1">The first source array. </param>
            <param name="src2">The second source array. </param>
            <param name="dst">The destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSub(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Computes per-element difference between two arrays
            </summary>
            <param name="src1">The first source array. </param>
            <param name="src2">The second source array. </param>
            <param name="dst">The destination array. </param>
            <param name="mask">Operation mask, 8-bit single channel array; specifies elements ofdestination array to be changed. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSub(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Computes per-element difference between two arrays
            </summary>
            <param name="src1">The first source array. </param>
            <param name="src2">The second source array. </param>
            <param name="dst">The destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSubRS(CxCore.IplImage@,CxCore.CvScalar,CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Computes difference between scalar and array
            </summary>
            <param name="src">The first source array. </param>
            <param name="value">Scalar to subtract from. </param>
            <param name="dst">The destination array. </param>
            <param name="mask">Operation mask, 8-bit single channel array; specifies elements ofdestination array to be changed. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSubRS(CxCore.IplImage@,CxCore.CvScalar,CxCore.IplImage@)">
            <summary>
            Computes difference between scalar and array
            </summary>
            <param name="src">The first source array. </param>
            <param name="value">Scalar to subtract from. </param>
            <param name="dst">The destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSubRS(CxCore.CvMat@,CxCore.CvScalar,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Computes difference between scalar and array
            </summary>
            <param name="src">The first source array. </param>
            <param name="value">Scalar to subtract from. </param>
            <param name="dst">The destination array. </param>
            <param name="mask">Operation mask, 8-bit single channel array; specifies elements ofdestination array to be changed. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSubRS(CxCore.CvMat@,CxCore.CvScalar,CxCore.CvMat@)">
            <summary>
            Computes difference between scalar and array
            </summary>
            <param name="src">The first source array. </param>
            <param name="value">Scalar to subtract from. </param>
            <param name="dst">The destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSubRS(CxCore.CvSeq@,CxCore.CvScalar,CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Computes difference between scalar and array
            </summary>
            <param name="src">The first source array. </param>
            <param name="value">Scalar to subtract from. </param>
            <param name="dst">The destination array. </param>
            <param name="mask">Operation mask, 8-bit single channel array; specifies elements ofdestination array to be changed. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSubRS(CxCore.CvSeq@,CxCore.CvScalar,CxCore.CvSeq@)">
            <summary>
            Computes difference between scalar and array
            </summary>
            <param name="src">The first source array. </param>
            <param name="value">Scalar to subtract from. </param>
            <param name="dst">The destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvMul(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@,System.Double)">
            <summary>
            Calculates per-element product of two arrays
            </summary>
            <param name="src1">The first source array. </param>
            <param name="src2">The second source array. </param>
            <param name="dst">The destination array. </param>
            <param name="scale">Optional scale factor </param>
        </member>
        <member name="M:CxCore.cxcore.CvMul(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Calculates per-element product of two arrays
            </summary>
            <param name="src1">The first source array. </param>
            <param name="src2">The second source array. </param>
            <param name="dst">The destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvMul(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,System.Double)">
            <summary>
            Calculates per-element product of two arrays
            </summary>
            <param name="src1">The first source array. </param>
            <param name="src2">The second source array. </param>
            <param name="dst">The destination array. </param>
            <param name="scale">Optional scale factor </param>
        </member>
        <member name="M:CxCore.cxcore.CvMul(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Calculates per-element product of two arrays
            </summary>
            <param name="src1">The first source array. </param>
            <param name="src2">The second source array. </param>
            <param name="dst">The destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvMul(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@,System.Double)">
            <summary>
            Calculates per-element product of two arrays
            </summary>
            <param name="src1">The first source array. </param>
            <param name="src2">The second source array. </param>
            <param name="dst">The destination array. </param>
            <param name="scale">Optional scale factor </param>
        </member>
        <member name="M:CxCore.cxcore.CvMul(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Calculates per-element product of two arrays
            </summary>
            <param name="src1">The first source array. </param>
            <param name="src2">The second source array. </param>
            <param name="dst">The destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvDiv(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@,System.Double)">
            <summary>
            Performs per-element division of two arrays
            </summary>
            <param name="src1">The first source array. If the pointer is NULL, the array is assumed to be all 1?s. </param>
            <param name="src2">The second source array. </param>
            <param name="dst">The destination array. </param>
            <param name="scale">Optional scale factor </param>
        </member>
        <member name="M:CxCore.cxcore.CvDiv(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Performs per-element division of two arrays
            </summary>
            <param name="src1">The first source array. If the pointer is NULL, the array is assumed to be all 1?s. </param>
            <param name="src2">The second source array. </param>
            <param name="dst">The destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvDiv(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,System.Double)">
            <summary>
            Performs per-element division of two arrays
            </summary>
            <param name="src1">The first source array. If the pointer is NULL, the array is assumed to be all 1?s. </param>
            <param name="src2">The second source array. </param>
            <param name="dst">The destination array. </param>
            <param name="scale">Optional scale factor </param>
        </member>
        <member name="M:CxCore.cxcore.CvDiv(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Performs per-element division of two arrays
            </summary>
            <param name="src1">The first source array. If the pointer is NULL, the array is assumed to be all 1?s. </param>
            <param name="src2">The second source array. </param>
            <param name="dst">The destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvDiv(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@,System.Double)">
            <summary>
            Performs per-element division of two arrays
            </summary>
            <param name="src1">The first source array. If the pointer is NULL, the array is assumed to be all 1?s. </param>
            <param name="src2">The second source array. </param>
            <param name="dst">The destination array. </param>
            <param name="scale">Optional scale factor </param>
        </member>
        <member name="M:CxCore.cxcore.CvDiv(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Performs per-element division of two arrays
            </summary>
            <param name="src1">The first source array. If the pointer is NULL, the array is assumed to be all 1?s. </param>
            <param name="src2">The second source array. </param>
            <param name="dst">The destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvAnd(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Calculates per-element bit-wise conjunction of two arrays
            </summary>
            <param name="src1">The first source array. </param>
            <param name="src2">The second source array. </param>
            <param name="dst">The destination array. </param>
            <param name="mask">Operation mask, 8-bit single channel array; specifies elements ofdestination array to be changed. </param>
        </member>
        <member name="M:CxCore.cxcore.CvAnd(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Calculates per-element bit-wise conjunction of two arrays
            </summary>
            <param name="src1">The first source array. </param>
            <param name="src2">The second source array. </param>
            <param name="dst">The destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvAnd(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Calculates per-element bit-wise conjunction of two arrays
            </summary>
            <param name="src1">The first source array. </param>
            <param name="src2">The second source array. </param>
            <param name="dst">The destination array. </param>
            <param name="mask">Operation mask, 8-bit single channel array; specifies elements ofdestination array to be changed. </param>
        </member>
        <member name="M:CxCore.cxcore.CvAnd(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Calculates per-element bit-wise conjunction of two arrays
            </summary>
            <param name="src1">The first source array. </param>
            <param name="src2">The second source array. </param>
            <param name="dst">The destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvAnd(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Calculates per-element bit-wise conjunction of two arrays
            </summary>
            <param name="src1">The first source array. </param>
            <param name="src2">The second source array. </param>
            <param name="dst">The destination array. </param>
            <param name="mask">Operation mask, 8-bit single channel array; specifies elements ofdestination array to be changed. </param>
        </member>
        <member name="M:CxCore.cxcore.CvAnd(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Calculates per-element bit-wise conjunction of two arrays
            </summary>
            <param name="src1">The first source array. </param>
            <param name="src2">The second source array. </param>
            <param name="dst">The destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvAndS(CxCore.IplImage@,CxCore.CvScalar,CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Calculates per-element bit-wise conjunction of array and scalar
            </summary>
            <param name="src">The source array. </param>
            <param name="value">Scalar to use in the operation. </param>
            <param name="dst">The destination array. </param>
            <param name="mask">Operation mask, 8-bit single channel array; specifies elements ofdestination array to be changed. </param>
        </member>
        <member name="M:CxCore.cxcore.CvAndS(CxCore.IplImage@,CxCore.CvScalar,CxCore.IplImage@)">
            <summary>
            Calculates per-element bit-wise conjunction of array and scalar
            </summary>
            <param name="src">The source array. </param>
            <param name="value">Scalar to use in the operation. </param>
            <param name="dst">The destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvAndS(CxCore.CvMat@,CxCore.CvScalar,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Calculates per-element bit-wise conjunction of array and scalar
            </summary>
            <param name="src">The source array. </param>
            <param name="value">Scalar to use in the operation. </param>
            <param name="dst">The destination array. </param>
            <param name="mask">Operation mask, 8-bit single channel array; specifies elements ofdestination array to be changed. </param>
        </member>
        <member name="M:CxCore.cxcore.CvAndS(CxCore.CvMat@,CxCore.CvScalar,CxCore.CvMat@)">
            <summary>
            Calculates per-element bit-wise conjunction of array and scalar
            </summary>
            <param name="src">The source array. </param>
            <param name="value">Scalar to use in the operation. </param>
            <param name="dst">The destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvAndS(CxCore.CvSeq@,CxCore.CvScalar,CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Calculates per-element bit-wise conjunction of array and scalar
            </summary>
            <param name="src">The source array. </param>
            <param name="value">Scalar to use in the operation. </param>
            <param name="dst">The destination array. </param>
            <param name="mask">Operation mask, 8-bit single channel array; specifies elements ofdestination array to be changed. </param>
        </member>
        <member name="M:CxCore.cxcore.CvAndS(CxCore.CvSeq@,CxCore.CvScalar,CxCore.CvSeq@)">
            <summary>
            Calculates per-element bit-wise conjunction of array and scalar
            </summary>
            <param name="src">The source array. </param>
            <param name="value">Scalar to use in the operation. </param>
            <param name="dst">The destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvOr(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Calculates per-element bit-wise disjunction of two arrays
            </summary>
            <param name="src1">The first source array. </param>
            <param name="src2">The second source array. </param>
            <param name="dst">The destination array. </param>
            <param name="mask">Operation mask, 8-bit single channel array; specifies elements ofdestination array to be changed. </param>
        </member>
        <member name="M:CxCore.cxcore.CvOr(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Calculates per-element bit-wise disjunction of two arrays
            </summary>
            <param name="src1">The first source array. </param>
            <param name="src2">The second source array. </param>
            <param name="dst">The destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvOr(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Calculates per-element bit-wise disjunction of two arrays
            </summary>
            <param name="src1">The first source array. </param>
            <param name="src2">The second source array. </param>
            <param name="dst">The destination array. </param>
            <param name="mask">Operation mask, 8-bit single channel array; specifies elements ofdestination array to be changed. </param>
        </member>
        <member name="M:CxCore.cxcore.CvOr(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Calculates per-element bit-wise disjunction of two arrays
            </summary>
            <param name="src1">The first source array. </param>
            <param name="src2">The second source array. </param>
            <param name="dst">The destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvOr(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Calculates per-element bit-wise disjunction of two arrays
            </summary>
            <param name="src1">The first source array. </param>
            <param name="src2">The second source array. </param>
            <param name="dst">The destination array. </param>
            <param name="mask">Operation mask, 8-bit single channel array; specifies elements ofdestination array to be changed. </param>
        </member>
        <member name="M:CxCore.cxcore.CvOr(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Calculates per-element bit-wise disjunction of two arrays
            </summary>
            <param name="src1">The first source array. </param>
            <param name="src2">The second source array. </param>
            <param name="dst">The destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvOrS(CxCore.IplImage@,CxCore.CvScalar,CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Calculates per-element bit-wise disjunction of array and scalar
            </summary>
            <param name="src">src</param>
            <param name="value">Scalar to use in the operation. </param>
            <param name="dst">The destination array. </param>
            <param name="mask">Operation mask, 8-bit single channel array; specifies elements ofdestination array to be changed. </param>
        </member>
        <member name="M:CxCore.cxcore.CvOrS(CxCore.IplImage@,CxCore.CvScalar,CxCore.IplImage@)">
            <summary>
            Calculates per-element bit-wise disjunction of array and scalar
            </summary>
            <param name="src">src</param>
            <param name="value">Scalar to use in the operation. </param>
            <param name="dst">The destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvOrS(CxCore.CvMat@,CxCore.CvScalar,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Calculates per-element bit-wise disjunction of array and scalar
            </summary>
            <param name="src">src</param>
            <param name="value">Scalar to use in the operation. </param>
            <param name="dst">The destination array. </param>
            <param name="mask">Operation mask, 8-bit single channel array; specifies elements ofdestination array to be changed. </param>
        </member>
        <member name="M:CxCore.cxcore.CvOrS(CxCore.CvMat@,CxCore.CvScalar,CxCore.CvMat@)">
            <summary>
            Calculates per-element bit-wise disjunction of array and scalar
            </summary>
            <param name="src">src</param>
            <param name="value">Scalar to use in the operation. </param>
            <param name="dst">The destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvOrS(CxCore.CvSeq@,CxCore.CvScalar,CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Calculates per-element bit-wise disjunction of array and scalar
            </summary>
            <param name="src">src</param>
            <param name="value">Scalar to use in the operation. </param>
            <param name="dst">The destination array. </param>
            <param name="mask">Operation mask, 8-bit single channel array; specifies elements ofdestination array to be changed. </param>
        </member>
        <member name="M:CxCore.cxcore.CvOrS(CxCore.CvSeq@,CxCore.CvScalar,CxCore.CvSeq@)">
            <summary>
            Calculates per-element bit-wise disjunction of array and scalar
            </summary>
            <param name="src">src</param>
            <param name="value">Scalar to use in the operation. </param>
            <param name="dst">The destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvXor(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Performs per-element bit-wise "exclusive or" operation on two arrays
            </summary>
            <param name="src1">The first source array. </param>
            <param name="src2">The second source array. </param>
            <param name="dst">The destination array. </param>
            <param name="mask">Operation mask, 8-bit single channel array; specifies elements ofdestination array to be changed. </param>
        </member>
        <member name="M:CxCore.cxcore.CvXor(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Performs per-element bit-wise "exclusive or" operation on two arrays
            </summary>
            <param name="src1">The first source array. </param>
            <param name="src2">The second source array. </param>
            <param name="dst">The destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvXor(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Performs per-element bit-wise "exclusive or" operation on two arrays
            </summary>
            <param name="src1">The first source array. </param>
            <param name="src2">The second source array. </param>
            <param name="dst">The destination array. </param>
            <param name="mask">Operation mask, 8-bit single channel array; specifies elements ofdestination array to be changed. </param>
        </member>
        <member name="M:CxCore.cxcore.CvXor(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Performs per-element bit-wise "exclusive or" operation on two arrays
            </summary>
            <param name="src1">The first source array. </param>
            <param name="src2">The second source array. </param>
            <param name="dst">The destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvXor(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Performs per-element bit-wise "exclusive or" operation on two arrays
            </summary>
            <param name="src1">The first source array. </param>
            <param name="src2">The second source array. </param>
            <param name="dst">The destination array. </param>
            <param name="mask">Operation mask, 8-bit single channel array; specifies elements ofdestination array to be changed. </param>
        </member>
        <member name="M:CxCore.cxcore.CvXor(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Performs per-element bit-wise "exclusive or" operation on two arrays
            </summary>
            <param name="src1">The first source array. </param>
            <param name="src2">The second source array. </param>
            <param name="dst">The destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvXorS(CxCore.IplImage@,CxCore.CvScalar,CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Performs per-element bit-wise "exclusive or" operation on array and scalar
            </summary>
            <param name="src">The source array. </param>
            <param name="value">Scalar to use in the operation. </param>
            <param name="dst">The destination array. </param>
            <param name="mask">Operation mask, 8-bit single channel array; specifies elements ofdestination array to be changed. </param>
        </member>
        <member name="M:CxCore.cxcore.CvXorS(CxCore.IplImage@,CxCore.CvScalar,CxCore.IplImage@)">
            <summary>
            Performs per-element bit-wise "exclusive or" operation on array and scalar
            </summary>
            <param name="src">The source array. </param>
            <param name="value">Scalar to use in the operation. </param>
            <param name="dst">The destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvXorS(CxCore.CvMat@,CxCore.CvScalar,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Performs per-element bit-wise "exclusive or" operation on array and scalar
            </summary>
            <param name="src">The source array. </param>
            <param name="value">Scalar to use in the operation. </param>
            <param name="dst">The destination array. </param>
            <param name="mask">Operation mask, 8-bit single channel array; specifies elements ofdestination array to be changed. </param>
        </member>
        <member name="M:CxCore.cxcore.CvXorS(CxCore.CvMat@,CxCore.CvScalar,CxCore.CvMat@)">
            <summary>
            Performs per-element bit-wise "exclusive or" operation on array and scalar
            </summary>
            <param name="src">The source array. </param>
            <param name="value">Scalar to use in the operation. </param>
            <param name="dst">The destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvXorS(CxCore.CvSeq@,CxCore.CvScalar,CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Performs per-element bit-wise "exclusive or" operation on array and scalar
            </summary>
            <param name="src">The source array. </param>
            <param name="value">Scalar to use in the operation. </param>
            <param name="dst">The destination array. </param>
            <param name="mask">Operation mask, 8-bit single channel array; specifies elements ofdestination array to be changed. </param>
        </member>
        <member name="M:CxCore.cxcore.CvXorS(CxCore.CvSeq@,CxCore.CvScalar,CxCore.CvSeq@)">
            <summary>
            Performs per-element bit-wise "exclusive or" operation on array and scalar
            </summary>
            <param name="src">The source array. </param>
            <param name="value">Scalar to use in the operation. </param>
            <param name="dst">The destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvNot(CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Performs per-element bit-wise inversion of array elements
            </summary>
            <param name="src">src</param>
            <param name="dst">The destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvNot(CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Performs per-element bit-wise inversion of array elements
            </summary>
            <param name="src">src</param>
            <param name="dst">The destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvNot(CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Performs per-element bit-wise inversion of array elements
            </summary>
            <param name="src">src</param>
            <param name="dst">The destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvCmp(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@,System.Int32)">
            <summary>
            Performs per-element comparison of two arrays
            </summary>
            <param name="src1">The first source array. </param>
            <param name="src2">The second source array. Both source array must have a single channel. </param>
            <param name="dst">The destination array, must have 8u or 8s type. </param>
            <param name="cmp_op">The flag specifying the relation between the elements to be checked: CV_CMP_EQ - src1(I) "equal to" src2(I) CV_CMP_GT - src1(I) "greater than" src2(I) CV_CMP_GE - src1(I) "greater or equal" src2(I) CV_CMP_LT - src1(I) "less than" src2(I) CV_CMP_LE - src1(I) "less or equal" src2(I) CV_CMP_NE - src1(I) "not equal to" src2(I) </param>
        </member>
        <member name="M:CxCore.cxcore.CvCmp(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,System.Int32)">
            <summary>
            Performs per-element comparison of two arrays
            </summary>
            <param name="src1">The first source array. </param>
            <param name="src2">The second source array. Both source array must have a single channel. </param>
            <param name="dst">The destination array, must have 8u or 8s type. </param>
            <param name="cmp_op">The flag specifying the relation between the elements to be checked: CV_CMP_EQ - src1(I) "equal to" src2(I) CV_CMP_GT - src1(I) "greater than" src2(I) CV_CMP_GE - src1(I) "greater or equal" src2(I) CV_CMP_LT - src1(I) "less than" src2(I) CV_CMP_LE - src1(I) "less or equal" src2(I) CV_CMP_NE - src1(I) "not equal to" src2(I) </param>
        </member>
        <member name="M:CxCore.cxcore.CvCmp(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@,System.Int32)">
            <summary>
            Performs per-element comparison of two arrays
            </summary>
            <param name="src1">The first source array. </param>
            <param name="src2">The second source array. Both source array must have a single channel. </param>
            <param name="dst">The destination array, must have 8u or 8s type. </param>
            <param name="cmp_op">The flag specifying the relation between the elements to be checked: CV_CMP_EQ - src1(I) "equal to" src2(I) CV_CMP_GT - src1(I) "greater than" src2(I) CV_CMP_GE - src1(I) "greater or equal" src2(I) CV_CMP_LT - src1(I) "less than" src2(I) CV_CMP_LE - src1(I) "less or equal" src2(I) CV_CMP_NE - src1(I) "not equal to" src2(I) </param>
        </member>
        <member name="M:CxCore.cxcore.CvCmpS(CxCore.IplImage@,System.Double,CxCore.IplImage@,System.Int32)">
            <summary>
            Performs per-element comparison of array and scalar
            </summary>
            <param name="src">The source array, must have a single channel. </param>
            <param name="value">The scalar value to compare each array element with. </param>
            <param name="dst">The destination array, must have 8u or 8s type. </param>
            <param name="cmp_op">The flag specifying the relation between the elements to be checked: CV_CMP_EQ - src1(I) "equal to" value CV_CMP_GT - src1(I) "greater than" value CV_CMP_GE - src1(I) "greater or equal" value CV_CMP_LT - src1(I) "less than" value CV_CMP_LE - src1(I) "less or equal" value CV_CMP_NE - src1(I) "not equal" value </param>
        </member>
        <member name="M:CxCore.cxcore.CvCmpS(CxCore.CvMat@,System.Double,CxCore.CvMat@,System.Int32)">
            <summary>
            Performs per-element comparison of array and scalar
            </summary>
            <param name="src">The source array, must have a single channel. </param>
            <param name="value">The scalar value to compare each array element with. </param>
            <param name="dst">The destination array, must have 8u or 8s type. </param>
            <param name="cmp_op">The flag specifying the relation between the elements to be checked: CV_CMP_EQ - src1(I) "equal to" value CV_CMP_GT - src1(I) "greater than" value CV_CMP_GE - src1(I) "greater or equal" value CV_CMP_LT - src1(I) "less than" value CV_CMP_LE - src1(I) "less or equal" value CV_CMP_NE - src1(I) "not equal" value </param>
        </member>
        <member name="M:CxCore.cxcore.CvCmpS(CxCore.CvSeq@,System.Double,CxCore.CvSeq@,System.Int32)">
            <summary>
            Performs per-element comparison of array and scalar
            </summary>
            <param name="src">The source array, must have a single channel. </param>
            <param name="value">The scalar value to compare each array element with. </param>
            <param name="dst">The destination array, must have 8u or 8s type. </param>
            <param name="cmp_op">The flag specifying the relation between the elements to be checked: CV_CMP_EQ - src1(I) "equal to" value CV_CMP_GT - src1(I) "greater than" value CV_CMP_GE - src1(I) "greater or equal" value CV_CMP_LT - src1(I) "less than" value CV_CMP_LE - src1(I) "less or equal" value CV_CMP_NE - src1(I) "not equal" value </param>
        </member>
        <member name="M:CxCore.cxcore.CvInRange(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Checks that array elements lie between elements of two other arrays
            </summary>
            <param name="src">The first source array. </param>
            <param name="lower">The inclusive lower boundary array. </param>
            <param name="upper">The exclusive upper boundary array. </param>
            <param name="dst">The destination array, must have 8u or 8s type. </param>
        </member>
        <member name="M:CxCore.cxcore.CvInRange(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Checks that array elements lie between elements of two other arrays
            </summary>
            <param name="src">The first source array. </param>
            <param name="lower">The inclusive lower boundary array. </param>
            <param name="upper">The exclusive upper boundary array. </param>
            <param name="dst">The destination array, must have 8u or 8s type. </param>
        </member>
        <member name="M:CxCore.cxcore.CvInRange(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Checks that array elements lie between elements of two other arrays
            </summary>
            <param name="src">The first source array. </param>
            <param name="lower">The inclusive lower boundary array. </param>
            <param name="upper">The exclusive upper boundary array. </param>
            <param name="dst">The destination array, must have 8u or 8s type. </param>
        </member>
        <member name="M:CxCore.cxcore.CvInRangeS(CxCore.IplImage@,CxCore.CvScalar,CxCore.CvScalar,CxCore.IplImage@)">
            <summary>
            Checks that array elements lie between two scalars
            </summary>
            <param name="src">The first source array. </param>
            <param name="lower">The inclusive lower boundary. </param>
            <param name="upper">The exclusive upper boundary. </param>
            <param name="dst">The destination array, must have 8u or 8s type. </param>
        </member>
        <member name="M:CxCore.cxcore.CvInRangeS(CxCore.CvMat@,CxCore.CvScalar,CxCore.CvScalar,CxCore.CvMat@)">
            <summary>
            Checks that array elements lie between two scalars
            </summary>
            <param name="src">The first source array. </param>
            <param name="lower">The inclusive lower boundary. </param>
            <param name="upper">The exclusive upper boundary. </param>
            <param name="dst">The destination array, must have 8u or 8s type. </param>
        </member>
        <member name="M:CxCore.cxcore.CvInRangeS(CxCore.CvSeq@,CxCore.CvScalar,CxCore.CvScalar,CxCore.CvSeq@)">
            <summary>
            Checks that array elements lie between two scalars
            </summary>
            <param name="src">The first source array. </param>
            <param name="lower">The inclusive lower boundary. </param>
            <param name="upper">The exclusive upper boundary. </param>
            <param name="dst">The destination array, must have 8u or 8s type. </param>
        </member>
        <member name="M:CxCore.cxcore.CvMax(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Finds per-element maximum of two arrays
            </summary>
            <param name="src1">The first source array. </param>
            <param name="src2">The second source array. </param>
            <param name="dst">The destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvMax(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Finds per-element maximum of two arrays
            </summary>
            <param name="src1">The first source array. </param>
            <param name="src2">The second source array. </param>
            <param name="dst">The destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvMax(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Finds per-element maximum of two arrays
            </summary>
            <param name="src1">The first source array. </param>
            <param name="src2">The second source array. </param>
            <param name="dst">The destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvMaxS(CxCore.IplImage@,System.Double,CxCore.IplImage@)">
            <summary>
            Finds per-element maximum of array and scalar
            </summary>
            <param name="src">The first source array. </param>
            <param name="value">The scalar value. </param>
            <param name="dst">The destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvMaxS(CxCore.CvMat@,System.Double,CxCore.CvMat@)">
            <summary>
            Finds per-element maximum of array and scalar
            </summary>
            <param name="src">The first source array. </param>
            <param name="value">The scalar value. </param>
            <param name="dst">The destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvMaxS(CxCore.CvSeq@,System.Double,CxCore.CvSeq@)">
            <summary>
            Finds per-element maximum of array and scalar
            </summary>
            <param name="src">The first source array. </param>
            <param name="value">The scalar value. </param>
            <param name="dst">The destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvMin(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Finds per-element minimum of two arrays
            </summary>
            <param name="src1">The first source array. </param>
            <param name="src2">The second source array. </param>
            <param name="dst">The destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvMin(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Finds per-element minimum of two arrays
            </summary>
            <param name="src1">The first source array. </param>
            <param name="src2">The second source array. </param>
            <param name="dst">The destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvMin(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Finds per-element minimum of two arrays
            </summary>
            <param name="src1">The first source array. </param>
            <param name="src2">The second source array. </param>
            <param name="dst">The destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvMinS(CxCore.IplImage@,System.Double,CxCore.IplImage@)">
            <summary>
            Finds per-element minimum of array and scalar
            </summary>
            <param name="src">The first source array. </param>
            <param name="value">The scalar value. </param>
            <param name="dst">The destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvMinS(CxCore.CvMat@,System.Double,CxCore.CvMat@)">
            <summary>
            Finds per-element minimum of array and scalar
            </summary>
            <param name="src">The first source array. </param>
            <param name="value">The scalar value. </param>
            <param name="dst">The destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvMinS(CxCore.CvSeq@,System.Double,CxCore.CvSeq@)">
            <summary>
            Finds per-element minimum of array and scalar
            </summary>
            <param name="src">The first source array. </param>
            <param name="value">The scalar value. </param>
            <param name="dst">The destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvAbsDiff(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Calculates absolute difference between two arrays
            </summary>
            <param name="src1">The first source array. </param>
            <param name="src2">The second source array. </param>
            <param name="dst">The destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvAbsDiff(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Calculates absolute difference between two arrays
            </summary>
            <param name="src1">The first source array. </param>
            <param name="src2">The second source array. </param>
            <param name="dst">The destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvAbsDiff(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Calculates absolute difference between two arrays
            </summary>
            <param name="src1">The first source array. </param>
            <param name="src2">The second source array. </param>
            <param name="dst">The destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvAbsDiffS(CxCore.IplImage@,CxCore.IplImage@,CxCore.CvScalar)">
            <summary>
            Calculates absolute difference between array and scalar
            </summary>
            <param name="src">The source array. </param>
            <param name="dst">The destination array. </param>
            <param name="value">The scalar. </param>
        </member>
        <member name="M:CxCore.cxcore.CvAbsDiffS(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvScalar)">
            <summary>
            Calculates absolute difference between array and scalar
            </summary>
            <param name="src">The source array. </param>
            <param name="dst">The destination array. </param>
            <param name="value">The scalar. </param>
        </member>
        <member name="M:CxCore.cxcore.CvAbsDiffS(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvScalar)">
            <summary>
            Calculates absolute difference between array and scalar
            </summary>
            <param name="src">The source array. </param>
            <param name="dst">The destination array. </param>
            <param name="value">The scalar. </param>
        </member>
        <member name="M:CxCore.cxcore.CvCountNonZero(CxCore.IplImage@)">
            <summary>
            Counts non-zero array elements
            </summary>
            <param name="arr">The array, must be single-channel array or multi-channel image with COI set. </param>
        </member>
        <member name="M:CxCore.cxcore.CvCountNonZero(CxCore.CvMat@)">
            <summary>
            Counts non-zero array elements
            </summary>
            <param name="arr">The array, must be single-channel array or multi-channel image with COI set. </param>
        </member>
        <member name="M:CxCore.cxcore.CvCountNonZero(CxCore.CvSeq@)">
            <summary>
            Counts non-zero array elements
            </summary>
            <param name="arr">The array, must be single-channel array or multi-channel image with COI set. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSum(CxCore.IplImage@)">
            <summary>
            Summarizes array elements
            </summary>
            <param name="arr">The array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSum(CxCore.CvMat@)">
            <summary>
            Summarizes array elements
            </summary>
            <param name="arr">The array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSum(CxCore.CvSeq@)">
            <summary>
            Summarizes array elements
            </summary>
            <param name="arr">The array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvAvg(CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Calculates average (mean) of array elements
            </summary>
            <param name="arr">The array. </param>
            <param name="mask">The optional operation mask. </param>
        </member>
        <member name="M:CxCore.cxcore.CvAvg(CxCore.IplImage@)">
            <summary>
            Calculates average (mean) of array elements
            </summary>
            <param name="arr">The array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvAvg(CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Calculates average (mean) of array elements
            </summary>
            <param name="arr">The array. </param>
            <param name="mask">The optional operation mask. </param>
        </member>
        <member name="M:CxCore.cxcore.CvAvg(CxCore.CvMat@)">
            <summary>
            Calculates average (mean) of array elements
            </summary>
            <param name="arr">The array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvAvg(CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Calculates average (mean) of array elements
            </summary>
            <param name="arr">The array. </param>
            <param name="mask">The optional operation mask. </param>
        </member>
        <member name="M:CxCore.cxcore.CvAvg(CxCore.CvSeq@)">
            <summary>
            Calculates average (mean) of array elements
            </summary>
            <param name="arr">The array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvAvgSdv(CxCore.IplImage@,CxCore.CvScalar@,CxCore.CvScalar@,CxCore.IplImage@)">
            <summary>
            Calculates average (mean) of array elements
            </summary>
            <param name="arr">The array. </param>
            <param name="mean">Pointer to the mean value, may be NULL if it is not needed. </param>
            <param name="std_dev">Pointer to the standard deviation. </param>
            <param name="mask">The optional operation mask. </param>
        </member>
        <member name="M:CxCore.cxcore.CvAvgSdv(CxCore.IplImage@,CxCore.CvScalar@,CxCore.CvScalar@)">
            <summary>
            Calculates average (mean) of array elements
            </summary>
            <param name="arr">The array. </param>
            <param name="mean">Pointer to the mean value, may be NULL if it is not needed. </param>
            <param name="std_dev">Pointer to the standard deviation. </param>
        </member>
        <member name="M:CxCore.cxcore.CvAvgSdv(CxCore.CvMat@,CxCore.CvScalar@,CxCore.CvScalar@,CxCore.CvMat@)">
            <summary>
            Calculates average (mean) of array elements
            </summary>
            <param name="arr">The array. </param>
            <param name="mean">Pointer to the mean value, may be NULL if it is not needed. </param>
            <param name="std_dev">Pointer to the standard deviation. </param>
            <param name="mask">The optional operation mask. </param>
        </member>
        <member name="M:CxCore.cxcore.CvAvgSdv(CxCore.CvMat@,CxCore.CvScalar@,CxCore.CvScalar@)">
            <summary>
            Calculates average (mean) of array elements
            </summary>
            <param name="arr">The array. </param>
            <param name="mean">Pointer to the mean value, may be NULL if it is not needed. </param>
            <param name="std_dev">Pointer to the standard deviation. </param>
        </member>
        <member name="M:CxCore.cxcore.CvAvgSdv(CxCore.CvSeq@,CxCore.CvScalar@,CxCore.CvScalar@,CxCore.CvSeq@)">
            <summary>
            Calculates average (mean) of array elements
            </summary>
            <param name="arr">The array. </param>
            <param name="mean">Pointer to the mean value, may be NULL if it is not needed. </param>
            <param name="std_dev">Pointer to the standard deviation. </param>
            <param name="mask">The optional operation mask. </param>
        </member>
        <member name="M:CxCore.cxcore.CvAvgSdv(CxCore.CvSeq@,CxCore.CvScalar@,CxCore.CvScalar@)">
            <summary>
            Calculates average (mean) of array elements
            </summary>
            <param name="arr">The array. </param>
            <param name="mean">Pointer to the mean value, may be NULL if it is not needed. </param>
            <param name="std_dev">Pointer to the standard deviation. </param>
        </member>
        <member name="M:CxCore.cxcore.CvMinMaxLoc(CxCore.IplImage@,System.Double@,System.Double@,CxCore.CvPoint@,CxCore.CvPoint@,CxCore.IplImage@)">
            <summary>
            Finds global minimum and maximum in array or subarray
            </summary>
            <param name="arr">The source array, single-channel or multi-channel with COI set. </param>
            <param name="min_val">Pointer to returned minimum value. </param>
            <param name="max_val">Pointer to returned maximum value. </param>
            <param name="min_loc">Pointer to returned minimum location. </param>
            <param name="max_loc">Pointer to returned maximum location. </param>
            <param name="mask">The optional mask that is used to select a subarray. </param>
        </member>
        <member name="M:CxCore.cxcore.CvMinMaxLoc(CxCore.IplImage@,System.Double@,System.Double@,CxCore.CvPoint@,CxCore.CvPoint@)">
            <summary>
            Finds global minimum and maximum in array or subarray
            </summary>
            <param name="arr">The source array, single-channel or multi-channel with COI set. </param>
            <param name="min_val">Pointer to returned minimum value. </param>
            <param name="max_val">Pointer to returned maximum value. </param>
            <param name="min_loc">Pointer to returned minimum location. </param>
            <param name="max_loc">Pointer to returned maximum location. </param>
        </member>
        <member name="M:CxCore.cxcore.CvMinMaxLoc(CxCore.IplImage@,System.Double@,System.Double@,CxCore.CvPoint@)">
            <summary>
            Finds global minimum and maximum in array or subarray
            </summary>
            <param name="arr">The source array, single-channel or multi-channel with COI set. </param>
            <param name="min_val">Pointer to returned minimum value. </param>
            <param name="max_val">Pointer to returned maximum value. </param>
            <param name="min_loc">Pointer to returned minimum location. </param>
        </member>
        <member name="M:CxCore.cxcore.CvMinMaxLoc(CxCore.IplImage@,System.Double@,System.Double@)">
            <summary>
            Finds global minimum and maximum in array or subarray
            </summary>
            <param name="arr">The source array, single-channel or multi-channel with COI set. </param>
            <param name="min_val">Pointer to returned minimum value. </param>
            <param name="max_val">Pointer to returned maximum value. </param>
        </member>
        <member name="M:CxCore.cxcore.CvMinMaxLoc(CxCore.CvMat@,System.Double@,System.Double@,CxCore.CvPoint@,CxCore.CvPoint@,CxCore.CvMat@)">
            <summary>
            Finds global minimum and maximum in array or subarray
            </summary>
            <param name="arr">The source array, single-channel or multi-channel with COI set. </param>
            <param name="min_val">Pointer to returned minimum value. </param>
            <param name="max_val">Pointer to returned maximum value. </param>
            <param name="min_loc">Pointer to returned minimum location. </param>
            <param name="max_loc">Pointer to returned maximum location. </param>
            <param name="mask">The optional mask that is used to select a subarray. </param>
        </member>
        <member name="M:CxCore.cxcore.CvMinMaxLoc(CxCore.CvMat@,System.Double@,System.Double@,CxCore.CvPoint@,CxCore.CvPoint@)">
            <summary>
            Finds global minimum and maximum in array or subarray
            </summary>
            <param name="arr">The source array, single-channel or multi-channel with COI set. </param>
            <param name="min_val">Pointer to returned minimum value. </param>
            <param name="max_val">Pointer to returned maximum value. </param>
            <param name="min_loc">Pointer to returned minimum location. </param>
            <param name="max_loc">Pointer to returned maximum location. </param>
        </member>
        <member name="M:CxCore.cxcore.CvMinMaxLoc(CxCore.CvMat@,System.Double@,System.Double@,CxCore.CvPoint@)">
            <summary>
            Finds global minimum and maximum in array or subarray
            </summary>
            <param name="arr">The source array, single-channel or multi-channel with COI set. </param>
            <param name="min_val">Pointer to returned minimum value. </param>
            <param name="max_val">Pointer to returned maximum value. </param>
            <param name="min_loc">Pointer to returned minimum location. </param>
        </member>
        <member name="M:CxCore.cxcore.CvMinMaxLoc(CxCore.CvMat@,System.Double@,System.Double@)">
            <summary>
            Finds global minimum and maximum in array or subarray
            </summary>
            <param name="arr">The source array, single-channel or multi-channel with COI set. </param>
            <param name="min_val">Pointer to returned minimum value. </param>
            <param name="max_val">Pointer to returned maximum value. </param>
        </member>
        <member name="M:CxCore.cxcore.CvMinMaxLoc(CxCore.CvSeq@,System.Double@,System.Double@,CxCore.CvPoint@,CxCore.CvPoint@,CxCore.CvSeq@)">
            <summary>
            Finds global minimum and maximum in array or subarray
            </summary>
            <param name="arr">The source array, single-channel or multi-channel with COI set. </param>
            <param name="min_val">Pointer to returned minimum value. </param>
            <param name="max_val">Pointer to returned maximum value. </param>
            <param name="min_loc">Pointer to returned minimum location. </param>
            <param name="max_loc">Pointer to returned maximum location. </param>
            <param name="mask">The optional mask that is used to select a subarray. </param>
        </member>
        <member name="M:CxCore.cxcore.CvMinMaxLoc(CxCore.CvSeq@,System.Double@,System.Double@,CxCore.CvPoint@,CxCore.CvPoint@)">
            <summary>
            Finds global minimum and maximum in array or subarray
            </summary>
            <param name="arr">The source array, single-channel or multi-channel with COI set. </param>
            <param name="min_val">Pointer to returned minimum value. </param>
            <param name="max_val">Pointer to returned maximum value. </param>
            <param name="min_loc">Pointer to returned minimum location. </param>
            <param name="max_loc">Pointer to returned maximum location. </param>
        </member>
        <member name="M:CxCore.cxcore.CvMinMaxLoc(CxCore.CvSeq@,System.Double@,System.Double@,CxCore.CvPoint@)">
            <summary>
            Finds global minimum and maximum in array or subarray
            </summary>
            <param name="arr">The source array, single-channel or multi-channel with COI set. </param>
            <param name="min_val">Pointer to returned minimum value. </param>
            <param name="max_val">Pointer to returned maximum value. </param>
            <param name="min_loc">Pointer to returned minimum location. </param>
        </member>
        <member name="M:CxCore.cxcore.CvMinMaxLoc(CxCore.CvSeq@,System.Double@,System.Double@)">
            <summary>
            Finds global minimum and maximum in array or subarray
            </summary>
            <param name="arr">The source array, single-channel or multi-channel with COI set. </param>
            <param name="min_val">Pointer to returned minimum value. </param>
            <param name="max_val">Pointer to returned maximum value. </param>
        </member>
        <member name="M:CxCore.cxcore.CvNorm(CxCore.IplImage@,CxCore.IplImage@,System.Int32,System.IntPtr)">
            <summary>
            Calculates absolute array norm, absolute difference norm or relative difference norm
            </summary>
            <param name="arr1">The first source image. </param>
            <param name="arr2">The second source image. If it is NULL, the absolute norm of arr1 arr1 arr2 </param>
            <param name="norm_type">norm_type</param>
            <param name="mask">The optional operation mask. </param>
        </member>
        <member name="M:CxCore.cxcore.CvNorm(CxCore.IplImage@,CxCore.IplImage@,System.Int32)">
            <summary>
            Calculates absolute array norm, absolute difference norm or relative difference norm
            </summary>
            <param name="arr1">The first source image. </param>
            <param name="arr2">The second source image. If it is NULL, the absolute norm of arr1 arr1 arr2 </param>
            <param name="norm_type">norm_type</param>
        </member>
        <member name="M:CxCore.cxcore.CvNorm(CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Calculates absolute array norm, absolute difference norm or relative difference norm
            </summary>
            <param name="arr1">The first source image. </param>
            <param name="arr2">The second source image. If it is NULL, the absolute norm of arr1 arr1 arr2 </param>
        </member>
        <member name="M:CxCore.cxcore.CvNorm(CxCore.IplImage@)">
            <summary>
            Calculates absolute array norm, absolute difference norm or relative difference norm
            </summary>
            <param name="arr1">The first source image. </param>
        </member>
        <member name="M:CxCore.cxcore.CvNorm(CxCore.IplImage@,CxCore.IplImage@,System.IntPtr)">
            <summary>
            Calculates absolute array norm, absolute difference norm or relative difference norm
            </summary>
            <param name="arr1">The first source image. </param>
            <param name="arr2">The second source image. If it is NULL, the absolute norm of arr1 arr1 arr2 </param>
            <param name="mask">The optional operation mask. </param>
        </member>
        <member name="M:CxCore.cxcore.CvNorm(CxCore.CvMat@,CxCore.CvMat@,System.Int32,System.IntPtr)">
            <summary>
            Calculates absolute array norm, absolute difference norm or relative difference norm
            </summary>
            <param name="arr1">The first source image. </param>
            <param name="arr2">The second source image. If it is NULL, the absolute norm of arr1 arr1 arr2 </param>
            <param name="norm_type">norm_type</param>
            <param name="mask">The optional operation mask. </param>
        </member>
        <member name="M:CxCore.cxcore.CvNorm(CxCore.CvMat@,CxCore.CvMat@,System.Int32)">
            <summary>
            Calculates absolute array norm, absolute difference norm or relative difference norm
            </summary>
            <param name="arr1">The first source image. </param>
            <param name="arr2">The second source image. If it is NULL, the absolute norm of arr1 arr1 arr2 </param>
            <param name="norm_type">norm_type</param>
        </member>
        <member name="M:CxCore.cxcore.CvNorm(CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Calculates absolute array norm, absolute difference norm or relative difference norm
            </summary>
            <param name="arr1">The first source image. </param>
            <param name="arr2">The second source image. If it is NULL, the absolute norm of arr1 arr1 arr2 </param>
        </member>
        <member name="M:CxCore.cxcore.CvNorm(CxCore.CvMat@)">
            <summary>
            Calculates absolute array norm, absolute difference norm or relative difference norm
            </summary>
            <param name="arr1">The first source image. </param>
        </member>
        <member name="M:CxCore.cxcore.CvNorm(CxCore.CvMat@,CxCore.CvMat@,System.IntPtr)">
            <summary>
            Calculates absolute array norm, absolute difference norm or relative difference norm
            </summary>
            <param name="arr1">The first source image. </param>
            <param name="arr2">The second source image. If it is NULL, the absolute norm of arr1 arr1 arr2 </param>
            <param name="mask">The optional operation mask. </param>
        </member>
        <member name="M:CxCore.cxcore.CvNorm(CxCore.CvSeq@,CxCore.CvSeq@,System.Int32,System.IntPtr)">
            <summary>
            Calculates absolute array norm, absolute difference norm or relative difference norm
            </summary>
            <param name="arr1">The first source image. </param>
            <param name="arr2">The second source image. If it is NULL, the absolute norm of arr1 arr1 arr2 </param>
            <param name="norm_type">norm_type</param>
            <param name="mask">The optional operation mask. </param>
        </member>
        <member name="M:CxCore.cxcore.CvNorm(CxCore.CvSeq@,CxCore.CvSeq@,System.Int32)">
            <summary>
            Calculates absolute array norm, absolute difference norm or relative difference norm
            </summary>
            <param name="arr1">The first source image. </param>
            <param name="arr2">The second source image. If it is NULL, the absolute norm of arr1 arr1 arr2 </param>
            <param name="norm_type">norm_type</param>
        </member>
        <member name="M:CxCore.cxcore.CvNorm(CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Calculates absolute array norm, absolute difference norm or relative difference norm
            </summary>
            <param name="arr1">The first source image. </param>
            <param name="arr2">The second source image. If it is NULL, the absolute norm of arr1 arr1 arr2 </param>
        </member>
        <member name="M:CxCore.cxcore.CvNorm(CxCore.CvSeq@)">
            <summary>
            Calculates absolute array norm, absolute difference norm or relative difference norm
            </summary>
            <param name="arr1">The first source image. </param>
        </member>
        <member name="M:CxCore.cxcore.CvNorm(CxCore.CvSeq@,CxCore.CvSeq@,System.IntPtr)">
            <summary>
            Calculates absolute array norm, absolute difference norm or relative difference norm
            </summary>
            <param name="arr1">The first source image. </param>
            <param name="arr2">The second source image. If it is NULL, the absolute norm of arr1 arr1 arr2 </param>
            <param name="mask">The optional operation mask. </param>
        </member>
        <member name="M:CxCore.cxcore.CvReduce(CxCore.IplImage@,CxCore.IplImage@,System.Int32)">
            <summary>
            Reduces matrix to a vector
            </summary>
            <param name="src">The input matrix. </param>
            <param name="dst">The output single-row/single-column vector that accumulates           somehow all the matrix rows/columns. </param>
            <param name="op">The reduction operation. It can take of the following values: CV_REDUCE_SUM CV_REDUCE_AVG CV_REDUCE_MAX CV_REDUCE_MIN </param>
        </member>
        <member name="M:CxCore.cxcore.CvReduce(CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Reduces matrix to a vector
            </summary>
            <param name="src">The input matrix. </param>
            <param name="dst">The output single-row/single-column vector that accumulates           somehow all the matrix rows/columns. </param>
        </member>
        <member name="M:CxCore.cxcore.CvReduce(CxCore.CvMat@,CxCore.CvMat@,System.Int32)">
            <summary>
            Reduces matrix to a vector
            </summary>
            <param name="src">The input matrix. </param>
            <param name="dst">The output single-row/single-column vector that accumulates           somehow all the matrix rows/columns. </param>
            <param name="op">The reduction operation. It can take of the following values: CV_REDUCE_SUM CV_REDUCE_AVG CV_REDUCE_MAX CV_REDUCE_MIN </param>
        </member>
        <member name="M:CxCore.cxcore.CvReduce(CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Reduces matrix to a vector
            </summary>
            <param name="src">The input matrix. </param>
            <param name="dst">The output single-row/single-column vector that accumulates           somehow all the matrix rows/columns. </param>
        </member>
        <member name="M:CxCore.cxcore.CvReduce(CxCore.CvSeq@,CxCore.CvSeq@,System.Int32)">
            <summary>
            Reduces matrix to a vector
            </summary>
            <param name="src">The input matrix. </param>
            <param name="dst">The output single-row/single-column vector that accumulates           somehow all the matrix rows/columns. </param>
            <param name="op">The reduction operation. It can take of the following values: CV_REDUCE_SUM CV_REDUCE_AVG CV_REDUCE_MAX CV_REDUCE_MIN </param>
        </member>
        <member name="M:CxCore.cxcore.CvReduce(CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Reduces matrix to a vector
            </summary>
            <param name="src">The input matrix. </param>
            <param name="dst">The output single-row/single-column vector that accumulates           somehow all the matrix rows/columns. </param>
        </member>
        <member name="M:CxCore.cxcore.CvDotProduct(CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Calculates dot product of two arrays in Euclidian metrics
            </summary>
            <param name="src1">The first source array. </param>
            <param name="src2">The second source array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvDotProduct(CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Calculates dot product of two arrays in Euclidian metrics
            </summary>
            <param name="src1">The first source array. </param>
            <param name="src2">The second source array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvDotProduct(CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Calculates dot product of two arrays in Euclidian metrics
            </summary>
            <param name="src1">The first source array. </param>
            <param name="src2">The second source array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvNormalize(CxCore.IplImage@,CxCore.IplImage@,System.Double,System.Double,System.Int32,CxCore.IplImage@)">
            <summary>
            Normalizes array to a certain norm or value range
            </summary>
            <param name="src">The input array. </param>
            <param name="dst">The output array; in-place operation is supported. </param>
            <param name="a">The minimum/maximum value of the output array or the norm of output array. </param>
            <param name="b">The maximum/minimum value of the output array. </param>
            <param name="norm_type">The normalization type. It can take one of the following values: CV_C CV_L1 CV_L2 CV_MINMAX </param>
            <param name="mask">The operation mask. Makes the function consider and normalize only certain array elements. </param>
        </member>
        <member name="M:CxCore.cxcore.CvNormalize(CxCore.IplImage@,CxCore.IplImage@,System.Double,System.Double,System.Int32)">
            <summary>
            Normalizes array to a certain norm or value range
            </summary>
            <param name="src">The input array. </param>
            <param name="dst">The output array; in-place operation is supported. </param>
            <param name="a">The minimum/maximum value of the output array or the norm of output array. </param>
            <param name="b">The maximum/minimum value of the output array. </param>
            <param name="norm_type">The normalization type. It can take one of the following values: CV_C CV_L1 CV_L2 CV_MINMAX </param>
        </member>
        <member name="M:CxCore.cxcore.CvNormalize(CxCore.IplImage@,CxCore.IplImage@,System.Double,System.Double)">
            <summary>
            Normalizes array to a certain norm or value range
            </summary>
            <param name="src">The input array. </param>
            <param name="dst">The output array; in-place operation is supported. </param>
            <param name="a">The minimum/maximum value of the output array or the norm of output array. </param>
            <param name="b">The maximum/minimum value of the output array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvNormalize(CxCore.IplImage@,CxCore.IplImage@,System.Double)">
            <summary>
            Normalizes array to a certain norm or value range
            </summary>
            <param name="src">The input array. </param>
            <param name="dst">The output array; in-place operation is supported. </param>
            <param name="a">The minimum/maximum value of the output array or the norm of output array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvNormalize(CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Normalizes array to a certain norm or value range
            </summary>
            <param name="src">The input array. </param>
            <param name="dst">The output array; in-place operation is supported. </param>
        </member>
        <member name="M:CxCore.cxcore.CvNormalize(CxCore.CvMat@,CxCore.CvMat@,System.Double,System.Double,System.Int32,CxCore.CvMat@)">
            <summary>
            Normalizes array to a certain norm or value range
            </summary>
            <param name="src">The input array. </param>
            <param name="dst">The output array; in-place operation is supported. </param>
            <param name="a">The minimum/maximum value of the output array or the norm of output array. </param>
            <param name="b">The maximum/minimum value of the output array. </param>
            <param name="norm_type">The normalization type. It can take one of the following values: CV_C CV_L1 CV_L2 CV_MINMAX </param>
            <param name="mask">The operation mask. Makes the function consider and normalize only certain array elements. </param>
        </member>
        <member name="M:CxCore.cxcore.CvNormalize(CxCore.CvMat@,CxCore.CvMat@,System.Double,System.Double,System.Int32)">
            <summary>
            Normalizes array to a certain norm or value range
            </summary>
            <param name="src">The input array. </param>
            <param name="dst">The output array; in-place operation is supported. </param>
            <param name="a">The minimum/maximum value of the output array or the norm of output array. </param>
            <param name="b">The maximum/minimum value of the output array. </param>
            <param name="norm_type">The normalization type. It can take one of the following values: CV_C CV_L1 CV_L2 CV_MINMAX </param>
        </member>
        <member name="M:CxCore.cxcore.CvNormalize(CxCore.CvMat@,CxCore.CvMat@,System.Double,System.Double)">
            <summary>
            Normalizes array to a certain norm or value range
            </summary>
            <param name="src">The input array. </param>
            <param name="dst">The output array; in-place operation is supported. </param>
            <param name="a">The minimum/maximum value of the output array or the norm of output array. </param>
            <param name="b">The maximum/minimum value of the output array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvNormalize(CxCore.CvMat@,CxCore.CvMat@,System.Double)">
            <summary>
            Normalizes array to a certain norm or value range
            </summary>
            <param name="src">The input array. </param>
            <param name="dst">The output array; in-place operation is supported. </param>
            <param name="a">The minimum/maximum value of the output array or the norm of output array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvNormalize(CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Normalizes array to a certain norm or value range
            </summary>
            <param name="src">The input array. </param>
            <param name="dst">The output array; in-place operation is supported. </param>
        </member>
        <member name="M:CxCore.cxcore.CvNormalize(CxCore.CvSeq@,CxCore.CvSeq@,System.Double,System.Double,System.Int32,CxCore.CvSeq@)">
            <summary>
            Normalizes array to a certain norm or value range
            </summary>
            <param name="src">The input array. </param>
            <param name="dst">The output array; in-place operation is supported. </param>
            <param name="a">The minimum/maximum value of the output array or the norm of output array. </param>
            <param name="b">The maximum/minimum value of the output array. </param>
            <param name="norm_type">The normalization type. It can take one of the following values: CV_C CV_L1 CV_L2 CV_MINMAX </param>
            <param name="mask">The operation mask. Makes the function consider and normalize only certain array elements. </param>
        </member>
        <member name="M:CxCore.cxcore.CvNormalize(CxCore.CvSeq@,CxCore.CvSeq@,System.Double,System.Double,System.Int32)">
            <summary>
            Normalizes array to a certain norm or value range
            </summary>
            <param name="src">The input array. </param>
            <param name="dst">The output array; in-place operation is supported. </param>
            <param name="a">The minimum/maximum value of the output array or the norm of output array. </param>
            <param name="b">The maximum/minimum value of the output array. </param>
            <param name="norm_type">The normalization type. It can take one of the following values: CV_C CV_L1 CV_L2 CV_MINMAX </param>
        </member>
        <member name="M:CxCore.cxcore.CvNormalize(CxCore.CvSeq@,CxCore.CvSeq@,System.Double,System.Double)">
            <summary>
            Normalizes array to a certain norm or value range
            </summary>
            <param name="src">The input array. </param>
            <param name="dst">The output array; in-place operation is supported. </param>
            <param name="a">The minimum/maximum value of the output array or the norm of output array. </param>
            <param name="b">The maximum/minimum value of the output array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvNormalize(CxCore.CvSeq@,CxCore.CvSeq@,System.Double)">
            <summary>
            Normalizes array to a certain norm or value range
            </summary>
            <param name="src">The input array. </param>
            <param name="dst">The output array; in-place operation is supported. </param>
            <param name="a">The minimum/maximum value of the output array or the norm of output array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvNormalize(CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Normalizes array to a certain norm or value range
            </summary>
            <param name="src">The input array. </param>
            <param name="dst">The output array; in-place operation is supported. </param>
        </member>
        <member name="M:CxCore.cxcore.CvCrossProduct(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Calculates cross product of two 3D vectors
            </summary>
            <param name="src1">The first source vector. </param>
            <param name="src2">The second source vector. </param>
            <param name="dst">The destination vector. </param>
        </member>
        <member name="M:CxCore.cxcore.CvCrossProduct(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Calculates cross product of two 3D vectors
            </summary>
            <param name="src1">The first source vector. </param>
            <param name="src2">The second source vector. </param>
            <param name="dst">The destination vector. </param>
        </member>
        <member name="M:CxCore.cxcore.CvCrossProduct(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Calculates cross product of two 3D vectors
            </summary>
            <param name="src1">The first source vector. </param>
            <param name="src2">The second source vector. </param>
            <param name="dst">The destination vector. </param>
        </member>
        <member name="M:CxCore.cxcore.CvScaleAdd(CxCore.IplImage@,CxCore.CvScalar,CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Calculates sum of scaled array and another array
            </summary>
            <param name="src1">The first source array. </param>
            <param name="scale">Scale factor for the first array. </param>
            <param name="src2">The second source array. </param>
            <param name="dst">The destination array </param>
        </member>
        <member name="M:CxCore.cxcore.CvScaleAdd(CxCore.CvMat@,CxCore.CvScalar,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Calculates sum of scaled array and another array
            </summary>
            <param name="src1">The first source array. </param>
            <param name="scale">Scale factor for the first array. </param>
            <param name="src2">The second source array. </param>
            <param name="dst">The destination array </param>
        </member>
        <member name="M:CxCore.cxcore.CvScaleAdd(CxCore.CvSeq@,CxCore.CvScalar,CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Calculates sum of scaled array and another array
            </summary>
            <param name="src1">The first source array. </param>
            <param name="scale">Scale factor for the first array. </param>
            <param name="src2">The second source array. </param>
            <param name="dst">The destination array </param>
        </member>
        <member name="M:CxCore.cxcore.CvGEMM(CxCore.IplImage@,CxCore.IplImage@,System.Double,CxCore.IplImage@,System.Double,CxCore.IplImage@,System.Int32)">
            <summary>
            Performs generalized matrix multiplication
            </summary>
            <param name="src1">The first source array. </param>
            <param name="src2">The second source array. </param>
            <param name="alpha">alpha</param>
            <param name="src3">The third source array (shift). Can be NULL, if there is no shift. </param>
            <param name="beta">beta</param>
            <param name="dst">The destination array. </param>
            <param name="tABC">The operation flags that can be 0 or combination of the following values: CV_GEMM_A_T - transpose src1 CV_GEMM_B_T - transpose src2 CV_GEMM_C_T - transpose src3 for example, CV_GEMM_A_T+CV_GEMM_C_T corresponds to </param>
        </member>
        <member name="M:CxCore.cxcore.CvGEMM(CxCore.IplImage@,CxCore.IplImage@,System.Double,CxCore.IplImage@,System.Double,CxCore.IplImage@)">
            <summary>
            Performs generalized matrix multiplication
            </summary>
            <param name="src1">The first source array. </param>
            <param name="src2">The second source array. </param>
            <param name="alpha">alpha</param>
            <param name="src3">The third source array (shift). Can be NULL, if there is no shift. </param>
            <param name="beta">beta</param>
            <param name="dst">The destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGEMM(CxCore.CvMat@,CxCore.CvMat@,System.Double,CxCore.CvMat@,System.Double,CxCore.CvMat@,System.Int32)">
            <summary>
            Performs generalized matrix multiplication
            </summary>
            <param name="src1">The first source array. </param>
            <param name="src2">The second source array. </param>
            <param name="alpha">alpha</param>
            <param name="src3">The third source array (shift). Can be NULL, if there is no shift. </param>
            <param name="beta">beta</param>
            <param name="dst">The destination array. </param>
            <param name="tABC">The operation flags that can be 0 or combination of the following values: CV_GEMM_A_T - transpose src1 CV_GEMM_B_T - transpose src2 CV_GEMM_C_T - transpose src3 for example, CV_GEMM_A_T+CV_GEMM_C_T corresponds to </param>
        </member>
        <member name="M:CxCore.cxcore.CvGEMM(CxCore.CvMat@,CxCore.CvMat@,System.Double,CxCore.CvMat@,System.Double,CxCore.CvMat@)">
            <summary>
            Performs generalized matrix multiplication
            </summary>
            <param name="src1">The first source array. </param>
            <param name="src2">The second source array. </param>
            <param name="alpha">alpha</param>
            <param name="src3">The third source array (shift). Can be NULL, if there is no shift. </param>
            <param name="beta">beta</param>
            <param name="dst">The destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGEMM(CxCore.CvSeq@,CxCore.CvSeq@,System.Double,CxCore.CvSeq@,System.Double,CxCore.CvSeq@,System.Int32)">
            <summary>
            Performs generalized matrix multiplication
            </summary>
            <param name="src1">The first source array. </param>
            <param name="src2">The second source array. </param>
            <param name="alpha">alpha</param>
            <param name="src3">The third source array (shift). Can be NULL, if there is no shift. </param>
            <param name="beta">beta</param>
            <param name="dst">The destination array. </param>
            <param name="tABC">The operation flags that can be 0 or combination of the following values: CV_GEMM_A_T - transpose src1 CV_GEMM_B_T - transpose src2 CV_GEMM_C_T - transpose src3 for example, CV_GEMM_A_T+CV_GEMM_C_T corresponds to </param>
        </member>
        <member name="M:CxCore.cxcore.CvGEMM(CxCore.CvSeq@,CxCore.CvSeq@,System.Double,CxCore.CvSeq@,System.Double,CxCore.CvSeq@)">
            <summary>
            Performs generalized matrix multiplication
            </summary>
            <param name="src1">The first source array. </param>
            <param name="src2">The second source array. </param>
            <param name="alpha">alpha</param>
            <param name="src3">The third source array (shift). Can be NULL, if there is no shift. </param>
            <param name="beta">beta</param>
            <param name="dst">The destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGEMM(CxCore.IplImage@,CxCore.IplImage@,System.Double,System.Double,CxCore.IplImage@,System.Int32)">
            <summary>
            Performs generalized matrix multiplication
            </summary>
            <param name="src1">The first source array. </param>
            <param name="src2">The second source array. </param>
            <param name="alpha">alpha</param>
            <param name="beta">beta</param>
            <param name="dst">The destination array. </param>
            <param name="tABC">The operation flags that can be 0 or combination of the following values: CV_GEMM_A_T - transpose src1 CV_GEMM_B_T - transpose src2 CV_GEMM_C_T - transpose src3 for example, CV_GEMM_A_T+CV_GEMM_C_T corresponds to </param>
        </member>
        <member name="M:CxCore.cxcore.CvGEMM(CxCore.IplImage@,CxCore.IplImage@,System.Double,System.Double,CxCore.IplImage@)">
            <summary>
            Performs generalized matrix multiplication
            </summary>
            <param name="src1">The first source array. </param>
            <param name="src2">The second source array. </param>
            <param name="alpha">alpha</param>
            <param name="beta">beta</param>
            <param name="dst">The destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGEMM(CxCore.CvMat@,CxCore.CvMat@,System.Double,System.Double,CxCore.CvMat@,System.Int32)">
            <summary>
            Performs generalized matrix multiplication
            </summary>
            <param name="src1">The first source array. </param>
            <param name="src2">The second source array. </param>
            <param name="alpha">alpha</param>
            <param name="beta">beta</param>
            <param name="dst">The destination array. </param>
            <param name="tABC">The operation flags that can be 0 or combination of the following values: CV_GEMM_A_T - transpose src1 CV_GEMM_B_T - transpose src2 CV_GEMM_C_T - transpose src3 for example, CV_GEMM_A_T+CV_GEMM_C_T corresponds to </param>
        </member>
        <member name="M:CxCore.cxcore.CvGEMM(CxCore.CvMat@,CxCore.CvMat@,System.Double,System.Double,CxCore.CvMat@)">
            <summary>
            Performs generalized matrix multiplication
            </summary>
            <param name="src1">The first source array. </param>
            <param name="src2">The second source array. </param>
            <param name="alpha">alpha</param>
            <param name="beta">beta</param>
            <param name="dst">The destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGEMM(CxCore.CvSeq@,CxCore.CvSeq@,System.Double,System.Double,CxCore.CvSeq@,System.Int32)">
            <summary>
            Performs generalized matrix multiplication
            </summary>
            <param name="src1">The first source array. </param>
            <param name="src2">The second source array. </param>
            <param name="alpha">alpha</param>
            <param name="beta">beta</param>
            <param name="dst">The destination array. </param>
            <param name="tABC">The operation flags that can be 0 or combination of the following values: CV_GEMM_A_T - transpose src1 CV_GEMM_B_T - transpose src2 CV_GEMM_C_T - transpose src3 for example, CV_GEMM_A_T+CV_GEMM_C_T corresponds to </param>
        </member>
        <member name="M:CxCore.cxcore.CvGEMM(CxCore.CvSeq@,CxCore.CvSeq@,System.Double,System.Double,CxCore.CvSeq@)">
            <summary>
            Performs generalized matrix multiplication
            </summary>
            <param name="src1">The first source array. </param>
            <param name="src2">The second source array. </param>
            <param name="alpha">alpha</param>
            <param name="beta">beta</param>
            <param name="dst">The destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvTransform(CxCore.IplImage@,CxCore.IplImage@,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Performs matrix transform of every array element
            </summary>
            <param name="src">The first source array. </param>
            <param name="dst">The destination array. </param>
            <param name="transmat">Transformation matrix. </param>
            <param name="shiftvec">Optional shift vector. </param>
        </member>
        <member name="M:CxCore.cxcore.CvTransform(CxCore.IplImage@,CxCore.IplImage@,CxCore.CvMat@)">
            <summary>
            Performs matrix transform of every array element
            </summary>
            <param name="src">The first source array. </param>
            <param name="dst">The destination array. </param>
            <param name="transmat">Transformation matrix. </param>
        </member>
        <member name="M:CxCore.cxcore.CvTransform(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Performs matrix transform of every array element
            </summary>
            <param name="src">The first source array. </param>
            <param name="dst">The destination array. </param>
            <param name="transmat">Transformation matrix. </param>
            <param name="shiftvec">Optional shift vector. </param>
        </member>
        <member name="M:CxCore.cxcore.CvTransform(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Performs matrix transform of every array element
            </summary>
            <param name="src">The first source array. </param>
            <param name="dst">The destination array. </param>
            <param name="transmat">Transformation matrix. </param>
        </member>
        <member name="M:CxCore.cxcore.CvTransform(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Performs matrix transform of every array element
            </summary>
            <param name="src">The first source array. </param>
            <param name="dst">The destination array. </param>
            <param name="transmat">Transformation matrix. </param>
            <param name="shiftvec">Optional shift vector. </param>
        </member>
        <member name="M:CxCore.cxcore.CvTransform(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvMat@)">
            <summary>
            Performs matrix transform of every array element
            </summary>
            <param name="src">The first source array. </param>
            <param name="dst">The destination array. </param>
            <param name="transmat">Transformation matrix. </param>
        </member>
        <member name="M:CxCore.cxcore.CvPerspectiveTransform(CxCore.IplImage@,CxCore.IplImage@,CxCore.CvMat@)">
            <summary>
            Performs perspective matrix transform of vector array
            </summary>
            <param name="src">The source three-channel floating-point array. </param>
            <param name="dst">The destination three-channel floating-point array. </param>
            <param name="mat">3�3 or 4�4 transformation matrix. </param>
        </member>
        <member name="M:CxCore.cxcore.CvPerspectiveTransform(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Performs perspective matrix transform of vector array
            </summary>
            <param name="src">The source three-channel floating-point array. </param>
            <param name="dst">The destination three-channel floating-point array. </param>
            <param name="mat">3�3 or 4�4 transformation matrix. </param>
        </member>
        <member name="M:CxCore.cxcore.CvPerspectiveTransform(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvMat@)">
            <summary>
            Performs perspective matrix transform of vector array
            </summary>
            <param name="src">The source three-channel floating-point array. </param>
            <param name="dst">The destination three-channel floating-point array. </param>
            <param name="mat">3�3 or 4�4 transformation matrix. </param>
        </member>
        <member name="M:CxCore.cxcore.CvMulTransposed(CxCore.IplImage@,CxCore.IplImage@,System.Int32,CxCore.IplImage@)">
            <summary>
            Calculates product of array and transposed array
            </summary>
            <param name="src">The source matrix. </param>
            <param name="dst">The destination matrix. </param>
            <param name="order">Order of multipliers. </param>
            <param name="delta">An optional array, subtracted from src </param>
        </member>
        <member name="M:CxCore.cxcore.CvMulTransposed(CxCore.IplImage@,CxCore.IplImage@,System.Int32)">
            <summary>
            Calculates product of array and transposed array
            </summary>
            <param name="src">The source matrix. </param>
            <param name="dst">The destination matrix. </param>
            <param name="order">Order of multipliers. </param>
        </member>
        <member name="M:CxCore.cxcore.CvMulTransposed(CxCore.CvMat@,CxCore.CvMat@,System.Int32,CxCore.CvMat@)">
            <summary>
            Calculates product of array and transposed array
            </summary>
            <param name="src">The source matrix. </param>
            <param name="dst">The destination matrix. </param>
            <param name="order">Order of multipliers. </param>
            <param name="delta">An optional array, subtracted from src </param>
        </member>
        <member name="M:CxCore.cxcore.CvMulTransposed(CxCore.CvMat@,CxCore.CvMat@,System.Int32)">
            <summary>
            Calculates product of array and transposed array
            </summary>
            <param name="src">The source matrix. </param>
            <param name="dst">The destination matrix. </param>
            <param name="order">Order of multipliers. </param>
        </member>
        <member name="M:CxCore.cxcore.CvMulTransposed(CxCore.CvSeq@,CxCore.CvSeq@,System.Int32,CxCore.CvSeq@)">
            <summary>
            Calculates product of array and transposed array
            </summary>
            <param name="src">The source matrix. </param>
            <param name="dst">The destination matrix. </param>
            <param name="order">Order of multipliers. </param>
            <param name="delta">An optional array, subtracted from src </param>
        </member>
        <member name="M:CxCore.cxcore.CvMulTransposed(CxCore.CvSeq@,CxCore.CvSeq@,System.Int32)">
            <summary>
            Calculates product of array and transposed array
            </summary>
            <param name="src">The source matrix. </param>
            <param name="dst">The destination matrix. </param>
            <param name="order">Order of multipliers. </param>
        </member>
        <member name="M:CxCore.cxcore.CvTrace(CxCore.IplImage@)">
            <summary>
            Returns trace of matrix
            </summary>
            <param name="mat">The source matrix. </param>
        </member>
        <member name="M:CxCore.cxcore.CvTrace(CxCore.CvMat@)">
            <summary>
            Returns trace of matrix
            </summary>
            <param name="mat">The source matrix. </param>
        </member>
        <member name="M:CxCore.cxcore.CvTrace(CxCore.CvSeq@)">
            <summary>
            Returns trace of matrix
            </summary>
            <param name="mat">The source matrix. </param>
        </member>
        <member name="M:CxCore.cxcore.CvTranspose(CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Transposes matrix
            </summary>
            <param name="src">The source matrix. </param>
            <param name="dst">The destination matrix. </param>
        </member>
        <member name="M:CxCore.cxcore.CvTranspose(CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Transposes matrix
            </summary>
            <param name="src">The source matrix. </param>
            <param name="dst">The destination matrix. </param>
        </member>
        <member name="M:CxCore.cxcore.CvTranspose(CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Transposes matrix
            </summary>
            <param name="src">The source matrix. </param>
            <param name="dst">The destination matrix. </param>
        </member>
        <member name="M:CxCore.cxcore.CvDet(CxCore.IplImage@)">
            <summary>
            Returns determinant of matrix
            </summary>
            <param name="mat">The source matrix. </param>
        </member>
        <member name="M:CxCore.cxcore.CvDet(CxCore.CvMat@)">
            <summary>
            Returns determinant of matrix
            </summary>
            <param name="mat">The source matrix. </param>
        </member>
        <member name="M:CxCore.cxcore.CvDet(CxCore.CvSeq@)">
            <summary>
            Returns determinant of matrix
            </summary>
            <param name="mat">The source matrix. </param>
        </member>
        <member name="M:CxCore.cxcore.CvInvert(CxCore.IplImage@,CxCore.IplImage@,System.Int32)">
            <summary>
            Finds inverse or pseudo-inverse of matrix
            </summary>
            <param name="src">The source matrix. </param>
            <param name="dst">The destination matrix. </param>
            <param name="method">Inversion method: CV_LU - Gaussian elimination with optimal pivot element chose CV_SVD - Singular value decomposition (SVD) method CV_SVD_SYM - SVD method for a symmetric positively-defined matrix </param>
        </member>
        <member name="M:CxCore.cxcore.CvInvert(CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Finds inverse or pseudo-inverse of matrix
            </summary>
            <param name="src">The source matrix. </param>
            <param name="dst">The destination matrix. </param>
        </member>
        <member name="M:CxCore.cxcore.CvInvert(CxCore.CvMat@,CxCore.CvMat@,System.Int32)">
            <summary>
            Finds inverse or pseudo-inverse of matrix
            </summary>
            <param name="src">The source matrix. </param>
            <param name="dst">The destination matrix. </param>
            <param name="method">Inversion method: CV_LU - Gaussian elimination with optimal pivot element chose CV_SVD - Singular value decomposition (SVD) method CV_SVD_SYM - SVD method for a symmetric positively-defined matrix </param>
        </member>
        <member name="M:CxCore.cxcore.CvInvert(CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Finds inverse or pseudo-inverse of matrix
            </summary>
            <param name="src">The source matrix. </param>
            <param name="dst">The destination matrix. </param>
        </member>
        <member name="M:CxCore.cxcore.CvInvert(CxCore.CvSeq@,CxCore.CvSeq@,System.Int32)">
            <summary>
            Finds inverse or pseudo-inverse of matrix
            </summary>
            <param name="src">The source matrix. </param>
            <param name="dst">The destination matrix. </param>
            <param name="method">Inversion method: CV_LU - Gaussian elimination with optimal pivot element chose CV_SVD - Singular value decomposition (SVD) method CV_SVD_SYM - SVD method for a symmetric positively-defined matrix </param>
        </member>
        <member name="M:CxCore.cxcore.CvInvert(CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Finds inverse or pseudo-inverse of matrix
            </summary>
            <param name="src">The source matrix. </param>
            <param name="dst">The destination matrix. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSolve(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@,System.Int32)">
            <summary>
            Solves linear system or least-squares problem
            </summary>
            <param name="A">The source matrix. </param>
            <param name="B">The right-hand part of the linear system. </param>
            <param name="X">The output solution. </param>
            <param name="method">The solution (matrix inversion) method: CV_LU - Gaussian elimination with optimal pivot element chose CV_SVD - Singular value decomposition (SVD) method CV_SVD_SYM - SVD method for a symmetric positively-defined matrix. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSolve(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Solves linear system or least-squares problem
            </summary>
            <param name="A">The source matrix. </param>
            <param name="B">The right-hand part of the linear system. </param>
            <param name="X">The output solution. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSolve(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,System.Int32)">
            <summary>
            Solves linear system or least-squares problem
            </summary>
            <param name="A">The source matrix. </param>
            <param name="B">The right-hand part of the linear system. </param>
            <param name="X">The output solution. </param>
            <param name="method">The solution (matrix inversion) method: CV_LU - Gaussian elimination with optimal pivot element chose CV_SVD - Singular value decomposition (SVD) method CV_SVD_SYM - SVD method for a symmetric positively-defined matrix. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSolve(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Solves linear system or least-squares problem
            </summary>
            <param name="A">The source matrix. </param>
            <param name="B">The right-hand part of the linear system. </param>
            <param name="X">The output solution. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSolve(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@,System.Int32)">
            <summary>
            Solves linear system or least-squares problem
            </summary>
            <param name="A">The source matrix. </param>
            <param name="B">The right-hand part of the linear system. </param>
            <param name="X">The output solution. </param>
            <param name="method">The solution (matrix inversion) method: CV_LU - Gaussian elimination with optimal pivot element chose CV_SVD - Singular value decomposition (SVD) method CV_SVD_SYM - SVD method for a symmetric positively-defined matrix. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSolve(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Solves linear system or least-squares problem
            </summary>
            <param name="A">The source matrix. </param>
            <param name="B">The right-hand part of the linear system. </param>
            <param name="X">The output solution. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSVD(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@,System.Int32)">
            <summary>
            Performs singular value decomposition of real floating-point matrix
            </summary>
            <param name="A">Source M N </param>
            <param name="W">Resulting singular value matrix ( M N N N N 1 </param>
            <param name="U">Optional left orthogonal matrix ( M M M N </param>
            <param name="V">Optional right orthogonal matrix ( N N </param>
            <param name="flags">Operation flags; can be 0 or combination of the following values: CV_SVD_MODIFY_A src1 CV_SVD_U_T U CV_SVD_V_T V </param>
        </member>
        <member name="M:CxCore.cxcore.CvSVD(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Performs singular value decomposition of real floating-point matrix
            </summary>
            <param name="A">Source M N </param>
            <param name="W">Resulting singular value matrix ( M N N N N 1 </param>
            <param name="U">Optional left orthogonal matrix ( M M M N </param>
            <param name="V">Optional right orthogonal matrix ( N N </param>
        </member>
        <member name="M:CxCore.cxcore.CvSVD(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Performs singular value decomposition of real floating-point matrix
            </summary>
            <param name="A">Source M N </param>
            <param name="W">Resulting singular value matrix ( M N N N N 1 </param>
            <param name="U">Optional left orthogonal matrix ( M M M N </param>
        </member>
        <member name="M:CxCore.cxcore.CvSVD(CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Performs singular value decomposition of real floating-point matrix
            </summary>
            <param name="A">Source M N </param>
            <param name="W">Resulting singular value matrix ( M N N N N 1 </param>
        </member>
        <member name="M:CxCore.cxcore.CvSVD(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,System.Int32)">
            <summary>
            Performs singular value decomposition of real floating-point matrix
            </summary>
            <param name="A">Source M N </param>
            <param name="W">Resulting singular value matrix ( M N N N N 1 </param>
            <param name="U">Optional left orthogonal matrix ( M M M N </param>
            <param name="V">Optional right orthogonal matrix ( N N </param>
            <param name="flags">Operation flags; can be 0 or combination of the following values: CV_SVD_MODIFY_A src1 CV_SVD_U_T U CV_SVD_V_T V </param>
        </member>
        <member name="M:CxCore.cxcore.CvSVD(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Performs singular value decomposition of real floating-point matrix
            </summary>
            <param name="A">Source M N </param>
            <param name="W">Resulting singular value matrix ( M N N N N 1 </param>
            <param name="U">Optional left orthogonal matrix ( M M M N </param>
            <param name="V">Optional right orthogonal matrix ( N N </param>
        </member>
        <member name="M:CxCore.cxcore.CvSVD(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Performs singular value decomposition of real floating-point matrix
            </summary>
            <param name="A">Source M N </param>
            <param name="W">Resulting singular value matrix ( M N N N N 1 </param>
            <param name="U">Optional left orthogonal matrix ( M M M N </param>
        </member>
        <member name="M:CxCore.cxcore.CvSVD(CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Performs singular value decomposition of real floating-point matrix
            </summary>
            <param name="A">Source M N </param>
            <param name="W">Resulting singular value matrix ( M N N N N 1 </param>
        </member>
        <member name="M:CxCore.cxcore.CvSVD(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@,System.Int32)">
            <summary>
            Performs singular value decomposition of real floating-point matrix
            </summary>
            <param name="A">Source M N </param>
            <param name="W">Resulting singular value matrix ( M N N N N 1 </param>
            <param name="U">Optional left orthogonal matrix ( M M M N </param>
            <param name="V">Optional right orthogonal matrix ( N N </param>
            <param name="flags">Operation flags; can be 0 or combination of the following values: CV_SVD_MODIFY_A src1 CV_SVD_U_T U CV_SVD_V_T V </param>
        </member>
        <member name="M:CxCore.cxcore.CvSVD(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Performs singular value decomposition of real floating-point matrix
            </summary>
            <param name="A">Source M N </param>
            <param name="W">Resulting singular value matrix ( M N N N N 1 </param>
            <param name="U">Optional left orthogonal matrix ( M M M N </param>
            <param name="V">Optional right orthogonal matrix ( N N </param>
        </member>
        <member name="M:CxCore.cxcore.CvSVD(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Performs singular value decomposition of real floating-point matrix
            </summary>
            <param name="A">Source M N </param>
            <param name="W">Resulting singular value matrix ( M N N N N 1 </param>
            <param name="U">Optional left orthogonal matrix ( M M M N </param>
        </member>
        <member name="M:CxCore.cxcore.CvSVD(CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Performs singular value decomposition of real floating-point matrix
            </summary>
            <param name="A">Source M N </param>
            <param name="W">Resulting singular value matrix ( M N N N N 1 </param>
        </member>
        <member name="M:CxCore.cxcore.CvSVBkSb(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@,System.Int32)">
            <summary>
            Performs singular value back substitution
            </summary>
            <param name="W">Matrix or vector of singular values. </param>
            <param name="U">Left orthogonal matrix (tranposed, perhaps) </param>
            <param name="V">Right orthogonal matrix (tranposed, perhaps) </param>
            <param name="B">The matrix to multiply the pseudo-inverse of the original matrix A X A </param>
            <param name="X">The destination matrix: result of back substitution. </param>
            <param name="flags">Operation flags, should match exactly to the flags </param>
        </member>
        <member name="M:CxCore.cxcore.CvSVBkSb(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,System.Int32)">
            <summary>
            Performs singular value back substitution
            </summary>
            <param name="W">Matrix or vector of singular values. </param>
            <param name="U">Left orthogonal matrix (tranposed, perhaps) </param>
            <param name="V">Right orthogonal matrix (tranposed, perhaps) </param>
            <param name="B">The matrix to multiply the pseudo-inverse of the original matrix A X A </param>
            <param name="X">The destination matrix: result of back substitution. </param>
            <param name="flags">Operation flags, should match exactly to the flags </param>
        </member>
        <member name="M:CxCore.cxcore.CvSVBkSb(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@,System.Int32)">
            <summary>
            Performs singular value back substitution
            </summary>
            <param name="W">Matrix or vector of singular values. </param>
            <param name="U">Left orthogonal matrix (tranposed, perhaps) </param>
            <param name="V">Right orthogonal matrix (tranposed, perhaps) </param>
            <param name="B">The matrix to multiply the pseudo-inverse of the original matrix A X A </param>
            <param name="X">The destination matrix: result of back substitution. </param>
            <param name="flags">Operation flags, should match exactly to the flags </param>
        </member>
        <member name="M:CxCore.cxcore.CvEigenVV(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@,System.Double)">
            <summary>
            Computes eigenvalues and eigenvectors of symmetric matrix
            </summary>
            <param name="mat">The input symmetric square matrix. It is modified during the processing. </param>
            <param name="evects">The output matrix of eigenvectors, stored as a subsequent rows. </param>
            <param name="evals">The output vector of eigenvalues, stored in the descenting order (order ofeigenvalues and eigenvectors is syncronized, of course). </param>
            <param name="eps">Accuracy of diagonalization (typically, DBL_EPSILON=�10 </param>
        </member>
        <member name="M:CxCore.cxcore.CvEigenVV(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Computes eigenvalues and eigenvectors of symmetric matrix
            </summary>
            <param name="mat">The input symmetric square matrix. It is modified during the processing. </param>
            <param name="evects">The output matrix of eigenvectors, stored as a subsequent rows. </param>
            <param name="evals">The output vector of eigenvalues, stored in the descenting order (order ofeigenvalues and eigenvectors is syncronized, of course). </param>
        </member>
        <member name="M:CxCore.cxcore.CvEigenVV(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,System.Double)">
            <summary>
            Computes eigenvalues and eigenvectors of symmetric matrix
            </summary>
            <param name="mat">The input symmetric square matrix. It is modified during the processing. </param>
            <param name="evects">The output matrix of eigenvectors, stored as a subsequent rows. </param>
            <param name="evals">The output vector of eigenvalues, stored in the descenting order (order ofeigenvalues and eigenvectors is syncronized, of course). </param>
            <param name="eps">Accuracy of diagonalization (typically, DBL_EPSILON=�10 </param>
        </member>
        <member name="M:CxCore.cxcore.CvEigenVV(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Computes eigenvalues and eigenvectors of symmetric matrix
            </summary>
            <param name="mat">The input symmetric square matrix. It is modified during the processing. </param>
            <param name="evects">The output matrix of eigenvectors, stored as a subsequent rows. </param>
            <param name="evals">The output vector of eigenvalues, stored in the descenting order (order ofeigenvalues and eigenvectors is syncronized, of course). </param>
        </member>
        <member name="M:CxCore.cxcore.CvEigenVV(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@,System.Double)">
            <summary>
            Computes eigenvalues and eigenvectors of symmetric matrix
            </summary>
            <param name="mat">The input symmetric square matrix. It is modified during the processing. </param>
            <param name="evects">The output matrix of eigenvectors, stored as a subsequent rows. </param>
            <param name="evals">The output vector of eigenvalues, stored in the descenting order (order ofeigenvalues and eigenvectors is syncronized, of course). </param>
            <param name="eps">Accuracy of diagonalization (typically, DBL_EPSILON=�10 </param>
        </member>
        <member name="M:CxCore.cxcore.CvEigenVV(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Computes eigenvalues and eigenvectors of symmetric matrix
            </summary>
            <param name="mat">The input symmetric square matrix. It is modified during the processing. </param>
            <param name="evects">The output matrix of eigenvectors, stored as a subsequent rows. </param>
            <param name="evals">The output vector of eigenvalues, stored in the descenting order (order ofeigenvalues and eigenvectors is syncronized, of course). </param>
        </member>
        <member name="M:CxCore.cxcore.CvCalcCovarMatrix(CxCore.IplImage@,System.Int32,CxCore.IplImage@,CxCore.IplImage@,System.Int32)">
            <summary>
            Calculates covariation matrix of the set of vectors
            </summary>
            <param name="vects">The input vectors. They all must have the same type and the same size.             The vectors do not have to be 1D, they can be 2D (e.g. images) etc. </param>
            <param name="count">The number of input vectors. </param>
            <param name="cov_mat">The output covariation matrix that should be floating-point and square. </param>
            <param name="avg">The input or output (depending on the flags) array - the mean (average) vector of the input vectors. </param>
            <param name="flags">The operation flags, a combination of the following values: CV_COVAR_SCRAMBLED scale*[vects[0]-avg,vects[1]-avg,...] that is, the covariation matrix is count count CV_COVAR_NORMAL scale*[vects[0]-avg,vects[1]-avg,...]*[vects[0]-avg,vects[1]-avg,...] that is, cov_mat CV_COVAR_SCRAMBLED CV_COVAR_NORMAL CV_COVAR_USE_AVG avg avg avg avg CV_COVAR_SCALE CV_COVAR_ROWS vects[0] count avg CV_COVAR_COLS vects[0] count avg </param>
        </member>
        <member name="M:CxCore.cxcore.CvCalcCovarMatrix(CxCore.CvMat@,System.Int32,CxCore.CvMat@,CxCore.CvMat@,System.Int32)">
            <summary>
            Calculates covariation matrix of the set of vectors
            </summary>
            <param name="vects">The input vectors. They all must have the same type and the same size.             The vectors do not have to be 1D, they can be 2D (e.g. images) etc. </param>
            <param name="count">The number of input vectors. </param>
            <param name="cov_mat">The output covariation matrix that should be floating-point and square. </param>
            <param name="avg">The input or output (depending on the flags) array - the mean (average) vector of the input vectors. </param>
            <param name="flags">The operation flags, a combination of the following values: CV_COVAR_SCRAMBLED scale*[vects[0]-avg,vects[1]-avg,...] that is, the covariation matrix is count count CV_COVAR_NORMAL scale*[vects[0]-avg,vects[1]-avg,...]*[vects[0]-avg,vects[1]-avg,...] that is, cov_mat CV_COVAR_SCRAMBLED CV_COVAR_NORMAL CV_COVAR_USE_AVG avg avg avg avg CV_COVAR_SCALE CV_COVAR_ROWS vects[0] count avg CV_COVAR_COLS vects[0] count avg </param>
        </member>
        <member name="M:CxCore.cxcore.CvCalcCovarMatrix(CxCore.CvSeq@,System.Int32,CxCore.CvSeq@,CxCore.CvSeq@,System.Int32)">
            <summary>
            Calculates covariation matrix of the set of vectors
            </summary>
            <param name="vects">The input vectors. They all must have the same type and the same size.             The vectors do not have to be 1D, they can be 2D (e.g. images) etc. </param>
            <param name="count">The number of input vectors. </param>
            <param name="cov_mat">The output covariation matrix that should be floating-point and square. </param>
            <param name="avg">The input or output (depending on the flags) array - the mean (average) vector of the input vectors. </param>
            <param name="flags">The operation flags, a combination of the following values: CV_COVAR_SCRAMBLED scale*[vects[0]-avg,vects[1]-avg,...] that is, the covariation matrix is count count CV_COVAR_NORMAL scale*[vects[0]-avg,vects[1]-avg,...]*[vects[0]-avg,vects[1]-avg,...] that is, cov_mat CV_COVAR_SCRAMBLED CV_COVAR_NORMAL CV_COVAR_USE_AVG avg avg avg avg CV_COVAR_SCALE CV_COVAR_ROWS vects[0] count avg CV_COVAR_COLS vects[0] count avg </param>
        </member>
        <member name="M:CxCore.cxcore.CvMahalanobis(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Calculates Mahalonobis distance between two vectors
            </summary>
            <param name="vec1">The first 1D source vector. </param>
            <param name="vec2">The second 1D source vector. </param>
            <param name="mat">The inverse covariation matrix. </param>
        </member>
        <member name="M:CxCore.cxcore.CvMahalanobis(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Calculates Mahalonobis distance between two vectors
            </summary>
            <param name="vec1">The first 1D source vector. </param>
            <param name="vec2">The second 1D source vector. </param>
            <param name="mat">The inverse covariation matrix. </param>
        </member>
        <member name="M:CxCore.cxcore.CvMahalanobis(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Calculates Mahalonobis distance between two vectors
            </summary>
            <param name="vec1">The first 1D source vector. </param>
            <param name="vec2">The second 1D source vector. </param>
            <param name="mat">The inverse covariation matrix. </param>
        </member>
        <member name="M:CxCore.cxcore.CvCalcPCA(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@,System.Int32)">
            <summary>
            Performs Principal Component Analysis of a vector set
            </summary>
            <param name="data">The input data; each vector is either a single row ( CV_PCA_DATA_AS_ROW CV_PCA_DATA_AS_COL </param>
            <param name="avg">The mean (average) vector, computed inside the function or provided by user. </param>
            <param name="eigenvalues">The output eigenvalues of covariation matrix. </param>
            <param name="eigenvectors">The output eigenvectors of covariation matrix (i.e. principal components);                    one vector per row. </param>
            <param name="flags">The operation flags, a combination of the following values: CV_PCA_DATA_AS_ROW CV_PCA_DATA_AS_COL (the above two flags are mutually exclusive) CV_PCA_USE_AVG </param>
        </member>
        <member name="M:CxCore.cxcore.CvCalcPCA(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,System.Int32)">
            <summary>
            Performs Principal Component Analysis of a vector set
            </summary>
            <param name="data">The input data; each vector is either a single row ( CV_PCA_DATA_AS_ROW CV_PCA_DATA_AS_COL </param>
            <param name="avg">The mean (average) vector, computed inside the function or provided by user. </param>
            <param name="eigenvalues">The output eigenvalues of covariation matrix. </param>
            <param name="eigenvectors">The output eigenvectors of covariation matrix (i.e. principal components);                    one vector per row. </param>
            <param name="flags">The operation flags, a combination of the following values: CV_PCA_DATA_AS_ROW CV_PCA_DATA_AS_COL (the above two flags are mutually exclusive) CV_PCA_USE_AVG </param>
        </member>
        <member name="M:CxCore.cxcore.CvCalcPCA(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@,System.Int32)">
            <summary>
            Performs Principal Component Analysis of a vector set
            </summary>
            <param name="data">The input data; each vector is either a single row ( CV_PCA_DATA_AS_ROW CV_PCA_DATA_AS_COL </param>
            <param name="avg">The mean (average) vector, computed inside the function or provided by user. </param>
            <param name="eigenvalues">The output eigenvalues of covariation matrix. </param>
            <param name="eigenvectors">The output eigenvectors of covariation matrix (i.e. principal components);                    one vector per row. </param>
            <param name="flags">The operation flags, a combination of the following values: CV_PCA_DATA_AS_ROW CV_PCA_DATA_AS_COL (the above two flags are mutually exclusive) CV_PCA_USE_AVG </param>
        </member>
        <member name="M:CxCore.cxcore.CvProjectPCA(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Projects vectors to the specified subspace
            </summary>
            <param name="data">The input data; each vector is either a single row            or a single column. </param>
            <param name="avg">The mean (average) vector. If it is a single-row vector,           it means that the input vectors are stored as rows of data data </param>
            <param name="eigenvectors">The eigenvectors (principal components); one vector per row. </param>
            <param name="result">The output matrix of decomposition coefficients. The number of rows must be              the same as the number of vectors, the number of columns must              be less than or equal to the number of rows in eigenvectors cols(result) </param>
        </member>
        <member name="M:CxCore.cxcore.CvProjectPCA(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Projects vectors to the specified subspace
            </summary>
            <param name="data">The input data; each vector is either a single row            or a single column. </param>
            <param name="avg">The mean (average) vector. If it is a single-row vector,           it means that the input vectors are stored as rows of data data </param>
            <param name="eigenvectors">The eigenvectors (principal components); one vector per row. </param>
            <param name="result">The output matrix of decomposition coefficients. The number of rows must be              the same as the number of vectors, the number of columns must              be less than or equal to the number of rows in eigenvectors cols(result) </param>
        </member>
        <member name="M:CxCore.cxcore.CvProjectPCA(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Projects vectors to the specified subspace
            </summary>
            <param name="data">The input data; each vector is either a single row            or a single column. </param>
            <param name="avg">The mean (average) vector. If it is a single-row vector,           it means that the input vectors are stored as rows of data data </param>
            <param name="eigenvectors">The eigenvectors (principal components); one vector per row. </param>
            <param name="result">The output matrix of decomposition coefficients. The number of rows must be              the same as the number of vectors, the number of columns must              be less than or equal to the number of rows in eigenvectors cols(result) </param>
        </member>
        <member name="M:CxCore.cxcore.CvBackProjectPCA(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Reconstructs the original vectors from the projection coefficients
            </summary>
            <param name="proj">The input data; in the same format as result </param>
            <param name="avg">The mean (average) vector. If it is a single-row vector,           it means that the output vectors are stored as rows of result result </param>
            <param name="eigenvects">eigenvects</param>
            <param name="result">The output matrix of reconstructed vectors. </param>
        </member>
        <member name="M:CxCore.cxcore.CvBackProjectPCA(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Reconstructs the original vectors from the projection coefficients
            </summary>
            <param name="proj">The input data; in the same format as result </param>
            <param name="avg">The mean (average) vector. If it is a single-row vector,           it means that the output vectors are stored as rows of result result </param>
            <param name="eigenvects">eigenvects</param>
            <param name="result">The output matrix of reconstructed vectors. </param>
        </member>
        <member name="M:CxCore.cxcore.CvBackProjectPCA(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Reconstructs the original vectors from the projection coefficients
            </summary>
            <param name="proj">The input data; in the same format as result </param>
            <param name="avg">The mean (average) vector. If it is a single-row vector,           it means that the output vectors are stored as rows of result result </param>
            <param name="eigenvects">eigenvects</param>
            <param name="result">The output matrix of reconstructed vectors. </param>
        </member>
        <member name="M:CxCore.cxcore.CvRound(System.Double)">
            <summary>
            Converts floating-point number to integer
            </summary>
            <param name="value">The input floating-point value </param>
        </member>
        <member name="M:CxCore.cxcore.CvFloor(System.Double)">
            <summary>
            Converts floating-point number to integer
            </summary>
            <param name="value">The input floating-point value </param>
        </member>
        <member name="M:CxCore.cxcore.CvCeil(System.Double)">
            <summary>
            Converts floating-point number to integer
            </summary>
            <param name="value">The input floating-point value </param>
        </member>
        <member name="M:CxCore.cxcore.CvSqrt(System.Single)">
            <summary>
            Calculates square root
            </summary>
            <param name="value">The input floating-point value </param>
        </member>
        <member name="M:CxCore.cxcore.CvInvSqrt(System.Single)">
            <summary>
            Calculates inverse square root
            </summary>
            <param name="value">The input floating-point value </param>
        </member>
        <member name="M:CxCore.cxcore.CvCbrt(System.Single)">
            <summary>
            Calculates cubic root
            </summary>
            <param name="value">The input floating-point value </param>
        </member>
        <member name="M:CxCore.cxcore.CvFastArctan(System.Single,System.Single)">
            <summary>
            Calculates angle of 2D vector
            </summary>
            <param name="y">y-coordinate of 2D vector </param>
            <param name="x">x-coordinate of 2D vector </param>
        </member>
        <member name="M:CxCore.cxcore.CvIsNaN(System.Double)">
            <summary>
            Determines if the argument is Not A Number
            </summary>
            <param name="value">The input floating-point value </param>
        </member>
        <member name="M:CxCore.cxcore.CvIsInf(System.Double)">
            <summary>
            Determines if the argument is Infinity
            </summary>
            <param name="value">The input floating-point value </param>
        </member>
        <member name="M:CxCore.cxcore.CvCartToPolar(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@,System.Int32)">
            <summary>
            Calculates magnitude and/or angle of 2d vectors
            </summary>
            <param name="x">The array of x-coordinates </param>
            <param name="y">The array of y-coordinates </param>
            <param name="magnitude">The destination array of magnitudes, may be set to NULL if it is not needed </param>
            <param name="angle">The destination array of angles, may be set to NULL if it is not needed.        The angles are measured in radians (0..2p) or in degrees (0..360�). </param>
            <param name="angle_in_degrees">The flag indicating whether the angles are measured in radians,                        which is default mode, or in degrees. </param>
        </member>
        <member name="M:CxCore.cxcore.CvCartToPolar(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Calculates magnitude and/or angle of 2d vectors
            </summary>
            <param name="x">The array of x-coordinates </param>
            <param name="y">The array of y-coordinates </param>
            <param name="magnitude">The destination array of magnitudes, may be set to NULL if it is not needed </param>
            <param name="angle">The destination array of angles, may be set to NULL if it is not needed.        The angles are measured in radians (0..2p) or in degrees (0..360�). </param>
        </member>
        <member name="M:CxCore.cxcore.CvCartToPolar(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Calculates magnitude and/or angle of 2d vectors
            </summary>
            <param name="x">The array of x-coordinates </param>
            <param name="y">The array of y-coordinates </param>
            <param name="magnitude">The destination array of magnitudes, may be set to NULL if it is not needed </param>
        </member>
        <member name="M:CxCore.cxcore.CvCartToPolar(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@,System.Int32)">
            <summary>
            Calculates magnitude and/or angle of 2d vectors
            </summary>
            <param name="x">The array of x-coordinates </param>
            <param name="y">The array of y-coordinates </param>
            <param name="magnitude">The destination array of magnitudes, may be set to NULL if it is not needed </param>
            <param name="angle_in_degrees">The flag indicating whether the angles are measured in radians,                        which is default mode, or in degrees. </param>
        </member>
        <member name="M:CxCore.cxcore.CvCartToPolar(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,System.Int32)">
            <summary>
            Calculates magnitude and/or angle of 2d vectors
            </summary>
            <param name="x">The array of x-coordinates </param>
            <param name="y">The array of y-coordinates </param>
            <param name="magnitude">The destination array of magnitudes, may be set to NULL if it is not needed </param>
            <param name="angle">The destination array of angles, may be set to NULL if it is not needed.        The angles are measured in radians (0..2p) or in degrees (0..360�). </param>
            <param name="angle_in_degrees">The flag indicating whether the angles are measured in radians,                        which is default mode, or in degrees. </param>
        </member>
        <member name="M:CxCore.cxcore.CvCartToPolar(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Calculates magnitude and/or angle of 2d vectors
            </summary>
            <param name="x">The array of x-coordinates </param>
            <param name="y">The array of y-coordinates </param>
            <param name="magnitude">The destination array of magnitudes, may be set to NULL if it is not needed </param>
            <param name="angle">The destination array of angles, may be set to NULL if it is not needed.        The angles are measured in radians (0..2p) or in degrees (0..360�). </param>
        </member>
        <member name="M:CxCore.cxcore.CvCartToPolar(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Calculates magnitude and/or angle of 2d vectors
            </summary>
            <param name="x">The array of x-coordinates </param>
            <param name="y">The array of y-coordinates </param>
            <param name="magnitude">The destination array of magnitudes, may be set to NULL if it is not needed </param>
        </member>
        <member name="M:CxCore.cxcore.CvCartToPolar(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,System.Int32)">
            <summary>
            Calculates magnitude and/or angle of 2d vectors
            </summary>
            <param name="x">The array of x-coordinates </param>
            <param name="y">The array of y-coordinates </param>
            <param name="magnitude">The destination array of magnitudes, may be set to NULL if it is not needed </param>
            <param name="angle_in_degrees">The flag indicating whether the angles are measured in radians,                        which is default mode, or in degrees. </param>
        </member>
        <member name="M:CxCore.cxcore.CvCartToPolar(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@,System.Int32)">
            <summary>
            Calculates magnitude and/or angle of 2d vectors
            </summary>
            <param name="x">The array of x-coordinates </param>
            <param name="y">The array of y-coordinates </param>
            <param name="magnitude">The destination array of magnitudes, may be set to NULL if it is not needed </param>
            <param name="angle">The destination array of angles, may be set to NULL if it is not needed.        The angles are measured in radians (0..2p) or in degrees (0..360�). </param>
            <param name="angle_in_degrees">The flag indicating whether the angles are measured in radians,                        which is default mode, or in degrees. </param>
        </member>
        <member name="M:CxCore.cxcore.CvCartToPolar(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Calculates magnitude and/or angle of 2d vectors
            </summary>
            <param name="x">The array of x-coordinates </param>
            <param name="y">The array of y-coordinates </param>
            <param name="magnitude">The destination array of magnitudes, may be set to NULL if it is not needed </param>
            <param name="angle">The destination array of angles, may be set to NULL if it is not needed.        The angles are measured in radians (0..2p) or in degrees (0..360�). </param>
        </member>
        <member name="M:CxCore.cxcore.CvCartToPolar(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Calculates magnitude and/or angle of 2d vectors
            </summary>
            <param name="x">The array of x-coordinates </param>
            <param name="y">The array of y-coordinates </param>
            <param name="magnitude">The destination array of magnitudes, may be set to NULL if it is not needed </param>
        </member>
        <member name="M:CxCore.cxcore.CvCartToPolar(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@,System.Int32)">
            <summary>
            Calculates magnitude and/or angle of 2d vectors
            </summary>
            <param name="x">The array of x-coordinates </param>
            <param name="y">The array of y-coordinates </param>
            <param name="magnitude">The destination array of magnitudes, may be set to NULL if it is not needed </param>
            <param name="angle_in_degrees">The flag indicating whether the angles are measured in radians,                        which is default mode, or in degrees. </param>
        </member>
        <member name="M:CxCore.cxcore.CvPolarToCart(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@,System.Int32)">
            <summary>
            Calculates cartesian coordinates of 2d vectors represented in polar form
            </summary>
            <param name="magnitude">The array of magnitudes. If it is NULL, the magnitudes are assumed all 1?s. </param>
            <param name="angle">The array of angles, whether in radians or degrees. </param>
            <param name="x">The destination array of x-coordinates, may be set to NULL if it is not needed. </param>
            <param name="y">The destination array of y-coordinates, mau be set to NULL if it is not needed. </param>
            <param name="angle_in_degrees">The flag indicating whether the angles are measured in radians,                        which is default mode, or in degrees. </param>
        </member>
        <member name="M:CxCore.cxcore.CvPolarToCart(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Calculates cartesian coordinates of 2d vectors represented in polar form
            </summary>
            <param name="magnitude">The array of magnitudes. If it is NULL, the magnitudes are assumed all 1?s. </param>
            <param name="angle">The array of angles, whether in radians or degrees. </param>
            <param name="x">The destination array of x-coordinates, may be set to NULL if it is not needed. </param>
            <param name="y">The destination array of y-coordinates, mau be set to NULL if it is not needed. </param>
        </member>
        <member name="M:CxCore.cxcore.CvPolarToCart(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,System.Int32)">
            <summary>
            Calculates cartesian coordinates of 2d vectors represented in polar form
            </summary>
            <param name="magnitude">The array of magnitudes. If it is NULL, the magnitudes are assumed all 1?s. </param>
            <param name="angle">The array of angles, whether in radians or degrees. </param>
            <param name="x">The destination array of x-coordinates, may be set to NULL if it is not needed. </param>
            <param name="y">The destination array of y-coordinates, mau be set to NULL if it is not needed. </param>
            <param name="angle_in_degrees">The flag indicating whether the angles are measured in radians,                        which is default mode, or in degrees. </param>
        </member>
        <member name="M:CxCore.cxcore.CvPolarToCart(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Calculates cartesian coordinates of 2d vectors represented in polar form
            </summary>
            <param name="magnitude">The array of magnitudes. If it is NULL, the magnitudes are assumed all 1?s. </param>
            <param name="angle">The array of angles, whether in radians or degrees. </param>
            <param name="x">The destination array of x-coordinates, may be set to NULL if it is not needed. </param>
            <param name="y">The destination array of y-coordinates, mau be set to NULL if it is not needed. </param>
        </member>
        <member name="M:CxCore.cxcore.CvPolarToCart(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@,System.Int32)">
            <summary>
            Calculates cartesian coordinates of 2d vectors represented in polar form
            </summary>
            <param name="magnitude">The array of magnitudes. If it is NULL, the magnitudes are assumed all 1?s. </param>
            <param name="angle">The array of angles, whether in radians or degrees. </param>
            <param name="x">The destination array of x-coordinates, may be set to NULL if it is not needed. </param>
            <param name="y">The destination array of y-coordinates, mau be set to NULL if it is not needed. </param>
            <param name="angle_in_degrees">The flag indicating whether the angles are measured in radians,                        which is default mode, or in degrees. </param>
        </member>
        <member name="M:CxCore.cxcore.CvPolarToCart(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Calculates cartesian coordinates of 2d vectors represented in polar form
            </summary>
            <param name="magnitude">The array of magnitudes. If it is NULL, the magnitudes are assumed all 1?s. </param>
            <param name="angle">The array of angles, whether in radians or degrees. </param>
            <param name="x">The destination array of x-coordinates, may be set to NULL if it is not needed. </param>
            <param name="y">The destination array of y-coordinates, mau be set to NULL if it is not needed. </param>
        </member>
        <member name="M:CxCore.cxcore.CvPow(CxCore.IplImage@,CxCore.IplImage@,System.Double)">
            <summary>
            Raises every array element to power
            </summary>
            <param name="src">The source array. </param>
            <param name="dst">The destination array, should be the same type as the source. </param>
            <param name="power">The exponent of power. </param>
        </member>
        <member name="M:CxCore.cxcore.CvPow(CxCore.CvMat@,CxCore.CvMat@,System.Double)">
            <summary>
            Raises every array element to power
            </summary>
            <param name="src">The source array. </param>
            <param name="dst">The destination array, should be the same type as the source. </param>
            <param name="power">The exponent of power. </param>
        </member>
        <member name="M:CxCore.cxcore.CvPow(CxCore.CvSeq@,CxCore.CvSeq@,System.Double)">
            <summary>
            Raises every array element to power
            </summary>
            <param name="src">The source array. </param>
            <param name="dst">The destination array, should be the same type as the source. </param>
            <param name="power">The exponent of power. </param>
        </member>
        <member name="M:CxCore.cxcore.CvExp(CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Calculates exponent of every array element
            </summary>
            <param name="src">The source array. </param>
            <param name="dst">The destination array, it should have double </param>
        </member>
        <member name="M:CxCore.cxcore.CvExp(CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Calculates exponent of every array element
            </summary>
            <param name="src">The source array. </param>
            <param name="dst">The destination array, it should have double </param>
        </member>
        <member name="M:CxCore.cxcore.CvExp(CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Calculates exponent of every array element
            </summary>
            <param name="src">The source array. </param>
            <param name="dst">The destination array, it should have double </param>
        </member>
        <member name="M:CxCore.cxcore.CvLog(CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Calculates natural logarithm of every array element absolute value
            </summary>
            <param name="src">The source array. </param>
            <param name="dst">The destination array, it should have double </param>
        </member>
        <member name="M:CxCore.cxcore.CvLog(CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Calculates natural logarithm of every array element absolute value
            </summary>
            <param name="src">The source array. </param>
            <param name="dst">The destination array, it should have double </param>
        </member>
        <member name="M:CxCore.cxcore.CvLog(CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Calculates natural logarithm of every array element absolute value
            </summary>
            <param name="src">The source array. </param>
            <param name="dst">The destination array, it should have double </param>
        </member>
        <member name="M:CxCore.cxcore.CvSolveCubic(CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Finds real roots of a cubic equation
            </summary>
            <param name="coeffs">The equation coefficients, array of 3 or 4 elements. </param>
            <param name="roots">The output array of real roots. Should have 3 elements. </param>
        </member>
        <member name="M:CxCore.cxcore.CvRandArr(System.UInt64@,CxCore.IplImage@,System.Int32,CxCore.CvScalar,CxCore.CvScalar)">
            <summary>
            Fills array with random numbers and updates the RNG state
            </summary>
            <param name="rng">RNG state initialized by </param>
            <param name="arr">The destination array. </param>
            <param name="dist_type">Distribution type: CV_RAND_UNI - uniform distribution CV_RAND_NORMAL - normal or Gaussian distribution </param>
            <param name="param1">The first parameter of distribution. In case of uniform distribution it is              the inclusive lower boundary of random numbers range. In case of              normal distribution it is the mean value of random numbers. </param>
            <param name="param2">The second parameter of distribution. In case of uniform distribution it is              the exclusive upper boundary of random numbers range. In case of              normal distribution it is the standard deviation of random numbers. </param>
        </member>
        <member name="M:CxCore.cxcore.CvRandArr(System.UInt64@,CxCore.CvMat@,System.Int32,CxCore.CvScalar,CxCore.CvScalar)">
            <summary>
            Fills array with random numbers and updates the RNG state
            </summary>
            <param name="rng">RNG state initialized by </param>
            <param name="arr">The destination array. </param>
            <param name="dist_type">Distribution type: CV_RAND_UNI - uniform distribution CV_RAND_NORMAL - normal or Gaussian distribution </param>
            <param name="param1">The first parameter of distribution. In case of uniform distribution it is              the inclusive lower boundary of random numbers range. In case of              normal distribution it is the mean value of random numbers. </param>
            <param name="param2">The second parameter of distribution. In case of uniform distribution it is              the exclusive upper boundary of random numbers range. In case of              normal distribution it is the standard deviation of random numbers. </param>
        </member>
        <member name="M:CxCore.cxcore.CvRandArr(System.UInt64@,CxCore.CvSeq@,System.Int32,CxCore.CvScalar,CxCore.CvScalar)">
            <summary>
            Fills array with random numbers and updates the RNG state
            </summary>
            <param name="rng">RNG state initialized by </param>
            <param name="arr">The destination array. </param>
            <param name="dist_type">Distribution type: CV_RAND_UNI - uniform distribution CV_RAND_NORMAL - normal or Gaussian distribution </param>
            <param name="param1">The first parameter of distribution. In case of uniform distribution it is              the inclusive lower boundary of random numbers range. In case of              normal distribution it is the mean value of random numbers. </param>
            <param name="param2">The second parameter of distribution. In case of uniform distribution it is              the exclusive upper boundary of random numbers range. In case of              normal distribution it is the standard deviation of random numbers. </param>
        </member>
        <member name="M:CxCore.cxcore.CvRandInt(System.UInt64@)">
            <summary>
            Returns 32-bit unsigned integer and updates RNG
            </summary>
            <param name="rng">RNG state initialized by RandInit RandSetRange </param>
        </member>
        <member name="M:CxCore.cxcore.CvRandReal(System.UInt64@)">
            <summary>
            Returns floating-point random number and updates RNG
            </summary>
            <param name="rng">RNG state initialized by </param>
        </member>
        <member name="M:CxCore.cxcore.CvDFT(CxCore.IplImage@,CxCore.IplImage@,System.Int32,System.Int32)">
            <summary>
            Performs forward or inverse Discrete Fourier transform of 1D or 2D floating-point array
            </summary>
            <param name="src">Source array, real or complex. </param>
            <param name="dst">Destination array of the same size and same type as the source. </param>
            <param name="flags">Transformation flags, a combination of the following values: CV_DXT_FORWARD CV_DXT_INVERSE CV_DXT_FORWARD CV_DXT_INVERSE CV_DXT_SCALE CV_DXT_INVERSE CV_DXT_INV_SCALE CV_DXT_ROWS </param>
            <param name="nonzero_rows">Number of nonzero rows to in the source array (in case of forward 2d transform),                    or a number of rows of interest in the destination array (in case of inverse 2d transform).                    If the value is negative, zero, or greater than the total number of rows, it is ignored.                    The parameter can be used to speed up 2d convolution/correlation when computing them via DFT.                    See the sample below. </param>
        </member>
        <member name="M:CxCore.cxcore.CvDFT(CxCore.IplImage@,CxCore.IplImage@,System.Int32)">
            <summary>
            Performs forward or inverse Discrete Fourier transform of 1D or 2D floating-point array
            </summary>
            <param name="src">Source array, real or complex. </param>
            <param name="dst">Destination array of the same size and same type as the source. </param>
            <param name="flags">Transformation flags, a combination of the following values: CV_DXT_FORWARD CV_DXT_INVERSE CV_DXT_FORWARD CV_DXT_INVERSE CV_DXT_SCALE CV_DXT_INVERSE CV_DXT_INV_SCALE CV_DXT_ROWS </param>
        </member>
        <member name="M:CxCore.cxcore.CvDFT(CxCore.CvMat@,CxCore.CvMat@,System.Int32,System.Int32)">
            <summary>
            Performs forward or inverse Discrete Fourier transform of 1D or 2D floating-point array
            </summary>
            <param name="src">Source array, real or complex. </param>
            <param name="dst">Destination array of the same size and same type as the source. </param>
            <param name="flags">Transformation flags, a combination of the following values: CV_DXT_FORWARD CV_DXT_INVERSE CV_DXT_FORWARD CV_DXT_INVERSE CV_DXT_SCALE CV_DXT_INVERSE CV_DXT_INV_SCALE CV_DXT_ROWS </param>
            <param name="nonzero_rows">Number of nonzero rows to in the source array (in case of forward 2d transform),                    or a number of rows of interest in the destination array (in case of inverse 2d transform).                    If the value is negative, zero, or greater than the total number of rows, it is ignored.                    The parameter can be used to speed up 2d convolution/correlation when computing them via DFT.                    See the sample below. </param>
        </member>
        <member name="M:CxCore.cxcore.CvDFT(CxCore.CvMat@,CxCore.CvMat@,System.Int32)">
            <summary>
            Performs forward or inverse Discrete Fourier transform of 1D or 2D floating-point array
            </summary>
            <param name="src">Source array, real or complex. </param>
            <param name="dst">Destination array of the same size and same type as the source. </param>
            <param name="flags">Transformation flags, a combination of the following values: CV_DXT_FORWARD CV_DXT_INVERSE CV_DXT_FORWARD CV_DXT_INVERSE CV_DXT_SCALE CV_DXT_INVERSE CV_DXT_INV_SCALE CV_DXT_ROWS </param>
        </member>
        <member name="M:CxCore.cxcore.CvDFT(CxCore.CvSeq@,CxCore.CvSeq@,System.Int32,System.Int32)">
            <summary>
            Performs forward or inverse Discrete Fourier transform of 1D or 2D floating-point array
            </summary>
            <param name="src">Source array, real or complex. </param>
            <param name="dst">Destination array of the same size and same type as the source. </param>
            <param name="flags">Transformation flags, a combination of the following values: CV_DXT_FORWARD CV_DXT_INVERSE CV_DXT_FORWARD CV_DXT_INVERSE CV_DXT_SCALE CV_DXT_INVERSE CV_DXT_INV_SCALE CV_DXT_ROWS </param>
            <param name="nonzero_rows">Number of nonzero rows to in the source array (in case of forward 2d transform),                    or a number of rows of interest in the destination array (in case of inverse 2d transform).                    If the value is negative, zero, or greater than the total number of rows, it is ignored.                    The parameter can be used to speed up 2d convolution/correlation when computing them via DFT.                    See the sample below. </param>
        </member>
        <member name="M:CxCore.cxcore.CvDFT(CxCore.CvSeq@,CxCore.CvSeq@,System.Int32)">
            <summary>
            Performs forward or inverse Discrete Fourier transform of 1D or 2D floating-point array
            </summary>
            <param name="src">Source array, real or complex. </param>
            <param name="dst">Destination array of the same size and same type as the source. </param>
            <param name="flags">Transformation flags, a combination of the following values: CV_DXT_FORWARD CV_DXT_INVERSE CV_DXT_FORWARD CV_DXT_INVERSE CV_DXT_SCALE CV_DXT_INVERSE CV_DXT_INV_SCALE CV_DXT_ROWS </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetOptimalDFTSize(System.Int32)">
            <summary>
            Returns optimal DFT size for given vector size
            </summary>
            <param name="size0">Vector size. </param>
        </member>
        <member name="M:CxCore.cxcore.CvMulSpectrums(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@,System.Int32)">
            <summary>
            Performs per-element multiplication of two Fourier spectrums
            </summary>
            <param name="src1">The first source array. </param>
            <param name="src2">The second source array. </param>
            <param name="dst">The destination array of the same type and the same size of the sources. </param>
            <param name="flags">A combination of the following values: CV_DXT_ROWS CV_DXT_MUL_CONJ </param>
        </member>
        <member name="M:CxCore.cxcore.CvMulSpectrums(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,System.Int32)">
            <summary>
            Performs per-element multiplication of two Fourier spectrums
            </summary>
            <param name="src1">The first source array. </param>
            <param name="src2">The second source array. </param>
            <param name="dst">The destination array of the same type and the same size of the sources. </param>
            <param name="flags">A combination of the following values: CV_DXT_ROWS CV_DXT_MUL_CONJ </param>
        </member>
        <member name="M:CxCore.cxcore.CvMulSpectrums(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@,System.Int32)">
            <summary>
            Performs per-element multiplication of two Fourier spectrums
            </summary>
            <param name="src1">The first source array. </param>
            <param name="src2">The second source array. </param>
            <param name="dst">The destination array of the same type and the same size of the sources. </param>
            <param name="flags">A combination of the following values: CV_DXT_ROWS CV_DXT_MUL_CONJ </param>
        </member>
        <member name="M:CxCore.cxcore.CvDCT(CxCore.IplImage@,CxCore.IplImage@,System.Int32,System.Int32)">
            <summary>
            Performs forward or inverse Discrete Cosine transform of 1D or 2D floating-point array
            </summary>
            <param name="src">Source array, real 1D or 2D array. </param>
            <param name="dst">Destination array of the same size and same type as the source. </param>
            <param name="flags">Transformation flags, a combination of the following values: CV_DXT_FORWARD CV_DXT_INVERSE CV_DXT_ROWS </param>
            <param name="nonzero_rows">nonzero_rows</param>
        </member>
        <member name="M:CxCore.cxcore.CvDCT(CxCore.CvMat@,CxCore.CvMat@,System.Int32,System.Int32)">
            <summary>
            Performs forward or inverse Discrete Cosine transform of 1D or 2D floating-point array
            </summary>
            <param name="src">Source array, real 1D or 2D array. </param>
            <param name="dst">Destination array of the same size and same type as the source. </param>
            <param name="flags">Transformation flags, a combination of the following values: CV_DXT_FORWARD CV_DXT_INVERSE CV_DXT_ROWS </param>
            <param name="nonzero_rows">nonzero_rows</param>
        </member>
        <member name="M:CxCore.cxcore.CvDCT(CxCore.CvSeq@,CxCore.CvSeq@,System.Int32,System.Int32)">
            <summary>
            Performs forward or inverse Discrete Cosine transform of 1D or 2D floating-point array
            </summary>
            <param name="src">Source array, real 1D or 2D array. </param>
            <param name="dst">Destination array of the same size and same type as the source. </param>
            <param name="flags">Transformation flags, a combination of the following values: CV_DXT_FORWARD CV_DXT_INVERSE CV_DXT_ROWS </param>
            <param name="nonzero_rows">nonzero_rows</param>
        </member>
        <member name="M:CxCore.cxcore.CvCreateMemStorage(System.Int32)">
            <summary>
            Creates memory storage
            </summary>
            <param name="block_size">Size of the storage blocks in bytes. If it is 0, the block size is set to default value- currently it is �64K. </param>
        </member>
        <member name="M:CxCore.cxcore.CvCreateMemStorage">
            <summary>
            Creates memory storage
            </summary>
        </member>
        <member name="M:CxCore.cxcore.CvCreateChildMemStorage(CxCore.CvMemStorage@)">
            <summary>
            Creates child memory storage
            </summary>
            <param name="parent">Parent memory storage. </param>
        </member>
        <member name="M:CxCore.cxcore.CvReleaseMemStorage(CxCore.CvMemStorage@)">
            <summary>
            Releases memory storage
            </summary>
            <param name="storage">Pointer to the released storage. </param>
        </member>
        <member name="M:CxCore.cxcore.CvClearMemStorage(CxCore.CvMemStorage@)">
            <summary>
            Clears memory storage
            </summary>
            <param name="storage">Memory storage. </param>
        </member>
        <member name="M:CxCore.cxcore.CvMemStorageAlloc(CxCore.CvMemStorage@,System.Int32)">
            <summary>
            Allocates memory buffer in the storage
            </summary>
            <param name="storage">Memory storage. </param>
            <param name="size">Buffer size. </param>
        </member>
        <member name="M:CxCore.cxcore.CvMemStorageAllocString(CxCore.CvMemStorage@,System.String,System.Int32)">
            <summary>
            Allocates text string in the storage
            </summary>
            <param name="storage">Memory storage. </param>
            <param name="ptr">The string. </param>
            <param name="len">Length of the string (not counting the ending '\0'). If the parameter is negative,           the function computes the length. </param>
        </member>
        <member name="M:CxCore.cxcore.CvMemStorageAllocString(CxCore.CvMemStorage@,System.String)">
            <summary>
            Allocates text string in the storage
            </summary>
            <param name="storage">Memory storage. </param>
            <param name="ptr">The string. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSaveMemStoragePos(CxCore.CvMemStorage@,CxCore.CvMemStoragePos@)">
            <summary>
            Saves memory storage position
            </summary>
            <param name="storage">Memory storage. </param>
            <param name="pos">The output position of the storage top. </param>
        </member>
        <member name="M:CxCore.cxcore.CvRestoreMemStoragePos(CxCore.CvMemStorage@,CxCore.CvMemStoragePos@)">
            <summary>
            Restores memory storage position
            </summary>
            <param name="storage">Memory storage. </param>
            <param name="pos">New storage top position. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSliceLength(CxCore.CvSlice,CxCore.CvSeq@)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="slice">slice</param>
            <param name="seq">seq</param>
        </member>
        <member name="M:CxCore.cxcore.CvCreateSeq(System.Int32,System.Int32,System.Int32,CxCore.CvMemStorage@)">
            <summary>
            Creates sequence
            </summary>
            <param name="seq_flags">Flags of the created sequence. If the sequence is not passed to anyfunction working with a specific type of sequences, the sequence value may beset to 0, otherwise the appropriate type must be selected from the list of predefined sequence types. 
            CV_SEQ_ELTYPE_POINT          CV_32SC2  /* (x,y) */
            CV_SEQ_ELTYPE_CODE           CV_8UC1   /* freeman code: 0..7 */
            CV_SEQ_ELTYPE_GENERIC        0 /* unspecified type of sequence elements */
            CV_SEQ_ELTYPE_PTR            CV_USRTYPE1 /* =6 */
            CV_SEQ_ELTYPE_PPOINT         CV_SEQ_ELTYPE_PTR  /* elem: pointer to element of other sequence */
            CV_SEQ_ELTYPE_INDEX          CV_32SC1  /* #elem: index of element of some other sequence */
            CV_SEQ_ELTYPE_GRAPH_EDGE     CV_SEQ_ELTYPE_GENERIC  /* next_o, next_d, vtx_o, vtx_d */
            CV_SEQ_ELTYPE_GRAPH_VERTEX   CV_SEQ_ELTYPE_GENERIC  /* first_edge, (x,y) */
            CV_SEQ_ELTYPE_TRIAN_ATR      CV_SEQ_ELTYPE_GENERIC  /* vertex of the binary tree   */
            CV_SEQ_ELTYPE_CONNECTED_COMP CV_SEQ_ELTYPE_GENERIC  /* connected component  */
            CV_SEQ_ELTYPE_POINT3D        CV_32FC3  /* (x,y,z)  */ 
            but also standard Types like for CvMat.</param>
            <param name="header_size">Size of the sequence header; must be greater or equal to sizeof(CvSeq) </param>
            <param name="elem_size">Size of the sequence elements in bytes. The size must be consistentwith the sequence type. For example, for a sequence of points to be created, theelement type CV_SEQ_ELTYPE_POINT elem_size sizeof(CvPoint) </param>
            <param name="storage">Sequence location. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSetSeqBlockSize(CxCore.CvSeq@,System.Int32)">
            <summary>
            Sets up sequence block size
            </summary>
            <param name="seq">Sequence. </param>
            <param name="delta_elems">Desirable sequence block size in elements. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSeqPush(CxCore.CvSeq@,System.IntPtr)">
            <summary>
            Adds element to sequence end
            </summary>
            <param name="seq">Sequence. </param>
            <param name="element">Added element. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSeqPush(CxCore.CvSeq@)">
            <summary>
            Adds element to sequence end
            </summary>
            <param name="seq">Sequence. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSeqPop(CxCore.CvSeq@,System.IntPtr)">
            <summary>
            Removes element from sequence end
            </summary>
            <param name="seq">Sequence. </param>
            <param name="element">Optional parameter. If the pointer is not zero, the function copies theremoved element to this location. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSeqPop(CxCore.CvSeq@)">
            <summary>
            Removes element from sequence end
            </summary>
            <param name="seq">Sequence. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSeqPushFront(CxCore.CvSeq@,System.IntPtr)">
            <summary>
            Adds element to sequence beginning
            </summary>
            <param name="seq">Sequence. </param>
            <param name="element">Added element. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSeqPushFront(CxCore.CvSeq@)">
            <summary>
            Adds element to sequence beginning
            </summary>
            <param name="seq">Sequence. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSeqPopFront(CxCore.CvSeq@,System.IntPtr)">
            <summary>
            Removes element from sequence beginning
            </summary>
            <param name="seq">Sequence. </param>
            <param name="element">Optional parameter. If the pointer is not zero, the function copies theremoved element to this location. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSeqPopFront(CxCore.CvSeq@)">
            <summary>
            Removes element from sequence beginning
            </summary>
            <param name="seq">Sequence. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSeqPushMulti(CxCore.CvSeq@,System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Pushes several elements to the either end of sequence
            </summary>
            <param name="seq">Sequence. </param>
            <param name="elements">Added elements. </param>
            <param name="count">Number of elements to push. </param>
            <param name="in_front">The flags specifying the modified sequence end: CV_BACK (=0) - the elements are added to the end of sequence CV_FRONT(!=0) - the elements are added to the beginning of sequence </param>
        </member>
        <member name="M:CxCore.cxcore.CvSeqPushMulti(CxCore.CvSeq@,System.IntPtr,System.Int32)">
            <summary>
            Pushes several elements to the either end of sequence
            </summary>
            <param name="seq">Sequence. </param>
            <param name="elements">Added elements. </param>
            <param name="count">Number of elements to push. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSeqPopMulti(CxCore.CvSeq@,System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Removes several elements from the either end of sequence
            </summary>
            <param name="seq">Sequence. </param>
            <param name="elements">Removed elements. </param>
            <param name="count">Number of elements to pop. </param>
            <param name="in_front">The flags specifying the modified sequence end: CV_BACK (=0) - the elements are removed from the end of sequence CV_FRONT(!=0) - the elements are removed from the beginning of sequence </param>
        </member>
        <member name="M:CxCore.cxcore.CvSeqPopMulti(CxCore.CvSeq@,System.IntPtr,System.Int32)">
            <summary>
            Removes several elements from the either end of sequence
            </summary>
            <param name="seq">Sequence. </param>
            <param name="elements">Removed elements. </param>
            <param name="count">Number of elements to pop. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSeqInsert(CxCore.CvSeq@,System.Int32,System.IntPtr)">
            <summary>
            Inserts element in sequence middle
            </summary>
            <param name="seq">Sequence. </param>
            <param name="before_index">Index before which the element is inserted. Inserting before 0 (the minimal allowed valueof the parameter) is equal to seq->total </param>
            <param name="element">Inserted element. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSeqInsert(CxCore.CvSeq@,System.Int32)">
            <summary>
            Inserts element in sequence middle
            </summary>
            <param name="seq">Sequence. </param>
            <param name="before_index">Index before which the element is inserted. Inserting before 0 (the minimal allowed valueof the parameter) is equal to seq->total </param>
        </member>
        <member name="M:CxCore.cxcore.CvSeqRemove(CxCore.CvSeq@,System.Int32)">
            <summary>
            Removes element from sequence middle
            </summary>
            <param name="seq">Sequence. </param>
            <param name="index">Index of removed element. </param>
        </member>
        <member name="M:CxCore.cxcore.CvClearSeq(CxCore.CvSeq@)">
            <summary>
            Clears sequence
            </summary>
            <param name="seq">Sequence. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetSeqElem(CxCore.CvSeq@,System.Int32)">
            <summary>
            Returns pointer to sequence element by its index
            </summary>
            <param name="seq">Sequence. </param>
            <param name="index">Index of element. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetSeqElem(CxCore.CvSet@,System.Int32)">
            <summary>
            Returns pointer to sequence element by its index
            </summary>
            <param name="seq">Sequence. </param>
            <param name="index">Index of element. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetSeqElem(CxCore.CvGraph@,System.Int32)">
            <summary>
            Returns pointer to sequence element by its index
            </summary>
            <param name="seq">Sequence. </param>
            <param name="index">Index of element. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSeqElemIdx(CxCore.CvSeq@,System.IntPtr,CxCore.CvSeqBlock@)">
            <summary>
            Returns index of concrete sequence element
            </summary>
            <param name="seq">Sequence. </param>
            <param name="element">Pointer to the element within the sequence. </param>
            <param name="block">Optional argument. If the pointer is not NULL </param>
        </member>
        <member name="M:CxCore.cxcore.CvSeqElemIdx(CxCore.CvSeq@,System.IntPtr)">
            <summary>
            Returns index of concrete sequence element
            </summary>
            <param name="seq">Sequence. </param>
            <param name="element">Pointer to the element within the sequence. </param>
        </member>
        <member name="M:CxCore.cxcore.CvCvtSeqToArray(CxCore.CvSeq@,System.IntPtr,CxCore.CvSlice)">
            <summary>
            Copies sequence to one continuous block of memory
            </summary>
            <param name="seq">Sequence. </param>
            <param name="elements">Pointer to the destination array that must be large enough.    It should be a pointer to data, not a matrix header. </param>
            <param name="slice">The sequence part to copy to the array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvCvtSeqToArray(CxCore.CvSeq@,System.IntPtr)">
            <summary>
            Copies sequence to one continuous block of memory
            </summary>
            <param name="seq">Sequence. </param>
            <param name="elements">Pointer to the destination array that must be large enough.    It should be a pointer to data, not a matrix header. </param>
        </member>
        <member name="M:CxCore.cxcore.CvMakeSeqHeaderForArray(System.Int32,System.Int32,System.Int32,CxCore.CvSeq@,CxCore.CvSeqBlock@)">
            <summary>
            Constructs sequence from array
            </summary>
            <param name="seq_type">Type of the created sequence. </param>
            <param name="header_size">Size of the header of the sequence. Parameter sequence must point tothe structure of that size or greater size. </param>
            <param name="elem_size">Size of the sequence element. </param>
            <param name="seq">Pointer to the local variable that is used as the sequence header. </param>
            <param name="block">Pointer to the local variable that is the header of the single sequenceblock. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSeqSlice(CxCore.CvSeq@,CxCore.CvSlice,CxCore.CvMemStorage@,System.Int32)">
            <summary>
            Makes separate header for the sequence slice
            </summary>
            <param name="seq">Sequence. </param>
            <param name="slice">The part of the sequence to extract. </param>
            <param name="storage">The destination storage to keep the new sequence header and the copied data if any.               If it is NULL, the function uses the storage containing the input sequence. </param>
            <param name="copy_data">The flag that indicates whether to copy the elements of the extracted slice                 ( copy_data copy_data </param>
        </member>
        <member name="M:CxCore.cxcore.CvSeqSlice(CxCore.CvSeq@,CxCore.CvSlice,System.Int32)">
            <summary>
            Makes separate header for the sequence slice
            </summary>
            <param name="seq">Sequence. </param>
            <param name="slice">The part of the sequence to extract. </param>
            <param name="copy_data">The flag that indicates whether to copy the elements of the extracted slice                 ( copy_data copy_data </param>
        </member>
        <member name="M:CxCore.cxcore.CvSeqSlice(CxCore.CvSeq@,CxCore.CvSlice)">
            <summary>
            Makes separate header for the sequence slice
            </summary>
            <param name="seq">Sequence. </param>
            <param name="slice">The part of the sequence to extract. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSeqRemoveSlice(CxCore.CvSeq@,CxCore.CvSlice)">
            <summary>
            Removes sequence slice
            </summary>
            <param name="seq">Sequence. </param>
            <param name="slice">The part of the sequence to remove. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSeqInsertSlice(CxCore.CvSeq@,System.Int32,CxCore.IplImage@)">
            <summary>
            Inserts array in the middle of sequence
            </summary>
            <param name="seq">Sequence. </param>
            <param name="before_index">before_index</param>
            <param name="from_arr">The array to take elements from. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSeqInsertSlice(CxCore.CvSeq@,System.Int32,CxCore.CvMat@)">
            <summary>
            Inserts array in the middle of sequence
            </summary>
            <param name="seq">Sequence. </param>
            <param name="before_index">before_index</param>
            <param name="from_arr">The array to take elements from. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSeqInsertSlice(CxCore.CvSeq@,System.Int32,CxCore.CvSeq@)">
            <summary>
            Inserts array in the middle of sequence
            </summary>
            <param name="seq">Sequence. </param>
            <param name="before_index">before_index</param>
            <param name="from_arr">The array to take elements from. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSeqInvert(CxCore.CvSeq@)">
            <summary>
            Reverses the order of sequence elements
            </summary>
            <param name="seq">Sequence. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSeqSort(CxCore.CvSeq@,CxCore.cxcore.OnCompareCallback,System.IntPtr)">
            <summary>
            Sorts sequence element using the specified comparison function
            </summary>
            <param name="seq">The sequence to sort </param>
            <param name="func">The comparison function that returns negative, zero or positive value depending            on the elements relation (see the above declaration and the example below) -            similar function is used by qsort userdata </param>
            <param name="userdata">The user parameter passed to the compasion function;                helps to avoid global variables in some cases. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSeqSort(CxCore.CvSeq@,CxCore.cxcore.OnCompareCallback)">
            <summary>
            Sorts sequence element using the specified comparison function
            </summary>
            <param name="seq">The sequence to sort </param>
            <param name="func">The comparison function that returns negative, zero or positive value depending            on the elements relation (see the above declaration and the example below) -            similar function is used by qsort userdata </param>
        </member>
        <member name="M:CxCore.cxcore.CvSeqSearch(CxCore.CvSeq@,System.IntPtr,System.IntPtr,System.Int32,System.Int32@,System.IntPtr)">
            <summary>
            Searches element in sequence
            </summary>
            <param name="seq">The sequence </param>
            <param name="elem">The element to look for </param>
            <param name="func">The comparison function that returns negative, zero or positive value depending            on the elements relation (see also </param>
            <param name="is_sorted">Whether the sequence is sorted or not. </param>
            <param name="elem_idx">Output parameter; index of the found element. </param>
            <param name="userdata">The user parameter passed to the compasion function;                helps to avoid global variables in some cases. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSeqSearch(CxCore.CvSeq@,System.IntPtr,System.IntPtr,System.Int32,System.Int32@)">
            <summary>
            Searches element in sequence
            </summary>
            <param name="seq">The sequence </param>
            <param name="elem">The element to look for </param>
            <param name="func">The comparison function that returns negative, zero or positive value depending            on the elements relation (see also </param>
            <param name="is_sorted">Whether the sequence is sorted or not. </param>
            <param name="elem_idx">Output parameter; index of the found element. </param>
        </member>
        <member name="M:CxCore.cxcore.CvStartAppendToSeq(CxCore.CvSeq@,CxCore.CvSeqWriter@)">
            <summary>
            Initializes process of writing data to sequence
            </summary>
            <param name="seq">Pointer to the sequence. </param>
            <param name="writer">Writer state; initialized by the function. </param>
        </member>
        <member name="M:CxCore.cxcore.CvStartWriteSeq(System.Int32,System.Int32,System.Int32,CxCore.CvMemStorage@,CxCore.CvSeqWriter@)">
            <summary>
            Creates new sequence and initializes writer for it
            </summary>
            <param name="seq_flags">Flags of the created sequence. If the sequence is not passed to anyfunction working with a specific type of sequences, the sequence value may beequal to 0, otherwise the appropriate type must be selected from the list ofpredefined sequence types. </param>
            <param name="header_size">Size of the sequence header. The parameter value may not be less than sizeof(CvSeq) </param>
            <param name="elem_size">Size of the sequence elements in bytes; must be consistent with thesequence type. For example, if the sequence of points is created (element type CV_SEQ_ELTYPE_POINT sizeof(CvPoint) </param>
            <param name="storage">Sequence location. </param>
            <param name="writer">Writer state; initialized by the function. </param>
        </member>
        <member name="M:CxCore.cxcore.CvEndWriteSeq(CxCore.CvSeqWriter@)">
            <summary>
            Finishes process of writing sequence
            </summary>
            <param name="writer">Writer state </param>
        </member>
        <member name="M:CxCore.cxcore.CvFlushSeqWriter(CxCore.CvSeqWriter@)">
            <summary>
            Updates sequence headers from the writer state
            </summary>
            <param name="writer">Writer state </param>
        </member>
        <member name="M:CxCore.cxcore.CvStartReadSeq(CxCore.CvSeq@,CxCore.CvSeqReader@,System.Int32)">
            <summary>
            Initializes process of sequential reading from sequence
            </summary>
            <param name="seq">Sequence. </param>
            <param name="reader">Reader state; initialized by the function. </param>
            <param name="reverse">Determines the direction of the sequence traversal. If reverse </param>
        </member>
        <member name="M:CxCore.cxcore.CvStartReadSeq(CxCore.CvSeq@,CxCore.CvSeqReader@)">
            <summary>
            Initializes process of sequential reading from sequence
            </summary>
            <param name="seq">Sequence. </param>
            <param name="reader">Reader state; initialized by the function. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetSeqReaderPos(CxCore.CvSeqReader@)">
            <summary>
            Returns the current reader position
            </summary>
            <param name="reader">Reader state. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSetSeqReaderPos(CxCore.CvSeqReader@,System.Int32,System.Int32)">
            <summary>
            Moves the reader to specified position
            </summary>
            <param name="reader">Reader state. </param>
            <param name="index">The destination position. If the positioning mode is used (see the next parameter)             the actual position will be index reader->seq->total </param>
            <param name="is_relative">If it is not zero, then index </param>
        </member>
        <member name="M:CxCore.cxcore.CvSetSeqReaderPos(CxCore.CvSeqReader@,System.Int32)">
            <summary>
            Moves the reader to specified position
            </summary>
            <param name="reader">Reader state. </param>
            <param name="index">The destination position. If the positioning mode is used (see the next parameter)             the actual position will be index reader->seq->total </param>
        </member>
        <member name="M:CxCore.cxcore.CvChangeSeqBlock(CxCore.CvSeqReader@,System.Int32)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="reader">reader</param>
            <param name="direction">direction</param>
        </member>
        <member name="M:CxCore.cxcore.CvCreateSeqBlock(CxCore.CvSeqWriter@)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="writer">writer</param>
        </member>
        <member name="M:CxCore.cxcore.CvCreateSet(System.Int32,System.Int32,System.Int32,CxCore.CvMemStorage@)">
            <summary>
            Creates empty set
            </summary>
            <param name="set_flags">Type of the created set. </param>
            <param name="header_size">Set header size; may not be less than sizeof(CvSet) </param>
            <param name="elem_size">Set element size; may not be less than </param>
            <param name="storage">Container for the set. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSetAdd(CxCore.CvSet@,CxCore.CvSetElem@,CxCore.CvSetElem@)">
            <summary>
            Occupies a node in the set
            </summary>
            <param name="set_header">Set. </param>
            <param name="elem">Optional input argument, inserted element. If not NULL, the functioncopies the data to the allocated node (The MSB of the first integer field is cleared after copying). </param>
            <param name="inserted_elem">Optional output argument; the pointer to the allocated cell. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSetAdd(CxCore.CvSet@,CxCore.CvSetElem@)">
            <summary>
            Occupies a node in the set
            </summary>
            <param name="set_header">Set. </param>
            <param name="elem">Optional input argument, inserted element. If not NULL, the functioncopies the data to the allocated node (The MSB of the first integer field is cleared after copying). </param>
        </member>
        <member name="M:CxCore.cxcore.CvSetAdd(CxCore.CvSet@)">
            <summary>
            Occupies a node in the set
            </summary>
            <param name="set_header">Set. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSetRemove(CxCore.CvSet@,System.Int32)">
            <summary>
            Removes element from set
            </summary>
            <param name="set_header">Set. </param>
            <param name="index">Index of the removed element. </param>
        </member>
        <member name="M:CxCore.cxcore.CvClearSet(CxCore.CvSet@)">
            <summary>
            Clears set
            </summary>
            <param name="set_header">Cleared set. </param>
        </member>
        <member name="M:CxCore.cxcore.CvCreateGraph(System.Int32,System.Int32,System.Int32,CxCore.CvMemStorage@)">
            <summary>
            Creates empty graph
            </summary>
            <param name="set_flags">set_flags</param>
            <param name="header_size">Graph header size; may not be less than sizeof(CvGraph). </param>
            <param name="elem_size">elem_size</param>
            <param name="storage">The graph container. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGraphAddVtx(CxCore.CvGraph@,CxCore.CvGraphVtx@,CxCore.CvGraphVtx@)">
            <summary>
            Adds vertex to graph
            </summary>
            <param name="graph">Graph. </param>
            <param name="vtx">Optional input argument used to initialize the added vertex (only user-defined fieldsbeyond sizeof(CvGraphVtx) </param>
            <param name="inserted_vtx">inserted_vtx</param>
        </member>
        <member name="M:CxCore.cxcore.CvGraphRemoveVtx(CxCore.CvGraph@,System.Int32)">
            <summary>
            Removes vertex from graph
            </summary>
            <param name="graph">Graph. </param>
            <param name="index">index</param>
        </member>
        <member name="M:CxCore.cxcore.CvGraphRemoveVtxByPtr(CxCore.CvGraph@,CxCore.CvGraphVtx@)">
            <summary>
            Removes vertex from graph
            </summary>
            <param name="graph">Graph. </param>
            <param name="vtx">Pointer to the removed vertex. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGraphAddEdge(CxCore.CvGraph@,System.Int32,System.Int32,CxCore.CvGraphEdge@,CxCore.CvGraphEdge@)">
            <summary>
            Adds edge to graph
            </summary>
            <param name="graph">Graph. </param>
            <param name="start_idx">Index of the starting vertex of the edge. </param>
            <param name="end_idx">Index of the ending vertex of the edge. For unoriented graph the order of the vertexparameters does not matter. </param>
            <param name="edge">Optional input parameter, initialization data for the edge. </param>
            <param name="inserted_edge">Optional output parameter to contain the address of the insertededge. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGraphAddEdge(CxCore.CvGraph@,System.Int32,System.Int32,CxCore.CvGraphEdge@)">
            <summary>
            Adds edge to graph
            </summary>
            <param name="graph">Graph. </param>
            <param name="start_idx">Index of the starting vertex of the edge. </param>
            <param name="end_idx">Index of the ending vertex of the edge. For unoriented graph the order of the vertexparameters does not matter. </param>
            <param name="edge">Optional input parameter, initialization data for the edge. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGraphAddEdge(CxCore.CvGraph@,System.Int32,System.Int32)">
            <summary>
            Adds edge to graph
            </summary>
            <param name="graph">Graph. </param>
            <param name="start_idx">Index of the starting vertex of the edge. </param>
            <param name="end_idx">Index of the ending vertex of the edge. For unoriented graph the order of the vertexparameters does not matter. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGraphAddEdgeByPtr(CxCore.CvGraph@,CxCore.CvGraphVtx@,CxCore.CvGraphVtx@,CxCore.CvGraphEdge@,CxCore.CvGraphEdge@)">
            <summary>
            Adds edge to graph
            </summary>
            <param name="graph">Graph. </param>
            <param name="start_vtx">Pointer to the starting vertex of the edge. </param>
            <param name="end_vtx">Pointer to the ending vertex of the edge. For unoriented graph the order of the vertexparameters does not matter. </param>
            <param name="edge">Optional input parameter, initialization data for the edge. </param>
            <param name="inserted_edge">Optional output parameter to contain the address of the insertededge within the edge set. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGraphAddEdgeByPtr(CxCore.CvGraph@,CxCore.CvGraphVtx@,CxCore.CvGraphVtx@,CxCore.CvGraphEdge@)">
            <summary>
            Adds edge to graph
            </summary>
            <param name="graph">Graph. </param>
            <param name="start_vtx">Pointer to the starting vertex of the edge. </param>
            <param name="end_vtx">Pointer to the ending vertex of the edge. For unoriented graph the order of the vertexparameters does not matter. </param>
            <param name="edge">Optional input parameter, initialization data for the edge. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGraphAddEdgeByPtr(CxCore.CvGraph@,CxCore.CvGraphVtx@,CxCore.CvGraphVtx@)">
            <summary>
            Adds edge to graph
            </summary>
            <param name="graph">Graph. </param>
            <param name="start_vtx">Pointer to the starting vertex of the edge. </param>
            <param name="end_vtx">Pointer to the ending vertex of the edge. For unoriented graph the order of the vertexparameters does not matter. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGraphRemoveEdge(CxCore.CvGraph@,System.Int32,System.Int32)">
            <summary>
            Removes edge from graph
            </summary>
            <param name="graph">Graph. </param>
            <param name="start_idx">Index of the starting vertex of the edge. </param>
            <param name="end_idx">Index of the ending vertex of the edge. For unoriented graph the order of the vertexparameters does not matter. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGraphRemoveEdgeByPtr(CxCore.CvGraph@,CxCore.CvGraphVtx@,CxCore.CvGraphVtx@)">
            <summary>
            Removes edge from graph
            </summary>
            <param name="graph">Graph. </param>
            <param name="start_vtx">Pointer to the starting vertex of the edge. </param>
            <param name="end_vtx">Pointer to the ending vertex of the edge. For unoriented graph the order of the vertexparameters does not matter. </param>
        </member>
        <member name="M:CxCore.cxcore.CvFindGraphEdge(CxCore.CvGraph@,System.Int32,System.Int32)">
            <summary>
            Finds edge in graph
            </summary>
            <param name="graph">Graph. </param>
            <param name="start_idx">Index of the starting vertex of the edge. </param>
            <param name="end_idx">Index of the ending vertex of the edge. For unoriented graph the order of the vertexparameters does not matter. </param>
        </member>
        <member name="M:CxCore.cxcore.CvFindGraphEdgeByPtr(CxCore.CvGraph@,CxCore.CvGraphVtx@,CxCore.CvGraphVtx@)">
            <summary>
            Finds edge in graph
            </summary>
            <param name="graph">Graph. </param>
            <param name="start_vtx">Pointer to the starting vertex of the edge. </param>
            <param name="end_vtx">Pointer to the ending vertex of the edge. For unoriented graph the order of the vertexparameters does not matter. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGraphVtxDegree(CxCore.CvGraph@,System.Int32)">
            <summary>
            Counts edges indicent to the vertex
            </summary>
            <param name="graph">Graph. </param>
            <param name="vtx_idx">vtx_idx</param>
        </member>
        <member name="M:CxCore.cxcore.CvGraphVtxDegreeByPtr(CxCore.CvGraph@,CxCore.CvGraphVtx@)">
            <summary>
            Finds edge in graph
            </summary>
            <param name="graph">Graph. </param>
            <param name="vtx">Pointer to the graph vertex. </param>
        </member>
        <member name="M:CxCore.cxcore.CvClearGraph(CxCore.CvGraph@)">
            <summary>
            Clears graph
            </summary>
            <param name="graph">Graph. </param>
        </member>
        <member name="M:CxCore.cxcore.CvCloneGraph(CxCore.CvGraph@,CxCore.CvMemStorage@)">
            <summary>
            Clone graph
            </summary>
            <param name="graph">The graph to copy. </param>
            <param name="storage">Container for the copy. </param>
        </member>
        <member name="M:CxCore.cxcore.CvCreateGraphScanner(CxCore.CvGraph@,CxCore.CvGraphVtx@,System.Int32)">
            <summary>
            Creates structure for depth-first graph traversal
            </summary>
            <param name="graph">Graph. </param>
            <param name="vtx">Initial vertex to start from. If NULL, the traversal starts from the first vertex (a vertex with the           minimal index in the sequence of vertices). </param>
            <param name="mask">Event mask indicating which events are interesting to the user (where CV_GRAPH_ALL_ITEMS CV_GRAPH_TREE_EDGE - stop at tree edges ( tree edge CV_GRAPH_BACK_EDGE - stop at back edges ( back edge CV_GRAPH_FORWARD_EDGE - stop at forward edges ( forward edge forward edges CV_GRAPH_CROSS_EDGE - stop at cross edges ( cross edge cross edges CV_GRAPH_ANY_EDGE - stop and any edge ( tree, back, forward cross edges CV_GRAPH_NEW_TREE - stop in the beginning of every new search tree. When the traversal procedure                                visits all vertices and edges reachible from the initial vertex (the visited vertices                                together with tree edges make up a tree), it searches for some unvisited vertex                                in the graph and resumes the traversal process from that vertex.                                Before starting a new tree (including the very first tree                                when cvNextGraphItem CV_GRAPH_NEW_TREE For unoriented graphs each search tree corresponds to a connected component of the graph. CV_GRAPH_BACKTRACKING - stop at every already visited vertex during backtracking - returning to                                already visited vertexes of the traversal tree. </param>
        </member>
        <member name="M:CxCore.cxcore.CvCreateGraphScanner(CxCore.CvGraph@,CxCore.CvGraphVtx@)">
            <summary>
            Creates structure for depth-first graph traversal
            </summary>
            <param name="graph">Graph. </param>
            <param name="vtx">Initial vertex to start from. If NULL, the traversal starts from the first vertex (a vertex with the           minimal index in the sequence of vertices). </param>
        </member>
        <member name="M:CxCore.cxcore.CvCreateGraphScanner(CxCore.CvGraph@)">
            <summary>
            Creates structure for depth-first graph traversal
            </summary>
            <param name="graph">Graph. </param>
        </member>
        <member name="M:CxCore.cxcore.CvCreateGraphScanner(CxCore.CvGraph@,System.Int32)">
            <summary>
            Creates structure for depth-first graph traversal
            </summary>
            <param name="graph">Graph. </param>
            <param name="mask">Event mask indicating which events are interesting to the user (where CV_GRAPH_ALL_ITEMS CV_GRAPH_TREE_EDGE - stop at tree edges ( tree edge CV_GRAPH_BACK_EDGE - stop at back edges ( back edge CV_GRAPH_FORWARD_EDGE - stop at forward edges ( forward edge forward edges CV_GRAPH_CROSS_EDGE - stop at cross edges ( cross edge cross edges CV_GRAPH_ANY_EDGE - stop and any edge ( tree, back, forward cross edges CV_GRAPH_NEW_TREE - stop in the beginning of every new search tree. When the traversal procedure                                visits all vertices and edges reachible from the initial vertex (the visited vertices                                together with tree edges make up a tree), it searches for some unvisited vertex                                in the graph and resumes the traversal process from that vertex.                                Before starting a new tree (including the very first tree                                when cvNextGraphItem CV_GRAPH_NEW_TREE For unoriented graphs each search tree corresponds to a connected component of the graph. CV_GRAPH_BACKTRACKING - stop at every already visited vertex during backtracking - returning to                                already visited vertexes of the traversal tree. </param>
        </member>
        <member name="M:CxCore.cxcore.CvNextGraphItem(CxCore.CvGraphScanner@)">
            <summary>
            Makes one or more steps of the graph traversal procedure
            </summary>
            <param name="scanner">Graph traversal state. It is updated by the function. </param>
        </member>
        <member name="M:CxCore.cxcore.CvReleaseGraphScanner(CxCore.CvGraphScanner@)">
            <summary>
            Finishes graph traversal procedure
            </summary>
            <param name="scanner">Double pointer to graph traverser. </param>
        </member>
        <member name="M:CxCore.cxcore.CvInitTreeNodeIterator(CxCore.CvTreeNodeIterator@,System.IntPtr,System.Int32)">
            <summary>
            Initializes tree node iterator
            </summary>
            <param name="tree_iterator">Tree iterator initialized by the function. </param>
            <param name="first">The initial node to start traversing from. </param>
            <param name="max_level">The maximal level of the tree ( first first first </param>
        </member>
        <member name="M:CxCore.cxcore.CvNextTreeNode(CxCore.CvTreeNodeIterator@)">
            <summary>
            Returns the currently observed node and moves iterator toward the next node
            </summary>
            <param name="tree_iterator">Tree iterator initialized by the function. </param>
        </member>
        <member name="M:CxCore.cxcore.CvPrevTreeNode(CxCore.CvTreeNodeIterator@)">
            <summary>
            Returns the currently observed node and moves iterator toward the previous node
            </summary>
            <param name="tree_iterator">Tree iterator initialized by the function. </param>
        </member>
        <member name="M:CxCore.cxcore.CvTreeToNodeSeq(System.IntPtr,System.Int32,CxCore.CvMemStorage@)">
            <summary>
            Gathers all node pointers to the single sequence
            </summary>
            <param name="first">The initial tree node. </param>
            <param name="header_size">Header size of the created sequence (sizeof(CvSeq) is the most used value). </param>
            <param name="storage">Container for the sequence. </param>
        </member>
        <member name="M:CxCore.cxcore.CvInsertNodeIntoTree(System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>
            Adds new node to the tree
            </summary>
            <param name="node">The inserted node. </param>
            <param name="parent">The parent node that is already in the tree. </param>
            <param name="frame">The top level node. If parent frame v_prev node parent </param>
        </member>
        <member name="M:CxCore.cxcore.CvRemoveNodeFromTree(System.IntPtr,System.IntPtr)">
            <summary>
            Removes node from tree
            </summary>
            <param name="node">The removed node. </param>
            <param name="frame">The top level node. If node->v_prev = NULL node->h_prev node frame frame->v_next node->h_next </param>
        </member>
        <member name="M:CxCore.cxcore.CvLine(CxCore.IplImage@,CxCore.CvPoint,CxCore.CvPoint,CxCore.CvScalar,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a line segment connecting two points
            </summary>
            <param name="img">The image. </param>
            <param name="pt1">First point of the line segment. </param>
            <param name="pt2">Second point of the line segment. </param>
            <param name="color">Line color. </param>
            <param name="thickness">Line thickness. </param>
            <param name="line_type">Type of the line: 8 0 4 CV_AA </param>
            <param name="shift">Number of fractional bits in the point coordinates. </param>
        </member>
        <member name="M:CxCore.cxcore.CvLine(CxCore.IplImage@,CxCore.CvPoint,CxCore.CvPoint,CxCore.CvScalar,System.Int32,System.Int32)">
            <summary>
            Draws a line segment connecting two points
            </summary>
            <param name="img">The image. </param>
            <param name="pt1">First point of the line segment. </param>
            <param name="pt2">Second point of the line segment. </param>
            <param name="color">Line color. </param>
            <param name="thickness">Line thickness. </param>
            <param name="line_type">Type of the line: 8 0 4 CV_AA </param>
        </member>
        <member name="M:CxCore.cxcore.CvLine(CxCore.IplImage@,CxCore.CvPoint,CxCore.CvPoint,CxCore.CvScalar,System.Int32)">
            <summary>
            Draws a line segment connecting two points
            </summary>
            <param name="img">The image. </param>
            <param name="pt1">First point of the line segment. </param>
            <param name="pt2">Second point of the line segment. </param>
            <param name="color">Line color. </param>
            <param name="thickness">Line thickness. </param>
        </member>
        <member name="M:CxCore.cxcore.CvLine(CxCore.IplImage@,CxCore.CvPoint,CxCore.CvPoint,CxCore.CvScalar)">
            <summary>
            Draws a line segment connecting two points
            </summary>
            <param name="img">The image. </param>
            <param name="pt1">First point of the line segment. </param>
            <param name="pt2">Second point of the line segment. </param>
            <param name="color">Line color. </param>
        </member>
        <member name="M:CxCore.cxcore.CvRectangle(CxCore.IplImage@,CxCore.CvPoint,CxCore.CvPoint,CxCore.CvScalar,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws simple, thick or filled rectangle
            </summary>
            <param name="img">Image. </param>
            <param name="pt1">One of the rectangle vertices. </param>
            <param name="pt2">Opposite rectangle vertex. </param>
            <param name="color">Line color (RGB) or brightness (grayscale image). </param>
            <param name="thickness">Thickness of lines that make up the rectangle. Negative values, e.g. CV_FILLED,make the function to draw a filled rectangle. </param>
            <param name="line_type">Type of the line, see </param>
            <param name="shift">Number of fractional bits in the point coordinates. </param>
        </member>
        <member name="M:CxCore.cxcore.CvRectangle(CxCore.IplImage@,CxCore.CvPoint,CxCore.CvPoint,CxCore.CvScalar,System.Int32,System.Int32)">
            <summary>
            Draws simple, thick or filled rectangle
            </summary>
            <param name="img">Image. </param>
            <param name="pt1">One of the rectangle vertices. </param>
            <param name="pt2">Opposite rectangle vertex. </param>
            <param name="color">Line color (RGB) or brightness (grayscale image). </param>
            <param name="thickness">Thickness of lines that make up the rectangle. Negative values, e.g. CV_FILLED,make the function to draw a filled rectangle. </param>
            <param name="line_type">Type of the line, see </param>
        </member>
        <member name="M:CxCore.cxcore.CvRectangle(CxCore.IplImage@,CxCore.CvPoint,CxCore.CvPoint,CxCore.CvScalar,System.Int32)">
            <summary>
            Draws simple, thick or filled rectangle
            </summary>
            <param name="img">Image. </param>
            <param name="pt1">One of the rectangle vertices. </param>
            <param name="pt2">Opposite rectangle vertex. </param>
            <param name="color">Line color (RGB) or brightness (grayscale image). </param>
            <param name="thickness">Thickness of lines that make up the rectangle. Negative values, e.g. CV_FILLED,make the function to draw a filled rectangle. </param>
        </member>
        <member name="M:CxCore.cxcore.CvRectangle(CxCore.IplImage@,CxCore.CvPoint,CxCore.CvPoint,CxCore.CvScalar)">
            <summary>
            Draws simple, thick or filled rectangle
            </summary>
            <param name="img">Image. </param>
            <param name="pt1">One of the rectangle vertices. </param>
            <param name="pt2">Opposite rectangle vertex. </param>
            <param name="color">Line color (RGB) or brightness (grayscale image). </param>
        </member>
        <member name="M:CxCore.cxcore.CvRectangle(CxCore.CvMat@,CxCore.CvPoint,CxCore.CvPoint,CxCore.CvScalar,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws simple, thick or filled rectangle
            </summary>
            <param name="img">Image. </param>
            <param name="pt1">One of the rectangle vertices. </param>
            <param name="pt2">Opposite rectangle vertex. </param>
            <param name="color">Line color (RGB) or brightness (grayscale image). </param>
            <param name="thickness">Thickness of lines that make up the rectangle. Negative values, e.g. CV_FILLED,make the function to draw a filled rectangle. </param>
            <param name="line_type">Type of the line, see </param>
            <param name="shift">Number of fractional bits in the point coordinates. </param>
        </member>
        <member name="M:CxCore.cxcore.CvRectangle(CxCore.CvMat@,CxCore.CvPoint,CxCore.CvPoint,CxCore.CvScalar,System.Int32,System.Int32)">
            <summary>
            Draws simple, thick or filled rectangle
            </summary>
            <param name="img">Image. </param>
            <param name="pt1">One of the rectangle vertices. </param>
            <param name="pt2">Opposite rectangle vertex. </param>
            <param name="color">Line color (RGB) or brightness (grayscale image). </param>
            <param name="thickness">Thickness of lines that make up the rectangle. Negative values, e.g. CV_FILLED,make the function to draw a filled rectangle. </param>
            <param name="line_type">Type of the line, see </param>
        </member>
        <member name="M:CxCore.cxcore.CvRectangle(CxCore.CvMat@,CxCore.CvPoint,CxCore.CvPoint,CxCore.CvScalar,System.Int32)">
            <summary>
            Draws simple, thick or filled rectangle
            </summary>
            <param name="img">Image. </param>
            <param name="pt1">One of the rectangle vertices. </param>
            <param name="pt2">Opposite rectangle vertex. </param>
            <param name="color">Line color (RGB) or brightness (grayscale image). </param>
            <param name="thickness">Thickness of lines that make up the rectangle. Negative values, e.g. CV_FILLED,make the function to draw a filled rectangle. </param>
        </member>
        <member name="M:CxCore.cxcore.CvRectangle(CxCore.CvMat@,CxCore.CvPoint,CxCore.CvPoint,CxCore.CvScalar)">
            <summary>
            Draws simple, thick or filled rectangle
            </summary>
            <param name="img">Image. </param>
            <param name="pt1">One of the rectangle vertices. </param>
            <param name="pt2">Opposite rectangle vertex. </param>
            <param name="color">Line color (RGB) or brightness (grayscale image). </param>
        </member>
        <member name="M:CxCore.cxcore.CvRectangle(CxCore.CvSeq@,CxCore.CvPoint,CxCore.CvPoint,CxCore.CvScalar,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws simple, thick or filled rectangle
            </summary>
            <param name="img">Image. </param>
            <param name="pt1">One of the rectangle vertices. </param>
            <param name="pt2">Opposite rectangle vertex. </param>
            <param name="color">Line color (RGB) or brightness (grayscale image). </param>
            <param name="thickness">Thickness of lines that make up the rectangle. Negative values, e.g. CV_FILLED,make the function to draw a filled rectangle. </param>
            <param name="line_type">Type of the line, see </param>
            <param name="shift">Number of fractional bits in the point coordinates. </param>
        </member>
        <member name="M:CxCore.cxcore.CvRectangle(CxCore.CvSeq@,CxCore.CvPoint,CxCore.CvPoint,CxCore.CvScalar,System.Int32,System.Int32)">
            <summary>
            Draws simple, thick or filled rectangle
            </summary>
            <param name="img">Image. </param>
            <param name="pt1">One of the rectangle vertices. </param>
            <param name="pt2">Opposite rectangle vertex. </param>
            <param name="color">Line color (RGB) or brightness (grayscale image). </param>
            <param name="thickness">Thickness of lines that make up the rectangle. Negative values, e.g. CV_FILLED,make the function to draw a filled rectangle. </param>
            <param name="line_type">Type of the line, see </param>
        </member>
        <member name="M:CxCore.cxcore.CvRectangle(CxCore.CvSeq@,CxCore.CvPoint,CxCore.CvPoint,CxCore.CvScalar,System.Int32)">
            <summary>
            Draws simple, thick or filled rectangle
            </summary>
            <param name="img">Image. </param>
            <param name="pt1">One of the rectangle vertices. </param>
            <param name="pt2">Opposite rectangle vertex. </param>
            <param name="color">Line color (RGB) or brightness (grayscale image). </param>
            <param name="thickness">Thickness of lines that make up the rectangle. Negative values, e.g. CV_FILLED,make the function to draw a filled rectangle. </param>
        </member>
        <member name="M:CxCore.cxcore.CvRectangle(CxCore.CvSeq@,CxCore.CvPoint,CxCore.CvPoint,CxCore.CvScalar)">
            <summary>
            Draws simple, thick or filled rectangle
            </summary>
            <param name="img">Image. </param>
            <param name="pt1">One of the rectangle vertices. </param>
            <param name="pt2">Opposite rectangle vertex. </param>
            <param name="color">Line color (RGB) or brightness (grayscale image). </param>
        </member>
        <member name="M:CxCore.cxcore.CvCircle(CxCore.IplImage@,CxCore.CvPoint,System.Int32,CxCore.CvScalar,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a circle
            </summary>
            <param name="img">Image where the circle is drawn. </param>
            <param name="center">Center of the circle. </param>
            <param name="radius">Radius of the circle. </param>
            <param name="color">Circle color. </param>
            <param name="thickness">Thickness of the circle outline if positive, otherwise indicates thata filled circle has to be drawn. </param>
            <param name="line_type">Type of the circle boundary, see </param>
            <param name="shift">Number of fractional bits in the center coordinates and radius value. </param>
        </member>
        <member name="M:CxCore.cxcore.CvCircle(CxCore.IplImage@,CxCore.CvPoint,System.Int32,CxCore.CvScalar,System.Int32,System.Int32)">
            <summary>
            Draws a circle
            </summary>
            <param name="img">Image where the circle is drawn. </param>
            <param name="center">Center of the circle. </param>
            <param name="radius">Radius of the circle. </param>
            <param name="color">Circle color. </param>
            <param name="thickness">Thickness of the circle outline if positive, otherwise indicates thata filled circle has to be drawn. </param>
            <param name="line_type">Type of the circle boundary, see </param>
        </member>
        <member name="M:CxCore.cxcore.CvCircle(CxCore.IplImage@,CxCore.CvPoint,System.Int32,CxCore.CvScalar,System.Int32)">
            <summary>
            Draws a circle
            </summary>
            <param name="img">Image where the circle is drawn. </param>
            <param name="center">Center of the circle. </param>
            <param name="radius">Radius of the circle. </param>
            <param name="color">Circle color. </param>
            <param name="thickness">Thickness of the circle outline if positive, otherwise indicates thata filled circle has to be drawn. </param>
        </member>
        <member name="M:CxCore.cxcore.CvCircle(CxCore.IplImage@,CxCore.CvPoint,System.Int32,CxCore.CvScalar)">
            <summary>
            Draws a circle
            </summary>
            <param name="img">Image where the circle is drawn. </param>
            <param name="center">Center of the circle. </param>
            <param name="radius">Radius of the circle. </param>
            <param name="color">Circle color. </param>
        </member>
        <member name="M:CxCore.cxcore.CvCircle(CxCore.CvMat@,CxCore.CvPoint,System.Int32,CxCore.CvScalar,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a circle
            </summary>
            <param name="img">Image where the circle is drawn. </param>
            <param name="center">Center of the circle. </param>
            <param name="radius">Radius of the circle. </param>
            <param name="color">Circle color. </param>
            <param name="thickness">Thickness of the circle outline if positive, otherwise indicates thata filled circle has to be drawn. </param>
            <param name="line_type">Type of the circle boundary, see </param>
            <param name="shift">Number of fractional bits in the center coordinates and radius value. </param>
        </member>
        <member name="M:CxCore.cxcore.CvCircle(CxCore.CvMat@,CxCore.CvPoint,System.Int32,CxCore.CvScalar,System.Int32,System.Int32)">
            <summary>
            Draws a circle
            </summary>
            <param name="img">Image where the circle is drawn. </param>
            <param name="center">Center of the circle. </param>
            <param name="radius">Radius of the circle. </param>
            <param name="color">Circle color. </param>
            <param name="thickness">Thickness of the circle outline if positive, otherwise indicates thata filled circle has to be drawn. </param>
            <param name="line_type">Type of the circle boundary, see </param>
        </member>
        <member name="M:CxCore.cxcore.CvCircle(CxCore.CvMat@,CxCore.CvPoint,System.Int32,CxCore.CvScalar,System.Int32)">
            <summary>
            Draws a circle
            </summary>
            <param name="img">Image where the circle is drawn. </param>
            <param name="center">Center of the circle. </param>
            <param name="radius">Radius of the circle. </param>
            <param name="color">Circle color. </param>
            <param name="thickness">Thickness of the circle outline if positive, otherwise indicates thata filled circle has to be drawn. </param>
        </member>
        <member name="M:CxCore.cxcore.CvCircle(CxCore.CvMat@,CxCore.CvPoint,System.Int32,CxCore.CvScalar)">
            <summary>
            Draws a circle
            </summary>
            <param name="img">Image where the circle is drawn. </param>
            <param name="center">Center of the circle. </param>
            <param name="radius">Radius of the circle. </param>
            <param name="color">Circle color. </param>
        </member>
        <member name="M:CxCore.cxcore.CvCircle(CxCore.CvSeq@,CxCore.CvPoint,System.Int32,CxCore.CvScalar,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a circle
            </summary>
            <param name="img">Image where the circle is drawn. </param>
            <param name="center">Center of the circle. </param>
            <param name="radius">Radius of the circle. </param>
            <param name="color">Circle color. </param>
            <param name="thickness">Thickness of the circle outline if positive, otherwise indicates thata filled circle has to be drawn. </param>
            <param name="line_type">Type of the circle boundary, see </param>
            <param name="shift">Number of fractional bits in the center coordinates and radius value. </param>
        </member>
        <member name="M:CxCore.cxcore.CvCircle(CxCore.CvSeq@,CxCore.CvPoint,System.Int32,CxCore.CvScalar,System.Int32,System.Int32)">
            <summary>
            Draws a circle
            </summary>
            <param name="img">Image where the circle is drawn. </param>
            <param name="center">Center of the circle. </param>
            <param name="radius">Radius of the circle. </param>
            <param name="color">Circle color. </param>
            <param name="thickness">Thickness of the circle outline if positive, otherwise indicates thata filled circle has to be drawn. </param>
            <param name="line_type">Type of the circle boundary, see </param>
        </member>
        <member name="M:CxCore.cxcore.CvCircle(CxCore.CvSeq@,CxCore.CvPoint,System.Int32,CxCore.CvScalar,System.Int32)">
            <summary>
            Draws a circle
            </summary>
            <param name="img">Image where the circle is drawn. </param>
            <param name="center">Center of the circle. </param>
            <param name="radius">Radius of the circle. </param>
            <param name="color">Circle color. </param>
            <param name="thickness">Thickness of the circle outline if positive, otherwise indicates thata filled circle has to be drawn. </param>
        </member>
        <member name="M:CxCore.cxcore.CvCircle(CxCore.CvSeq@,CxCore.CvPoint,System.Int32,CxCore.CvScalar)">
            <summary>
            Draws a circle
            </summary>
            <param name="img">Image where the circle is drawn. </param>
            <param name="center">Center of the circle. </param>
            <param name="radius">Radius of the circle. </param>
            <param name="color">Circle color. </param>
        </member>
        <member name="M:CxCore.cxcore.CvEllipse(CxCore.IplImage@,CxCore.CvPoint,CxCore.CvSize,System.Double,System.Double,System.Double,CxCore.CvScalar,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws simple or thick elliptic arc or fills ellipse sector
            </summary>
            <param name="img">Image. </param>
            <param name="center">Center of the ellipse. </param>
            <param name="axes">Length of the ellipse axes. </param>
            <param name="angle">Rotation angle. </param>
            <param name="start_angle">Starting angle of the elliptic arc. </param>
            <param name="end_angle">Ending angle of the elliptic arc. </param>
            <param name="color">Ellipse color. </param>
            <param name="thickness">Thickness of the ellipse arc. </param>
            <param name="line_type">Type of the ellipse boundary, see </param>
            <param name="shift">Number of fractional bits in the center coordinates and axes' values. </param>
        </member>
        <member name="M:CxCore.cxcore.CvEllipse(CxCore.IplImage@,CxCore.CvPoint,CxCore.CvSize,System.Double,System.Double,System.Double,CxCore.CvScalar,System.Int32,System.Int32)">
            <summary>
            Draws simple or thick elliptic arc or fills ellipse sector
            </summary>
            <param name="img">Image. </param>
            <param name="center">Center of the ellipse. </param>
            <param name="axes">Length of the ellipse axes. </param>
            <param name="angle">Rotation angle. </param>
            <param name="start_angle">Starting angle of the elliptic arc. </param>
            <param name="end_angle">Ending angle of the elliptic arc. </param>
            <param name="color">Ellipse color. </param>
            <param name="thickness">Thickness of the ellipse arc. </param>
            <param name="line_type">Type of the ellipse boundary, see </param>
        </member>
        <member name="M:CxCore.cxcore.CvEllipse(CxCore.IplImage@,CxCore.CvPoint,CxCore.CvSize,System.Double,System.Double,System.Double,CxCore.CvScalar,System.Int32)">
            <summary>
            Draws simple or thick elliptic arc or fills ellipse sector
            </summary>
            <param name="img">Image. </param>
            <param name="center">Center of the ellipse. </param>
            <param name="axes">Length of the ellipse axes. </param>
            <param name="angle">Rotation angle. </param>
            <param name="start_angle">Starting angle of the elliptic arc. </param>
            <param name="end_angle">Ending angle of the elliptic arc. </param>
            <param name="color">Ellipse color. </param>
            <param name="thickness">Thickness of the ellipse arc. </param>
        </member>
        <member name="M:CxCore.cxcore.CvEllipse(CxCore.IplImage@,CxCore.CvPoint,CxCore.CvSize,System.Double,System.Double,System.Double,CxCore.CvScalar)">
            <summary>
            Draws simple or thick elliptic arc or fills ellipse sector
            </summary>
            <param name="img">Image. </param>
            <param name="center">Center of the ellipse. </param>
            <param name="axes">Length of the ellipse axes. </param>
            <param name="angle">Rotation angle. </param>
            <param name="start_angle">Starting angle of the elliptic arc. </param>
            <param name="end_angle">Ending angle of the elliptic arc. </param>
            <param name="color">Ellipse color. </param>
        </member>
        <member name="M:CxCore.cxcore.CvEllipse(CxCore.CvMat@,CxCore.CvPoint,CxCore.CvSize,System.Double,System.Double,System.Double,CxCore.CvScalar,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws simple or thick elliptic arc or fills ellipse sector
            </summary>
            <param name="img">Image. </param>
            <param name="center">Center of the ellipse. </param>
            <param name="axes">Length of the ellipse axes. </param>
            <param name="angle">Rotation angle. </param>
            <param name="start_angle">Starting angle of the elliptic arc. </param>
            <param name="end_angle">Ending angle of the elliptic arc. </param>
            <param name="color">Ellipse color. </param>
            <param name="thickness">Thickness of the ellipse arc. </param>
            <param name="line_type">Type of the ellipse boundary, see </param>
            <param name="shift">Number of fractional bits in the center coordinates and axes' values. </param>
        </member>
        <member name="M:CxCore.cxcore.CvEllipse(CxCore.CvMat@,CxCore.CvPoint,CxCore.CvSize,System.Double,System.Double,System.Double,CxCore.CvScalar,System.Int32,System.Int32)">
            <summary>
            Draws simple or thick elliptic arc or fills ellipse sector
            </summary>
            <param name="img">Image. </param>
            <param name="center">Center of the ellipse. </param>
            <param name="axes">Length of the ellipse axes. </param>
            <param name="angle">Rotation angle. </param>
            <param name="start_angle">Starting angle of the elliptic arc. </param>
            <param name="end_angle">Ending angle of the elliptic arc. </param>
            <param name="color">Ellipse color. </param>
            <param name="thickness">Thickness of the ellipse arc. </param>
            <param name="line_type">Type of the ellipse boundary, see </param>
        </member>
        <member name="M:CxCore.cxcore.CvEllipse(CxCore.CvMat@,CxCore.CvPoint,CxCore.CvSize,System.Double,System.Double,System.Double,CxCore.CvScalar,System.Int32)">
            <summary>
            Draws simple or thick elliptic arc or fills ellipse sector
            </summary>
            <param name="img">Image. </param>
            <param name="center">Center of the ellipse. </param>
            <param name="axes">Length of the ellipse axes. </param>
            <param name="angle">Rotation angle. </param>
            <param name="start_angle">Starting angle of the elliptic arc. </param>
            <param name="end_angle">Ending angle of the elliptic arc. </param>
            <param name="color">Ellipse color. </param>
            <param name="thickness">Thickness of the ellipse arc. </param>
        </member>
        <member name="M:CxCore.cxcore.CvEllipse(CxCore.CvMat@,CxCore.CvPoint,CxCore.CvSize,System.Double,System.Double,System.Double,CxCore.CvScalar)">
            <summary>
            Draws simple or thick elliptic arc or fills ellipse sector
            </summary>
            <param name="img">Image. </param>
            <param name="center">Center of the ellipse. </param>
            <param name="axes">Length of the ellipse axes. </param>
            <param name="angle">Rotation angle. </param>
            <param name="start_angle">Starting angle of the elliptic arc. </param>
            <param name="end_angle">Ending angle of the elliptic arc. </param>
            <param name="color">Ellipse color. </param>
        </member>
        <member name="M:CxCore.cxcore.CvEllipse(CxCore.CvSeq@,CxCore.CvPoint,CxCore.CvSize,System.Double,System.Double,System.Double,CxCore.CvScalar,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws simple or thick elliptic arc or fills ellipse sector
            </summary>
            <param name="img">Image. </param>
            <param name="center">Center of the ellipse. </param>
            <param name="axes">Length of the ellipse axes. </param>
            <param name="angle">Rotation angle. </param>
            <param name="start_angle">Starting angle of the elliptic arc. </param>
            <param name="end_angle">Ending angle of the elliptic arc. </param>
            <param name="color">Ellipse color. </param>
            <param name="thickness">Thickness of the ellipse arc. </param>
            <param name="line_type">Type of the ellipse boundary, see </param>
            <param name="shift">Number of fractional bits in the center coordinates and axes' values. </param>
        </member>
        <member name="M:CxCore.cxcore.CvEllipse(CxCore.CvSeq@,CxCore.CvPoint,CxCore.CvSize,System.Double,System.Double,System.Double,CxCore.CvScalar,System.Int32,System.Int32)">
            <summary>
            Draws simple or thick elliptic arc or fills ellipse sector
            </summary>
            <param name="img">Image. </param>
            <param name="center">Center of the ellipse. </param>
            <param name="axes">Length of the ellipse axes. </param>
            <param name="angle">Rotation angle. </param>
            <param name="start_angle">Starting angle of the elliptic arc. </param>
            <param name="end_angle">Ending angle of the elliptic arc. </param>
            <param name="color">Ellipse color. </param>
            <param name="thickness">Thickness of the ellipse arc. </param>
            <param name="line_type">Type of the ellipse boundary, see </param>
        </member>
        <member name="M:CxCore.cxcore.CvEllipse(CxCore.CvSeq@,CxCore.CvPoint,CxCore.CvSize,System.Double,System.Double,System.Double,CxCore.CvScalar,System.Int32)">
            <summary>
            Draws simple or thick elliptic arc or fills ellipse sector
            </summary>
            <param name="img">Image. </param>
            <param name="center">Center of the ellipse. </param>
            <param name="axes">Length of the ellipse axes. </param>
            <param name="angle">Rotation angle. </param>
            <param name="start_angle">Starting angle of the elliptic arc. </param>
            <param name="end_angle">Ending angle of the elliptic arc. </param>
            <param name="color">Ellipse color. </param>
            <param name="thickness">Thickness of the ellipse arc. </param>
        </member>
        <member name="M:CxCore.cxcore.CvEllipse(CxCore.CvSeq@,CxCore.CvPoint,CxCore.CvSize,System.Double,System.Double,System.Double,CxCore.CvScalar)">
            <summary>
            Draws simple or thick elliptic arc or fills ellipse sector
            </summary>
            <param name="img">Image. </param>
            <param name="center">Center of the ellipse. </param>
            <param name="axes">Length of the ellipse axes. </param>
            <param name="angle">Rotation angle. </param>
            <param name="start_angle">Starting angle of the elliptic arc. </param>
            <param name="end_angle">Ending angle of the elliptic arc. </param>
            <param name="color">Ellipse color. </param>
        </member>
        <member name="M:CxCore.cxcore.CvEllipseBox(CxCore.IplImage@,CxCore.CvBox2D,CxCore.CvScalar,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws simple or thick elliptic arc or fills ellipse sector
            </summary>
            <param name="img">Image. </param>
            <param name="box">The enclosing box of the ellipse drawn </param>
            <param name="color">color</param>
            <param name="thickness">Thickness of the ellipse boundary. </param>
            <param name="line_type">Type of the ellipse boundary, see </param>
            <param name="shift">Number of fractional bits in the box vertex coordinates. </param>
        </member>
        <member name="M:CxCore.cxcore.CvEllipseBox(CxCore.IplImage@,CxCore.CvBox2D,CxCore.CvScalar,System.Int32,System.Int32)">
            <summary>
            Draws simple or thick elliptic arc or fills ellipse sector
            </summary>
            <param name="img">Image. </param>
            <param name="box">The enclosing box of the ellipse drawn </param>
            <param name="color">color</param>
            <param name="thickness">Thickness of the ellipse boundary. </param>
            <param name="line_type">Type of the ellipse boundary, see </param>
        </member>
        <member name="M:CxCore.cxcore.CvEllipseBox(CxCore.IplImage@,CxCore.CvBox2D,CxCore.CvScalar,System.Int32)">
            <summary>
            Draws simple or thick elliptic arc or fills ellipse sector
            </summary>
            <param name="img">Image. </param>
            <param name="box">The enclosing box of the ellipse drawn </param>
            <param name="color">color</param>
            <param name="thickness">Thickness of the ellipse boundary. </param>
        </member>
        <member name="M:CxCore.cxcore.CvEllipseBox(CxCore.IplImage@,CxCore.CvBox2D,CxCore.CvScalar)">
            <summary>
            Draws simple or thick elliptic arc or fills ellipse sector
            </summary>
            <param name="img">Image. </param>
            <param name="box">The enclosing box of the ellipse drawn </param>
            <param name="color">color</param>
        </member>
        <member name="M:CxCore.cxcore.CvEllipseBox(CxCore.CvMat@,CxCore.CvBox2D,CxCore.CvScalar,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws simple or thick elliptic arc or fills ellipse sector
            </summary>
            <param name="img">Image. </param>
            <param name="box">The enclosing box of the ellipse drawn </param>
            <param name="color">color</param>
            <param name="thickness">Thickness of the ellipse boundary. </param>
            <param name="line_type">Type of the ellipse boundary, see </param>
            <param name="shift">Number of fractional bits in the box vertex coordinates. </param>
        </member>
        <member name="M:CxCore.cxcore.CvEllipseBox(CxCore.CvMat@,CxCore.CvBox2D,CxCore.CvScalar,System.Int32,System.Int32)">
            <summary>
            Draws simple or thick elliptic arc or fills ellipse sector
            </summary>
            <param name="img">Image. </param>
            <param name="box">The enclosing box of the ellipse drawn </param>
            <param name="color">color</param>
            <param name="thickness">Thickness of the ellipse boundary. </param>
            <param name="line_type">Type of the ellipse boundary, see </param>
        </member>
        <member name="M:CxCore.cxcore.CvEllipseBox(CxCore.CvMat@,CxCore.CvBox2D,CxCore.CvScalar,System.Int32)">
            <summary>
            Draws simple or thick elliptic arc or fills ellipse sector
            </summary>
            <param name="img">Image. </param>
            <param name="box">The enclosing box of the ellipse drawn </param>
            <param name="color">color</param>
            <param name="thickness">Thickness of the ellipse boundary. </param>
        </member>
        <member name="M:CxCore.cxcore.CvEllipseBox(CxCore.CvMat@,CxCore.CvBox2D,CxCore.CvScalar)">
            <summary>
            Draws simple or thick elliptic arc or fills ellipse sector
            </summary>
            <param name="img">Image. </param>
            <param name="box">The enclosing box of the ellipse drawn </param>
            <param name="color">color</param>
        </member>
        <member name="M:CxCore.cxcore.CvEllipseBox(CxCore.CvSeq@,CxCore.CvBox2D,CxCore.CvScalar,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws simple or thick elliptic arc or fills ellipse sector
            </summary>
            <param name="img">Image. </param>
            <param name="box">The enclosing box of the ellipse drawn </param>
            <param name="color">color</param>
            <param name="thickness">Thickness of the ellipse boundary. </param>
            <param name="line_type">Type of the ellipse boundary, see </param>
            <param name="shift">Number of fractional bits in the box vertex coordinates. </param>
        </member>
        <member name="M:CxCore.cxcore.CvEllipseBox(CxCore.CvSeq@,CxCore.CvBox2D,CxCore.CvScalar,System.Int32,System.Int32)">
            <summary>
            Draws simple or thick elliptic arc or fills ellipse sector
            </summary>
            <param name="img">Image. </param>
            <param name="box">The enclosing box of the ellipse drawn </param>
            <param name="color">color</param>
            <param name="thickness">Thickness of the ellipse boundary. </param>
            <param name="line_type">Type of the ellipse boundary, see </param>
        </member>
        <member name="M:CxCore.cxcore.CvEllipseBox(CxCore.CvSeq@,CxCore.CvBox2D,CxCore.CvScalar,System.Int32)">
            <summary>
            Draws simple or thick elliptic arc or fills ellipse sector
            </summary>
            <param name="img">Image. </param>
            <param name="box">The enclosing box of the ellipse drawn </param>
            <param name="color">color</param>
            <param name="thickness">Thickness of the ellipse boundary. </param>
        </member>
        <member name="M:CxCore.cxcore.CvEllipseBox(CxCore.CvSeq@,CxCore.CvBox2D,CxCore.CvScalar)">
            <summary>
            Draws simple or thick elliptic arc or fills ellipse sector
            </summary>
            <param name="img">Image. </param>
            <param name="box">The enclosing box of the ellipse drawn </param>
            <param name="color">color</param>
        </member>
        <member name="M:CxCore.cxcore.CvFillPoly(CxCore.IplImage@,System.IntPtr@,System.Int32[],System.Int32,CxCore.CvScalar,System.Int32,System.Int32)">
            <summary>
            Fills polygons interior
            </summary>
            <param name="img">Image. </param>
            <param name="pts">Array of pointers to polygons. </param>
            <param name="npts">Array of polygon vertex counters. </param>
            <param name="contours">Number of contours that bind the filled region. </param>
            <param name="color">Polygon color. </param>
            <param name="line_type">Type of the polygon boundaries, see </param>
            <param name="shift">Number of fractional bits in the vertex coordinates. </param>
        </member>
        <member name="M:CxCore.cxcore.CvFillPoly(CxCore.IplImage@,System.IntPtr@,System.Int32[],System.Int32,CxCore.CvScalar,System.Int32)">
            <summary>
            Fills polygons interior
            </summary>
            <param name="img">Image. </param>
            <param name="pts">Array of pointers to polygons. </param>
            <param name="npts">Array of polygon vertex counters. </param>
            <param name="contours">Number of contours that bind the filled region. </param>
            <param name="color">Polygon color. </param>
            <param name="line_type">Type of the polygon boundaries, see </param>
        </member>
        <member name="M:CxCore.cxcore.CvFillPoly(CxCore.IplImage@,System.IntPtr@,System.Int32[],System.Int32,CxCore.CvScalar)">
            <summary>
            Fills polygons interior
            </summary>
            <param name="img">Image. </param>
            <param name="pts">Array of pointers to polygons. </param>
            <param name="npts">Array of polygon vertex counters. </param>
            <param name="contours">Number of contours that bind the filled region. </param>
            <param name="color">Polygon color. </param>
        </member>
        <member name="M:CxCore.cxcore.CvFillPoly(CxCore.CvMat@,System.IntPtr@,System.Int32[],System.Int32,CxCore.CvScalar,System.Int32,System.Int32)">
            <summary>
            Fills polygons interior
            </summary>
            <param name="img">Image. </param>
            <param name="pts">Array of pointers to polygons. </param>
            <param name="npts">Array of polygon vertex counters. </param>
            <param name="contours">Number of contours that bind the filled region. </param>
            <param name="color">Polygon color. </param>
            <param name="line_type">Type of the polygon boundaries, see </param>
            <param name="shift">Number of fractional bits in the vertex coordinates. </param>
        </member>
        <member name="M:CxCore.cxcore.CvFillPoly(CxCore.CvMat@,System.IntPtr@,System.Int32[],System.Int32,CxCore.CvScalar,System.Int32)">
            <summary>
            Fills polygons interior
            </summary>
            <param name="img">Image. </param>
            <param name="pts">Array of pointers to polygons. </param>
            <param name="npts">Array of polygon vertex counters. </param>
            <param name="contours">Number of contours that bind the filled region. </param>
            <param name="color">Polygon color. </param>
            <param name="line_type">Type of the polygon boundaries, see </param>
        </member>
        <member name="M:CxCore.cxcore.CvFillPoly(CxCore.CvMat@,System.IntPtr@,System.Int32[],System.Int32,CxCore.CvScalar)">
            <summary>
            Fills polygons interior
            </summary>
            <param name="img">Image. </param>
            <param name="pts">Array of pointers to polygons. </param>
            <param name="npts">Array of polygon vertex counters. </param>
            <param name="contours">Number of contours that bind the filled region. </param>
            <param name="color">Polygon color. </param>
        </member>
        <member name="M:CxCore.cxcore.CvFillPoly(CxCore.CvSeq@,System.IntPtr@,System.Int32[],System.Int32,CxCore.CvScalar,System.Int32,System.Int32)">
            <summary>
            Fills polygons interior
            </summary>
            <param name="img">Image. </param>
            <param name="pts">Array of pointers to polygons. </param>
            <param name="npts">Array of polygon vertex counters. </param>
            <param name="contours">Number of contours that bind the filled region. </param>
            <param name="color">Polygon color. </param>
            <param name="line_type">Type of the polygon boundaries, see </param>
            <param name="shift">Number of fractional bits in the vertex coordinates. </param>
        </member>
        <member name="M:CxCore.cxcore.CvFillPoly(CxCore.CvSeq@,System.IntPtr@,System.Int32[],System.Int32,CxCore.CvScalar,System.Int32)">
            <summary>
            Fills polygons interior
            </summary>
            <param name="img">Image. </param>
            <param name="pts">Array of pointers to polygons. </param>
            <param name="npts">Array of polygon vertex counters. </param>
            <param name="contours">Number of contours that bind the filled region. </param>
            <param name="color">Polygon color. </param>
            <param name="line_type">Type of the polygon boundaries, see </param>
        </member>
        <member name="M:CxCore.cxcore.CvFillPoly(CxCore.CvSeq@,System.IntPtr@,System.Int32[],System.Int32,CxCore.CvScalar)">
            <summary>
            Fills polygons interior
            </summary>
            <param name="img">Image. </param>
            <param name="pts">Array of pointers to polygons. </param>
            <param name="npts">Array of polygon vertex counters. </param>
            <param name="contours">Number of contours that bind the filled region. </param>
            <param name="color">Polygon color. </param>
        </member>
        <member name="M:CxCore.cxcore.CvFillConvexPoly(CxCore.IplImage@,CxCore.CvPoint@,System.Int32,CxCore.CvScalar,System.Int32,System.Int32)">
            <summary>
            Fills convex polygon
            </summary>
            <param name="img">Image. </param>
            <param name="pts">Array of pointers to a single polygon. </param>
            <param name="npts">Polygon vertex counter. </param>
            <param name="color">Polygon color. </param>
            <param name="line_type">Type of the polygon boundaries, see </param>
            <param name="shift">Number of fractional bits in the vertex coordinates. </param>
        </member>
        <member name="M:CxCore.cxcore.CvFillConvexPoly(CxCore.IplImage@,CxCore.CvPoint@,System.Int32,CxCore.CvScalar,System.Int32)">
            <summary>
            Fills convex polygon
            </summary>
            <param name="img">Image. </param>
            <param name="pts">Array of pointers to a single polygon. </param>
            <param name="npts">Polygon vertex counter. </param>
            <param name="color">Polygon color. </param>
            <param name="line_type">Type of the polygon boundaries, see </param>
        </member>
        <member name="M:CxCore.cxcore.CvFillConvexPoly(CxCore.IplImage@,CxCore.CvPoint@,System.Int32,CxCore.CvScalar)">
            <summary>
            Fills convex polygon
            </summary>
            <param name="img">Image. </param>
            <param name="pts">Array of pointers to a single polygon. </param>
            <param name="npts">Polygon vertex counter. </param>
            <param name="color">Polygon color. </param>
        </member>
        <member name="M:CxCore.cxcore.CvFillConvexPoly(CxCore.CvMat@,CxCore.CvPoint@,System.Int32,CxCore.CvScalar,System.Int32,System.Int32)">
            <summary>
            Fills convex polygon
            </summary>
            <param name="img">Image. </param>
            <param name="pts">Array of pointers to a single polygon. </param>
            <param name="npts">Polygon vertex counter. </param>
            <param name="color">Polygon color. </param>
            <param name="line_type">Type of the polygon boundaries, see </param>
            <param name="shift">Number of fractional bits in the vertex coordinates. </param>
        </member>
        <member name="M:CxCore.cxcore.CvFillConvexPoly(CxCore.CvMat@,CxCore.CvPoint@,System.Int32,CxCore.CvScalar,System.Int32)">
            <summary>
            Fills convex polygon
            </summary>
            <param name="img">Image. </param>
            <param name="pts">Array of pointers to a single polygon. </param>
            <param name="npts">Polygon vertex counter. </param>
            <param name="color">Polygon color. </param>
            <param name="line_type">Type of the polygon boundaries, see </param>
        </member>
        <member name="M:CxCore.cxcore.CvFillConvexPoly(CxCore.CvMat@,CxCore.CvPoint@,System.Int32,CxCore.CvScalar)">
            <summary>
            Fills convex polygon
            </summary>
            <param name="img">Image. </param>
            <param name="pts">Array of pointers to a single polygon. </param>
            <param name="npts">Polygon vertex counter. </param>
            <param name="color">Polygon color. </param>
        </member>
        <member name="M:CxCore.cxcore.CvFillConvexPoly(CxCore.CvSeq@,CxCore.CvPoint@,System.Int32,CxCore.CvScalar,System.Int32,System.Int32)">
            <summary>
            Fills convex polygon
            </summary>
            <param name="img">Image. </param>
            <param name="pts">Array of pointers to a single polygon. </param>
            <param name="npts">Polygon vertex counter. </param>
            <param name="color">Polygon color. </param>
            <param name="line_type">Type of the polygon boundaries, see </param>
            <param name="shift">Number of fractional bits in the vertex coordinates. </param>
        </member>
        <member name="M:CxCore.cxcore.CvFillConvexPoly(CxCore.CvSeq@,CxCore.CvPoint@,System.Int32,CxCore.CvScalar,System.Int32)">
            <summary>
            Fills convex polygon
            </summary>
            <param name="img">Image. </param>
            <param name="pts">Array of pointers to a single polygon. </param>
            <param name="npts">Polygon vertex counter. </param>
            <param name="color">Polygon color. </param>
            <param name="line_type">Type of the polygon boundaries, see </param>
        </member>
        <member name="M:CxCore.cxcore.CvFillConvexPoly(CxCore.CvSeq@,CxCore.CvPoint@,System.Int32,CxCore.CvScalar)">
            <summary>
            Fills convex polygon
            </summary>
            <param name="img">Image. </param>
            <param name="pts">Array of pointers to a single polygon. </param>
            <param name="npts">Polygon vertex counter. </param>
            <param name="color">Polygon color. </param>
        </member>
        <member name="M:CxCore.cxcore.CvPolyLine(CxCore.IplImage@,CxCore.CvPoint[]@,System.Int32[],System.Int32,System.Int32,CxCore.CvScalar,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws simple or thick polygons
            </summary>
            <param name="img">Image. </param>
            <param name="pts">Array of pointers to polylines. </param>
            <param name="npts">Array of polyline vertex counters. </param>
            <param name="contours">Number of polyline contours. </param>
            <param name="is_closed">Indicates whether the polylines must be drawn closed. If closed, thefunction draws the line from the last vertex of every contour to the firstvertex. </param>
            <param name="color">Polyline color. </param>
            <param name="thickness">Thickness of the polyline edges. </param>
            <param name="line_type">Type of the line segments, see </param>
            <param name="shift">Number of fractional bits in the vertex coordinates. </param>
        </member>
        <member name="M:CxCore.cxcore.CvPolyLine(CxCore.IplImage@,CxCore.CvPoint[]@,System.Int32[],System.Int32,System.Int32,CxCore.CvScalar,System.Int32,System.Int32)">
            <summary>
            Draws simple or thick polygons
            </summary>
            <param name="img">Image. </param>
            <param name="pts">Array of pointers to polylines. </param>
            <param name="npts">Array of polyline vertex counters. </param>
            <param name="contours">Number of polyline contours. </param>
            <param name="is_closed">Indicates whether the polylines must be drawn closed. If closed, thefunction draws the line from the last vertex of every contour to the firstvertex. </param>
            <param name="color">Polyline color. </param>
            <param name="thickness">Thickness of the polyline edges. </param>
            <param name="line_type">Type of the line segments, see </param>
        </member>
        <member name="M:CxCore.cxcore.CvPolyLine(CxCore.IplImage@,CxCore.CvPoint[]@,System.Int32[],System.Int32,System.Int32,CxCore.CvScalar,System.Int32)">
            <summary>
            Draws simple or thick polygons
            </summary>
            <param name="img">Image. </param>
            <param name="pts">Array of pointers to polylines. </param>
            <param name="npts">Array of polyline vertex counters. </param>
            <param name="contours">Number of polyline contours. </param>
            <param name="is_closed">Indicates whether the polylines must be drawn closed. If closed, thefunction draws the line from the last vertex of every contour to the firstvertex. </param>
            <param name="color">Polyline color. </param>
            <param name="thickness">Thickness of the polyline edges. </param>
        </member>
        <member name="M:CxCore.cxcore.CvPolyLine(CxCore.IplImage@,CxCore.CvPoint[]@,System.Int32[],System.Int32,System.Int32,CxCore.CvScalar)">
            <summary>
            Draws simple or thick polygons
            </summary>
            <param name="img">Image. </param>
            <param name="pts">Array of pointers to polylines. </param>
            <param name="npts">Array of polyline vertex counters. </param>
            <param name="contours">Number of polyline contours. </param>
            <param name="is_closed">Indicates whether the polylines must be drawn closed. If closed, thefunction draws the line from the last vertex of every contour to the firstvertex. </param>
            <param name="color">Polyline color. </param>
        </member>
        <member name="M:CxCore.cxcore.CvPolyLine(CxCore.CvMat@,CxCore.CvPoint[]@,System.Int32[],System.Int32,System.Int32,CxCore.CvScalar,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws simple or thick polygons
            </summary>
            <param name="img">Image. </param>
            <param name="pts">Array of pointers to polylines. </param>
            <param name="npts">Array of polyline vertex counters. </param>
            <param name="contours">Number of polyline contours. </param>
            <param name="is_closed">Indicates whether the polylines must be drawn closed. If closed, thefunction draws the line from the last vertex of every contour to the firstvertex. </param>
            <param name="color">Polyline color. </param>
            <param name="thickness">Thickness of the polyline edges. </param>
            <param name="line_type">Type of the line segments, see </param>
            <param name="shift">Number of fractional bits in the vertex coordinates. </param>
        </member>
        <member name="M:CxCore.cxcore.CvPolyLine(CxCore.CvMat@,CxCore.CvPoint[]@,System.Int32[],System.Int32,System.Int32,CxCore.CvScalar,System.Int32,System.Int32)">
            <summary>
            Draws simple or thick polygons
            </summary>
            <param name="img">Image. </param>
            <param name="pts">Array of pointers to polylines. </param>
            <param name="npts">Array of polyline vertex counters. </param>
            <param name="contours">Number of polyline contours. </param>
            <param name="is_closed">Indicates whether the polylines must be drawn closed. If closed, thefunction draws the line from the last vertex of every contour to the firstvertex. </param>
            <param name="color">Polyline color. </param>
            <param name="thickness">Thickness of the polyline edges. </param>
            <param name="line_type">Type of the line segments, see </param>
        </member>
        <member name="M:CxCore.cxcore.CvPolyLine(CxCore.CvMat@,CxCore.CvPoint[]@,System.Int32[],System.Int32,System.Int32,CxCore.CvScalar,System.Int32)">
            <summary>
            Draws simple or thick polygons
            </summary>
            <param name="img">Image. </param>
            <param name="pts">Array of pointers to polylines. </param>
            <param name="npts">Array of polyline vertex counters. </param>
            <param name="contours">Number of polyline contours. </param>
            <param name="is_closed">Indicates whether the polylines must be drawn closed. If closed, thefunction draws the line from the last vertex of every contour to the firstvertex. </param>
            <param name="color">Polyline color. </param>
            <param name="thickness">Thickness of the polyline edges. </param>
        </member>
        <member name="M:CxCore.cxcore.CvPolyLine(CxCore.CvMat@,CxCore.CvPoint[]@,System.Int32[],System.Int32,System.Int32,CxCore.CvScalar)">
            <summary>
            Draws simple or thick polygons
            </summary>
            <param name="img">Image. </param>
            <param name="pts">Array of pointers to polylines. </param>
            <param name="npts">Array of polyline vertex counters. </param>
            <param name="contours">Number of polyline contours. </param>
            <param name="is_closed">Indicates whether the polylines must be drawn closed. If closed, thefunction draws the line from the last vertex of every contour to the firstvertex. </param>
            <param name="color">Polyline color. </param>
        </member>
        <member name="M:CxCore.cxcore.CvPolyLine(CxCore.CvSeq@,CxCore.CvPoint[]@,System.Int32[],System.Int32,System.Int32,CxCore.CvScalar,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws simple or thick polygons
            </summary>
            <param name="img">Image. </param>
            <param name="pts">Array of pointers to polylines. </param>
            <param name="npts">Array of polyline vertex counters. </param>
            <param name="contours">Number of polyline contours. </param>
            <param name="is_closed">Indicates whether the polylines must be drawn closed. If closed, thefunction draws the line from the last vertex of every contour to the firstvertex. </param>
            <param name="color">Polyline color. </param>
            <param name="thickness">Thickness of the polyline edges. </param>
            <param name="line_type">Type of the line segments, see </param>
            <param name="shift">Number of fractional bits in the vertex coordinates. </param>
        </member>
        <member name="M:CxCore.cxcore.CvPolyLine(CxCore.CvSeq@,CxCore.CvPoint[]@,System.Int32[],System.Int32,System.Int32,CxCore.CvScalar,System.Int32,System.Int32)">
            <summary>
            Draws simple or thick polygons
            </summary>
            <param name="img">Image. </param>
            <param name="pts">Array of pointers to polylines. </param>
            <param name="npts">Array of polyline vertex counters. </param>
            <param name="contours">Number of polyline contours. </param>
            <param name="is_closed">Indicates whether the polylines must be drawn closed. If closed, thefunction draws the line from the last vertex of every contour to the firstvertex. </param>
            <param name="color">Polyline color. </param>
            <param name="thickness">Thickness of the polyline edges. </param>
            <param name="line_type">Type of the line segments, see </param>
        </member>
        <member name="M:CxCore.cxcore.CvPolyLine(CxCore.CvSeq@,CxCore.CvPoint[]@,System.Int32[],System.Int32,System.Int32,CxCore.CvScalar,System.Int32)">
            <summary>
            Draws simple or thick polygons
            </summary>
            <param name="img">Image. </param>
            <param name="pts">Array of pointers to polylines. </param>
            <param name="npts">Array of polyline vertex counters. </param>
            <param name="contours">Number of polyline contours. </param>
            <param name="is_closed">Indicates whether the polylines must be drawn closed. If closed, thefunction draws the line from the last vertex of every contour to the firstvertex. </param>
            <param name="color">Polyline color. </param>
            <param name="thickness">Thickness of the polyline edges. </param>
        </member>
        <member name="M:CxCore.cxcore.CvPolyLine(CxCore.CvSeq@,CxCore.CvPoint[]@,System.Int32[],System.Int32,System.Int32,CxCore.CvScalar)">
            <summary>
            Draws simple or thick polygons
            </summary>
            <param name="img">Image. </param>
            <param name="pts">Array of pointers to polylines. </param>
            <param name="npts">Array of polyline vertex counters. </param>
            <param name="contours">Number of polyline contours. </param>
            <param name="is_closed">Indicates whether the polylines must be drawn closed. If closed, thefunction draws the line from the last vertex of every contour to the firstvertex. </param>
            <param name="color">Polyline color. </param>
        </member>
        <member name="M:CxCore.cxcore.CvInitFont(Cv.CvFont@,System.Int32,System.Double,System.Double,System.Double,System.Int32,System.Int32)">
            <summary>
            Initializes font structure
            </summary>
            <param name="font">Pointer to the font structure initialized by the function. </param>
            <param name="font_face">Font name identifier. Only a subset of Hershey fonts( CV_FONT_HERSHEY_SIMPLEX CV_FONT_HERSHEY_PLAIN CV_FONT_HERSHEY_DUPLEX CV_FONT_HERSHEY_SIMPLEX CV_FONT_HERSHEY_COMPLEX CV_FONT_HERSHEY_TRIPLEX CV_FONT_HERSHEY_COMPLEX CV_FONT_HERSHEY_COMPLEX_SMALL CV_FONT_HERSHEY_COMPLEX CV_FONT_HERSHEY_SCRIPT_SIMPLEX CV_FONT_HERSHEY_SCRIPT_COMPLEX CV_FONT_HERSHEY_SCRIPT_SIMPLEX The parameter can be composited from one of the values above and optional CV_FONT_ITALIC </param>
            <param name="hscale">Horizontal scale. If equal to 1.0f 0.5f </param>
            <param name="vscale">Vertical scale. If equal to 1.0f 0.5f </param>
            <param name="shear">Approximate tangent of the character slope relative to the verticalline. Zero value means a non-italic font, 1.0f �45� cvLine </param>
            <param name="thickness">Thickness of the text strokes. </param>
            <param name="line_type">Type of the strokes, see </param>
        </member>
        <member name="M:CxCore.cxcore.CvInitFont(Cv.CvFont@,System.Int32,System.Double,System.Double,System.Double,System.Int32)">
            <summary>
            Initializes font structure
            </summary>
            <param name="font">Pointer to the font structure initialized by the function. </param>
            <param name="font_face">Font name identifier. Only a subset of Hershey fonts( CV_FONT_HERSHEY_SIMPLEX CV_FONT_HERSHEY_PLAIN CV_FONT_HERSHEY_DUPLEX CV_FONT_HERSHEY_SIMPLEX CV_FONT_HERSHEY_COMPLEX CV_FONT_HERSHEY_TRIPLEX CV_FONT_HERSHEY_COMPLEX CV_FONT_HERSHEY_COMPLEX_SMALL CV_FONT_HERSHEY_COMPLEX CV_FONT_HERSHEY_SCRIPT_SIMPLEX CV_FONT_HERSHEY_SCRIPT_COMPLEX CV_FONT_HERSHEY_SCRIPT_SIMPLEX The parameter can be composited from one of the values above and optional CV_FONT_ITALIC </param>
            <param name="hscale">Horizontal scale. If equal to 1.0f 0.5f </param>
            <param name="vscale">Vertical scale. If equal to 1.0f 0.5f </param>
            <param name="shear">Approximate tangent of the character slope relative to the verticalline. Zero value means a non-italic font, 1.0f �45� cvLine </param>
            <param name="thickness">Thickness of the text strokes. </param>
        </member>
        <member name="M:CxCore.cxcore.CvInitFont(Cv.CvFont@,System.Int32,System.Double,System.Double,System.Double)">
            <summary>
            Initializes font structure
            </summary>
            <param name="font">Pointer to the font structure initialized by the function. </param>
            <param name="font_face">Font name identifier. Only a subset of Hershey fonts( CV_FONT_HERSHEY_SIMPLEX CV_FONT_HERSHEY_PLAIN CV_FONT_HERSHEY_DUPLEX CV_FONT_HERSHEY_SIMPLEX CV_FONT_HERSHEY_COMPLEX CV_FONT_HERSHEY_TRIPLEX CV_FONT_HERSHEY_COMPLEX CV_FONT_HERSHEY_COMPLEX_SMALL CV_FONT_HERSHEY_COMPLEX CV_FONT_HERSHEY_SCRIPT_SIMPLEX CV_FONT_HERSHEY_SCRIPT_COMPLEX CV_FONT_HERSHEY_SCRIPT_SIMPLEX The parameter can be composited from one of the values above and optional CV_FONT_ITALIC </param>
            <param name="hscale">Horizontal scale. If equal to 1.0f 0.5f </param>
            <param name="vscale">Vertical scale. If equal to 1.0f 0.5f </param>
            <param name="shear">Approximate tangent of the character slope relative to the verticalline. Zero value means a non-italic font, 1.0f �45� cvLine </param>
        </member>
        <member name="M:CxCore.cxcore.CvInitFont(Cv.CvFont@,System.Int32,System.Double,System.Double)">
            <summary>
            Initializes font structure
            </summary>
            <param name="font">Pointer to the font structure initialized by the function. </param>
            <param name="font_face">Font name identifier. Only a subset of Hershey fonts( CV_FONT_HERSHEY_SIMPLEX CV_FONT_HERSHEY_PLAIN CV_FONT_HERSHEY_DUPLEX CV_FONT_HERSHEY_SIMPLEX CV_FONT_HERSHEY_COMPLEX CV_FONT_HERSHEY_TRIPLEX CV_FONT_HERSHEY_COMPLEX CV_FONT_HERSHEY_COMPLEX_SMALL CV_FONT_HERSHEY_COMPLEX CV_FONT_HERSHEY_SCRIPT_SIMPLEX CV_FONT_HERSHEY_SCRIPT_COMPLEX CV_FONT_HERSHEY_SCRIPT_SIMPLEX The parameter can be composited from one of the values above and optional CV_FONT_ITALIC </param>
            <param name="hscale">Horizontal scale. If equal to 1.0f 0.5f </param>
            <param name="vscale">Vertical scale. If equal to 1.0f 0.5f </param>
        </member>
        <member name="M:CxCore.cxcore.CvPutText(CxCore.IplImage@,System.String,CxCore.CvPoint,Cv.CvFont@,CxCore.CvScalar)">
            <summary>
            Draws text string
            </summary>
            <param name="img">Input image. </param>
            <param name="text">String to print. </param>
            <param name="org">Coordinates of the bottom-left corner of the first letter. </param>
            <param name="font">Pointer to the font structure. </param>
            <param name="color">Text color. </param>
        </member>
        <member name="M:CxCore.cxcore.CvPutText(CxCore.CvMat@,System.String,CxCore.CvPoint,Cv.CvFont@,CxCore.CvScalar)">
            <summary>
            Draws text string
            </summary>
            <param name="img">Input image. </param>
            <param name="text">String to print. </param>
            <param name="org">Coordinates of the bottom-left corner of the first letter. </param>
            <param name="font">Pointer to the font structure. </param>
            <param name="color">Text color. </param>
        </member>
        <member name="M:CxCore.cxcore.CvPutText(CxCore.CvSeq@,System.String,CxCore.CvPoint,Cv.CvFont@,CxCore.CvScalar)">
            <summary>
            Draws text string
            </summary>
            <param name="img">Input image. </param>
            <param name="text">String to print. </param>
            <param name="org">Coordinates of the bottom-left corner of the first letter. </param>
            <param name="font">Pointer to the font structure. </param>
            <param name="color">Text color. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetTextSize(System.String,Cv.CvFont@,CxCore.CvSize@,System.Int32@)">
            <summary>
            Retrieves width and height of text string
            </summary>
            <param name="text_string">Input string. </param>
            <param name="font">Pointer to the font structure. </param>
            <param name="text_size">Resultant size of the text string. Height of the text does not includethe height of character parts that are below the baseline. </param>
            <param name="baseline">y-coordinate of the baseline relatively to the bottom-most text point. </param>
        </member>
        <member name="M:CxCore.cxcore.CvDrawContours(CxCore.IplImage@,CxCore.CvSeq@,CxCore.CvScalar,CxCore.CvScalar,System.Int32,System.Int32,System.Int32,CxCore.CvPoint)">
            <summary>
            Draws contour outlines or interiors in the image
            </summary>
            <param name="img">Image where the contours are to be drawn. Like in any other drawingfunction, the contours are clipped with the ROI. </param>
            <param name="contour">Pointer to the first contour. </param>
            <param name="external_color">Color of the external contours. </param>
            <param name="hole_color">Color of internal contours (holes). </param>
            <param name="max_level">Level to draw in.</param>
            <param name="thickness">Line thickness.</param>
            <param name="line_type">Line Type.</param>
            <param name="offset">Offset.</param>
        </member>
        <member name="M:CxCore.cxcore.CvDrawContours(CxCore.CvMat@,CxCore.CvSeq@,CxCore.CvScalar,CxCore.CvScalar,System.Int32,System.Int32,System.Int32,CxCore.CvPoint)">
            <summary>
            Draws contour outlines or interiors in the image
            </summary>
            <param name="img">Image where the contours are to be drawn. Like in any other drawingfunction, the contours are clipped with the ROI. </param>
            <param name="contour">Pointer to the first contour. </param>
            <param name="external_color">Color of the external contours. </param>
            <param name="hole_color">Color of internal contours (holes). </param>
            <param name="max_level">Level to draw in.</param>
            <param name="thickness">Line thickness.</param>
            <param name="line_type">Line Type.</param>
            <param name="offset">Offset.</param>
        </member>
        <member name="M:CxCore.cxcore.CvDrawContours(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvScalar,CxCore.CvScalar,System.Int32,System.Int32,System.Int32,CxCore.CvPoint)">
            <summary>
            Draws contour outlines or interiors in the image
            </summary>
            <param name="img">Image where the contours are to be drawn. Like in any other drawingfunction, the contours are clipped with the ROI. </param>
            <param name="contour">Pointer to the first contour. </param>
            <param name="external_color">Color of the external contours. </param>
            <param name="hole_color">Color of internal contours (holes). </param>
            <param name="max_level">Level to draw in.</param>
            <param name="thickness">Line thickness.</param>
            <param name="line_type">Line Type.</param>
            <param name="offset">Offset.</param>
        </member>
        <member name="M:CxCore.cxcore.CvInitLineIterator(CxCore.IplImage@,CxCore.CvPoint,CxCore.CvPoint,CxCore.CvLineIterator@,System.Int32,System.Int32)">
            <summary>
            Initializes line iterator
            </summary>
            <param name="image">Image to sample the line from. </param>
            <param name="pt1">First ending point of the line segment. </param>
            <param name="pt2">Second ending point of the line segment. </param>
            <param name="line_iterator">Pointer to the line iterator state structure. </param>
            <param name="connectivity">The scanned line connectivity, 4 or 8. </param>
            <param name="left_to_right">The flag, indicating whether the line should be always scanned from theleft-most point to the right-most out of pt1 pt2 left_to_right?0 pt1 pt2 left_to_right=0 </param>
        </member>
        <member name="M:CxCore.cxcore.CvInitLineIterator(CxCore.IplImage@,CxCore.CvPoint,CxCore.CvPoint,CxCore.CvLineIterator@,System.Int32)">
            <summary>
            Initializes line iterator
            </summary>
            <param name="image">Image to sample the line from. </param>
            <param name="pt1">First ending point of the line segment. </param>
            <param name="pt2">Second ending point of the line segment. </param>
            <param name="line_iterator">Pointer to the line iterator state structure. </param>
            <param name="connectivity">The scanned line connectivity, 4 or 8. </param>
        </member>
        <member name="M:CxCore.cxcore.CvInitLineIterator(CxCore.IplImage@,CxCore.CvPoint,CxCore.CvPoint,CxCore.CvLineIterator@)">
            <summary>
            Initializes line iterator
            </summary>
            <param name="image">Image to sample the line from. </param>
            <param name="pt1">First ending point of the line segment. </param>
            <param name="pt2">Second ending point of the line segment. </param>
            <param name="line_iterator">Pointer to the line iterator state structure. </param>
        </member>
        <member name="M:CxCore.cxcore.CvInitLineIterator(CxCore.CvMat@,CxCore.CvPoint,CxCore.CvPoint,CxCore.CvLineIterator@,System.Int32,System.Int32)">
            <summary>
            Initializes line iterator
            </summary>
            <param name="image">Image to sample the line from. </param>
            <param name="pt1">First ending point of the line segment. </param>
            <param name="pt2">Second ending point of the line segment. </param>
            <param name="line_iterator">Pointer to the line iterator state structure. </param>
            <param name="connectivity">The scanned line connectivity, 4 or 8. </param>
            <param name="left_to_right">The flag, indicating whether the line should be always scanned from theleft-most point to the right-most out of pt1 pt2 left_to_right?0 pt1 pt2 left_to_right=0 </param>
        </member>
        <member name="M:CxCore.cxcore.CvInitLineIterator(CxCore.CvMat@,CxCore.CvPoint,CxCore.CvPoint,CxCore.CvLineIterator@,System.Int32)">
            <summary>
            Initializes line iterator
            </summary>
            <param name="image">Image to sample the line from. </param>
            <param name="pt1">First ending point of the line segment. </param>
            <param name="pt2">Second ending point of the line segment. </param>
            <param name="line_iterator">Pointer to the line iterator state structure. </param>
            <param name="connectivity">The scanned line connectivity, 4 or 8. </param>
        </member>
        <member name="M:CxCore.cxcore.CvInitLineIterator(CxCore.CvMat@,CxCore.CvPoint,CxCore.CvPoint,CxCore.CvLineIterator@)">
            <summary>
            Initializes line iterator
            </summary>
            <param name="image">Image to sample the line from. </param>
            <param name="pt1">First ending point of the line segment. </param>
            <param name="pt2">Second ending point of the line segment. </param>
            <param name="line_iterator">Pointer to the line iterator state structure. </param>
        </member>
        <member name="M:CxCore.cxcore.CvInitLineIterator(CxCore.CvSeq@,CxCore.CvPoint,CxCore.CvPoint,CxCore.CvLineIterator@,System.Int32,System.Int32)">
            <summary>
            Initializes line iterator
            </summary>
            <param name="image">Image to sample the line from. </param>
            <param name="pt1">First ending point of the line segment. </param>
            <param name="pt2">Second ending point of the line segment. </param>
            <param name="line_iterator">Pointer to the line iterator state structure. </param>
            <param name="connectivity">The scanned line connectivity, 4 or 8. </param>
            <param name="left_to_right">The flag, indicating whether the line should be always scanned from theleft-most point to the right-most out of pt1 pt2 left_to_right?0 pt1 pt2 left_to_right=0 </param>
        </member>
        <member name="M:CxCore.cxcore.CvInitLineIterator(CxCore.CvSeq@,CxCore.CvPoint,CxCore.CvPoint,CxCore.CvLineIterator@,System.Int32)">
            <summary>
            Initializes line iterator
            </summary>
            <param name="image">Image to sample the line from. </param>
            <param name="pt1">First ending point of the line segment. </param>
            <param name="pt2">Second ending point of the line segment. </param>
            <param name="line_iterator">Pointer to the line iterator state structure. </param>
            <param name="connectivity">The scanned line connectivity, 4 or 8. </param>
        </member>
        <member name="M:CxCore.cxcore.CvInitLineIterator(CxCore.CvSeq@,CxCore.CvPoint,CxCore.CvPoint,CxCore.CvLineIterator@)">
            <summary>
            Initializes line iterator
            </summary>
            <param name="image">Image to sample the line from. </param>
            <param name="pt1">First ending point of the line segment. </param>
            <param name="pt2">Second ending point of the line segment. </param>
            <param name="line_iterator">Pointer to the line iterator state structure. </param>
        </member>
        <member name="M:CxCore.cxcore.CvClipLine(CxCore.CvSize,CxCore.CvPoint@,CxCore.CvPoint@)">
            <summary>
            Clips the line against the image rectangle
            </summary>
            <param name="img_size">Size of the image. </param>
            <param name="pt1">First ending point of the line segment. It is modified by the function. </param>
            <param name="pt2">Second ending point of the line segment. It is modified by the function. </param>
        </member>
        <member name="M:CxCore.cxcore.CvEllipse2Poly(CxCore.CvPoint,CxCore.CvSize,System.Int32,System.Int32,System.Int32,CxCore.CvPoint@,System.Int32)">
            <summary>
            Approximates elliptic arc with polyline
            </summary>
            <param name="center">Center of the arc. </param>
            <param name="axes">Half-sizes of the arc. See </param>
            <param name="angle">Rotation angle of the ellipse in degrees. See </param>
            <param name="arc_start">arc_start</param>
            <param name="arc_end">arc_end</param>
            <param name="pts">The array of points, filled by the function. </param>
            <param name="delta">Angle between the subsequent polyline vertices, approximation accuracy.So, the total number of output points will ceil((end_angle - start_angle)/delta) + 1 at max. </param>
        </member>
        <member name="M:CxCore.cxcore.CvAttrValue(CxCore.CvAttrList@,System.String)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="attr">attr</param>
            <param name="attr_name">attr_name</param>
        </member>
        <member name="M:CxCore.cxcore.CvOpenFileStorage(System.String,CxCore.CvMemStorage@,System.Int32)">
            <summary>
            Opens file storage for reading or writing data
            </summary>
            <param name="filename">Name of the file associated with the storage. </param>
            <param name="memstorage">Memory storage used for temporary data and for storing dynamic structures,such as </param>
            <param name="flags">Can be one of the following: CV_STORAGE_READ CV_STORAGE_WRITE </param>
        </member>
        <member name="M:CxCore.cxcore.CvOpenFileStorage(System.String,System.Int32)">
            <summary>
            Opens file storage for reading or writing data
            </summary>
            <param name="filename">Name of the file associated with the storage. </param>
            <param name="flags">Can be one of the following: CV_STORAGE_READ CV_STORAGE_WRITE </param>
        </member>
        <member name="M:CxCore.cxcore.CvReleaseFileStorage(CxCore.CvFileStorage@)">
            <summary>
            Releases file storage
            </summary>
            <param name="fs">Double pointer to the released file storage. </param>
        </member>
        <member name="M:CxCore.cxcore.CvStartWriteStruct(CxCore.CvFileStorage@,System.String,System.Int32,System.String,CxCore.CvAttrList)">
            <summary>
            Starts writing a new structure
            </summary>
            <param name="fs">File storage. </param>
            <param name="name">Name of the written structure. The structure can be accessed by this name when            the storage is read. </param>
            <param name="struct_flags">A combination one of the following values: CV_NODE_SEQ CV_NODE_MAP One and only one of the two above flags must be specified CV_NODE_FLOW </param>
            <param name="type_name">Optional parameter - the object type name. In case of XML it is written as type_id </param>
            <param name="attributes">This parameter is not used in the current implementation. </param>
        </member>
        <member name="M:CxCore.cxcore.CvStartWriteStruct(CxCore.CvFileStorage@,System.String,System.Int32,System.String)">
            <summary>
            Starts writing a new structure
            </summary>
            <param name="fs">File storage. </param>
            <param name="name">Name of the written structure. The structure can be accessed by this name when            the storage is read. </param>
            <param name="struct_flags">A combination one of the following values: CV_NODE_SEQ CV_NODE_MAP One and only one of the two above flags must be specified CV_NODE_FLOW </param>
            <param name="type_name">Optional parameter - the object type name. In case of XML it is written as type_id </param>
        </member>
        <member name="M:CxCore.cxcore.CvStartWriteStruct(CxCore.CvFileStorage@,System.String,System.Int32)">
            <summary>
            Starts writing a new structure
            </summary>
            <param name="fs">File storage. </param>
            <param name="name">Name of the written structure. The structure can be accessed by this name when            the storage is read. </param>
            <param name="struct_flags">A combination one of the following values: CV_NODE_SEQ CV_NODE_MAP One and only one of the two above flags must be specified CV_NODE_FLOW </param>
        </member>
        <member name="M:CxCore.cxcore.CvEndWriteStruct(CxCore.CvFileStorage@)">
            <summary>
            Ends writing a structure
            </summary>
            <param name="fs">File storage. </param>
        </member>
        <member name="M:CxCore.cxcore.CvWriteInt(CxCore.CvFileStorage@,System.String,System.Int32)">
            <summary>
            Writes an integer value
            </summary>
            <param name="fs">File storage. </param>
            <param name="name">Name of the written value. Should be NULL if and only if the            parent structure is a sequence. </param>
            <param name="value">The written value. </param>
        </member>
        <member name="M:CxCore.cxcore.CvWriteReal(CxCore.CvFileStorage@,System.String,System.Double)">
            <summary>
            Writes a floating-point value
            </summary>
            <param name="fs">File storage. </param>
            <param name="name">Name of the written value. Should be NULL if and only if the            parent structure is a sequence. </param>
            <param name="value">The written value. </param>
        </member>
        <member name="M:CxCore.cxcore.CvWriteString(CxCore.CvFileStorage@,System.String,System.String,System.Int32)">
            <summary>
            Writes a text string
            </summary>
            <param name="fs">File storage. </param>
            <param name="name">Name of the written string. Should be NULL if and only if the            parent structure is a sequence. </param>
            <param name="str">The written text string. </param>
            <param name="quote">If non-zero, the written string is put in quotes, regardless of whether             they are required or not. Otherwise, if the flag is zero, quotes are used             only when they are required (e.g. when the string starts with a digit or contains             spaces). </param>
        </member>
        <member name="M:CxCore.cxcore.CvWriteString(CxCore.CvFileStorage@,System.String,System.String)">
            <summary>
            Writes a text string
            </summary>
            <param name="fs">File storage. </param>
            <param name="name">Name of the written string. Should be NULL if and only if the            parent structure is a sequence. </param>
            <param name="str">The written text string. </param>
        </member>
        <member name="M:CxCore.cxcore.CvWriteComment(CxCore.CvFileStorage@,System.String,System.Int32)">
            <summary>
            Writes comment
            </summary>
            <param name="fs">File storage. </param>
            <param name="comment">The written comment, single-line or multi-line. </param>
            <param name="eol_comment">If non-zero, the function tries to put the comment in the end             of current line. If the flag is zero, if the comment is multi-line, or             if it does not fit in the end of the current line, the comment starts             from a new line. </param>
        </member>
        <member name="M:CxCore.cxcore.CvStartNextStream(CxCore.CvFileStorage@)">
            <summary>
            Starts the next stream
            </summary>
            <param name="fs">File storage. </param>
        </member>
        <member name="M:CxCore.cxcore.CvWrite(CxCore.CvFileStorage@,System.String,System.IntPtr,CxCore.CvAttrList)">
            <summary>
            Writes user object
            </summary>
            <param name="fs">File storage. </param>
            <param name="name">Name, of the written object. Should be NULL if and only if the parent            structure is a sequence. </param>
            <param name="ptr">Pointer to the object. </param>
            <param name="attributes">The attributes of the object. They are specific for each particular           type (see the dicsussion). </param>
        </member>
        <member name="M:CxCore.cxcore.CvWrite(CxCore.CvFileStorage@,System.String,System.IntPtr)">
            <summary>
            Writes user object
            </summary>
            <param name="fs">File storage. </param>
            <param name="name">Name, of the written object. Should be NULL if and only if the parent            structure is a sequence. </param>
            <param name="ptr">Pointer to the object. </param>
        </member>
        <member name="M:CxCore.cxcore.CvWriteRawData(CxCore.CvFileStorage@,System.IntPtr,System.Int32,System.String)">
            <summary>
            Writes multiple numbers
            </summary>
            <param name="fs">File storage. </param>
            <param name="src">Pointer to the written array </param>
            <param name="len">Number of the array elements to write. </param>
            <param name="dt">Specification of each array element that has the following format: ([count]{'u'|'c'|'w'|'s'|'i'|'f'|'d'})... count dt='2if' 'iif' '2i1f' dt='u' dt='2d' </param>
        </member>
        <member name="M:CxCore.cxcore.CvWriteFileNode(CxCore.CvFileStorage@,System.String,CxCore.CvFileNode@,System.Int32)">
            <summary>
            Writes file node to another file storage
            </summary>
            <param name="fs">Destination file storage. </param>
            <param name="new_node_name">new_node_name</param>
            <param name="node">The written node </param>
            <param name="embed">If the written node is a collection and this parameter is not zero,             no extra level of hiararchy is created. Instead, all the elements of node </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetRootFileNode(CxCore.CvFileStorage@,System.Int32)">
            <summary>
            Retrieves one of top-level nodes of the file storage
            </summary>
            <param name="fs">File storage. </param>
            <param name="stream_index">Zero-based index of the stream. See </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetRootFileNode(CxCore.CvFileStorage@)">
            <summary>
            Retrieves one of top-level nodes of the file storage
            </summary>
            <param name="fs">File storage. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetFileNodeByName(CxCore.CvFileStorage@,System.String)">
            <summary>
            Finds node in the map or file storage
            </summary>
            <param name="fs">File storage. </param>
            <param name="name">The file node name. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetFileNodeByName(CxCore.CvFileStorage@,CxCore.CvFileNode@,System.String)">
            <summary>
            Finds node in the map or file storage
            </summary>
            <param name="fs">File storage. </param>
            <param name="map">The parent map. If it is NULL, the function searches           in all the top-level nodes (streams), starting from the first one. </param>
            <param name="name">The file node name. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetHashedKey(CxCore.CvFileStorage@,System.String,System.Int32,System.Int32)">
            <summary>
            Returns a unique pointer for given name
            </summary>
            <param name="fs">File storage. </param>
            <param name="name">Literal node name. </param>
            <param name="len">Length of the name (if it is known apriori), or -1 if it needs to           be calculated. </param>
            <param name="create_missing">Flag that specifies, whether an absent key should be           added into the hash table, or not. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetHashedKey(CxCore.CvFileStorage@,System.String,System.Int32)">
            <summary>
            Returns a unique pointer for given name
            </summary>
            <param name="fs">File storage. </param>
            <param name="name">Literal node name. </param>
            <param name="len">Length of the name (if it is known apriori), or -1 if it needs to           be calculated. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetHashedKey(CxCore.CvFileStorage@,System.String)">
            <summary>
            Returns a unique pointer for given name
            </summary>
            <param name="fs">File storage. </param>
            <param name="name">Literal node name. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetFileNode(CxCore.CvFileStorage@,CxCore.CvFileNode@,CxCore.CvStringHashNode@,System.Int32)">
            <summary>
            Finds node in the map or file storage
            </summary>
            <param name="fs">File storage. </param>
            <param name="map">The parent map. If it is NULL, the function searches a top-level node.           If both map key </param>
            <param name="key">Unique pointer to the node name, retrieved with </param>
            <param name="create_missing">Flag that specifies, whether an absent node should be           added to the map, or not. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetFileNode(CxCore.CvFileStorage@,CxCore.CvFileNode@,CxCore.CvStringHashNode@)">
            <summary>
            Finds node in the map or file storage
            </summary>
            <param name="fs">File storage. </param>
            <param name="map">The parent map. If it is NULL, the function searches a top-level node.           If both map key </param>
            <param name="key">Unique pointer to the node name, retrieved with </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetFileNodeName(CxCore.CvFileNode@)">
            <summary>
            Returns name of file node
            </summary>
            <param name="node">File node </param>
        </member>
        <member name="M:CxCore.cxcore.CvReadInt(CxCore.CvFileNode@,System.Int32)">
            <summary>
            Retrieves integer value from file node
            </summary>
            <param name="node">File node. </param>
            <param name="default_value">The value that is returned if node </param>
        </member>
        <member name="M:CxCore.cxcore.CvReadInt(CxCore.CvFileNode@)">
            <summary>
            Retrieves integer value from file node
            </summary>
            <param name="node">File node. </param>
        </member>
        <member name="M:CxCore.cxcore.CvReadIntByName(CxCore.CvFileStorage@,CxCore.CvFileNode@,System.String,System.Int32)">
            <summary>
            Finds file node and returns its value
            </summary>
            <param name="fs">File storage. </param>
            <param name="map">The parent map. If it is NULL, the function searches a top-level node. </param>
            <param name="name">The node name. </param>
            <param name="default_value">The value that is returned if the file node is not found. </param>
        </member>
        <member name="M:CxCore.cxcore.CvReadIntByName(CxCore.CvFileStorage@,CxCore.CvFileNode@,System.String)">
            <summary>
            Finds file node and returns its value
            </summary>
            <param name="fs">File storage. </param>
            <param name="map">The parent map. If it is NULL, the function searches a top-level node. </param>
            <param name="name">The node name. </param>
        </member>
        <member name="M:CxCore.cxcore.CvReadReal(CxCore.CvFileNode@,System.Double)">
            <summary>
            Retrieves floating-point value from file node
            </summary>
            <param name="node">File node. </param>
            <param name="default_value">The value that is returned if node </param>
        </member>
        <member name="M:CxCore.cxcore.CvReadReal(CxCore.CvFileNode@)">
            <summary>
            Retrieves floating-point value from file node
            </summary>
            <param name="node">File node. </param>
        </member>
        <member name="M:CxCore.cxcore.CvReadRealByName(CxCore.CvFileStorage@,CxCore.CvFileNode@,System.String,System.Double)">
            <summary>
            Finds file node and returns its value
            </summary>
            <param name="fs">File storage. </param>
            <param name="map">The parent map. If it is NULL, the function searches a top-level node. </param>
            <param name="name">The node name. </param>
            <param name="default_value">The value that is returned if the file node is not found. </param>
        </member>
        <member name="M:CxCore.cxcore.CvReadRealByName(CxCore.CvFileStorage@,CxCore.CvFileNode@,System.String)">
            <summary>
            Finds file node and returns its value
            </summary>
            <param name="fs">File storage. </param>
            <param name="map">The parent map. If it is NULL, the function searches a top-level node. </param>
            <param name="name">The node name. </param>
        </member>
        <member name="M:CxCore.cxcore.CvReadString(CxCore.CvFileNode@,System.String)">
            <summary>
            Retrieves text string from file node
            </summary>
            <param name="node">File node. </param>
            <param name="default_value">The value that is returned if node </param>
        </member>
        <member name="M:CxCore.cxcore.CvReadString(CxCore.CvFileNode@)">
            <summary>
            Retrieves text string from file node
            </summary>
            <param name="node">File node. </param>
        </member>
        <member name="M:CxCore.cxcore.CvReadStringByName(CxCore.CvFileStorage@,CxCore.CvFileNode@,System.String,System.String)">
            <summary>
            Finds file node and returns its value
            </summary>
            <param name="fs">File storage. </param>
            <param name="map">The parent map. If it is NULL, the function searches a top-level node. </param>
            <param name="name">The node name. </param>
            <param name="default_value">The value that is returned if the file node is not found. </param>
        </member>
        <member name="M:CxCore.cxcore.CvReadStringByName(CxCore.CvFileStorage@,CxCore.CvFileNode@,System.String)">
            <summary>
            Finds file node and returns its value
            </summary>
            <param name="fs">File storage. </param>
            <param name="map">The parent map. If it is NULL, the function searches a top-level node. </param>
            <param name="name">The node name. </param>
        </member>
        <member name="M:CxCore.cxcore.CvRead(CxCore.CvFileStorage@,CxCore.CvFileNode@)">
            <summary>
            Decodes object and returns pointer to it
            </summary>
            <param name="fs">File storage. </param>
            <param name="node">The root object node. </param>
        </member>
        <member name="M:CxCore.cxcore.CvRead(CxCore.CvFileStorage@)">
            <summary>
            Decodes object and returns pointer to it
            </summary>
            <param name="fs">File storage. </param>
        </member>
        <member name="M:CxCore.cxcore.CvReadRawData(CxCore.CvFileStorage@,CxCore.CvFileNode@,System.IntPtr,System.String)">
            <summary>
            Reads multiple numbers
            </summary>
            <param name="fs">File storage. </param>
            <param name="src">The file node (a sequence) to read numbers from. </param>
            <param name="dst">Pointer to the destination array. </param>
            <param name="dt">Specification of each array element. It has the same format as in </param>
        </member>
        <member name="M:CxCore.cxcore.CvStartReadRawData(CxCore.CvFileStorage@,CxCore.CvFileNode@,CxCore.CvSeqReader@)">
            <summary>
            Initializes file node sequence reader
            </summary>
            <param name="fs">File storage. </param>
            <param name="src">The file node (a sequence) to read numbers from. </param>
            <param name="reader">Pointer to the sequence reader. </param>
        </member>
        <member name="M:CxCore.cxcore.CvReadRawDataSlice(CxCore.CvFileStorage@,CxCore.CvSeqReader@,System.Int32,System.IntPtr,System.String)">
            <summary>
            Initializes file node sequence reader
            </summary>
            <param name="fs">File storage. </param>
            <param name="reader">The sequence reader. Initialize it with </param>
            <param name="count">The number of elements to read. </param>
            <param name="dst">Pointer to the destination array. </param>
            <param name="dt">Specification of each array element. It has the same format as in </param>
        </member>
        <member name="M:CxCore.cxcore.CvRegisterType(CxCore.CvTypeInfo@)">
            <summary>
            Registers new type
            </summary>
            <param name="info">Type info structure. </param>
        </member>
        <member name="M:CxCore.cxcore.CvUnregisterType(System.String)">
            <summary>
            Unregisters the type
            </summary>
            <param name="type_name">Name of the unregistered type. </param>
        </member>
        <member name="M:CxCore.cxcore.CvFindType(System.String)">
            <summary>
            Finds type by its name
            </summary>
            <param name="name">name</param>
        </member>
        <member name="M:CxCore.cxcore.CvFirstType">
            <summary>
            Returns the beginning of type list
            </summary>
        </member>
        <member name="M:CxCore.cxcore.CvTypeOf(System.IntPtr)">
            <summary>
            Returns type of the object
            </summary>
            <param name="struct_ptr">The object pointer. </param>
        </member>
        <member name="M:CxCore.cxcore.CvRelease(System.IntPtr@)">
            <summary>
            Releases the object
            </summary>
            <param name="struct_ptr">Double pointer to the object. </param>
        </member>
        <member name="M:CxCore.cxcore.CvClone(System.IntPtr)">
            <summary>
            Makes a clone of the object
            </summary>
            <param name="struct_ptr">The object to clone. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSave(System.String,System.IntPtr,System.String,System.String,CxCore.CvAttrList)">
            <summary>
            Saves object to file
            </summary>
            <param name="filename">File name. </param>
            <param name="struct_ptr">Object to save. </param>
            <param name="name">Optional object name. If it is NULL, the name will be formed from filename </param>
            <param name="comment">Optional comment to put in the beginning of the file. </param>
            <param name="attributes">Optional attributes passed to </param>
        </member>
        <member name="M:CxCore.cxcore.CvSave(System.String,System.IntPtr,System.String,System.String)">
            <summary>
            Saves object to file
            </summary>
            <param name="filename">File name. </param>
            <param name="struct_ptr">Object to save. </param>
            <param name="name">Optional object name. If it is NULL, the name will be formed from filename </param>
            <param name="comment">Optional comment to put in the beginning of the file. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSave(System.String,System.IntPtr,System.String)">
            <summary>
            Saves object to file
            </summary>
            <param name="filename">File name. </param>
            <param name="struct_ptr">Object to save. </param>
            <param name="name">Optional object name. If it is NULL, the name will be formed from filename </param>
        </member>
        <member name="M:CxCore.cxcore.CvSave(System.String,System.IntPtr)">
            <summary>
            Saves object to file
            </summary>
            <param name="filename">File name. </param>
            <param name="struct_ptr">Object to save. </param>
        </member>
        <member name="M:CxCore.cxcore.CvLoad(System.String,CxCore.CvMemStorage@,System.String,System.Text.StringBuilder@)">
            <summary>
            Loads object from file
            </summary>
            <param name="filename">File name. </param>
            <param name="memstorage">Memory storage for dynamic structures, such as </param>
            <param name="name">Optional object name. If it is NULL, the first top-level object in the storage will be loaded. </param>
            <param name="real_name">Optional output parameter that will contain name of the loaded object                 (useful if name=NULL </param>
        </member>
        <member name="M:CxCore.cxcore.CvLoad(System.String,CxCore.CvMemStorage@,System.String)">
            <summary>
            Loads object from file
            </summary>
            <param name="filename">File name. </param>
            <param name="memstorage">Memory storage for dynamic structures, such as </param>
            <param name="name">Optional object name. If it is NULL, the first top-level object in the storage will be loaded. </param>
        </member>
        <member name="M:CxCore.cxcore.CvLoad(System.String,CxCore.CvMemStorage@)">
            <summary>
            Loads object from file
            </summary>
            <param name="filename">File name. </param>
            <param name="memstorage">Memory storage for dynamic structures, such as </param>
        </member>
        <member name="M:CxCore.cxcore.CvLoad(System.String)">
            <summary>
            Loads object from file
            </summary>
            <param name="filename">File name. </param>
        </member>
        <member name="M:CxCore.cxcore.CvCheckArr(CxCore.IplImage@,System.Int32,System.Double,System.Double)">
            <summary>
            Checks every element of input array for invalid values
            </summary>
            <param name="arr">The array to check. </param>
            <param name="flags">The operation flags, 0 or combination of: CV_CHECK_RANGE CV_CHECK_QUIET </param>
            <param name="min_val">The inclusive lower boundary of valid values range.              It is used only if CV_CHECK_RANGE </param>
            <param name="max_val">The exclusive upper boundary of valid values range.              It is used only if CV_CHECK_RANGE </param>
        </member>
        <member name="M:CxCore.cxcore.CvCheckArr(CxCore.IplImage@,System.Int32,System.Double)">
            <summary>
            Checks every element of input array for invalid values
            </summary>
            <param name="arr">The array to check. </param>
            <param name="flags">The operation flags, 0 or combination of: CV_CHECK_RANGE CV_CHECK_QUIET </param>
            <param name="min_val">The inclusive lower boundary of valid values range.              It is used only if CV_CHECK_RANGE </param>
        </member>
        <member name="M:CxCore.cxcore.CvCheckArr(CxCore.IplImage@,System.Int32)">
            <summary>
            Checks every element of input array for invalid values
            </summary>
            <param name="arr">The array to check. </param>
            <param name="flags">The operation flags, 0 or combination of: CV_CHECK_RANGE CV_CHECK_QUIET </param>
        </member>
        <member name="M:CxCore.cxcore.CvCheckArr(CxCore.IplImage@)">
            <summary>
            Checks every element of input array for invalid values
            </summary>
            <param name="arr">The array to check. </param>
        </member>
        <member name="M:CxCore.cxcore.CvCheckArr(CxCore.IplImage@,System.Double,System.Double)">
            <summary>
            Checks every element of input array for invalid values
            </summary>
            <param name="arr">The array to check. </param>
            <param name="min_val">The inclusive lower boundary of valid values range.              It is used only if CV_CHECK_RANGE </param>
            <param name="max_val">The exclusive upper boundary of valid values range.              It is used only if CV_CHECK_RANGE </param>
        </member>
        <member name="M:CxCore.cxcore.CvCheckArr(CxCore.IplImage@,System.Double)">
            <summary>
            Checks every element of input array for invalid values
            </summary>
            <param name="arr">The array to check. </param>
            <param name="min_val">The inclusive lower boundary of valid values range.              It is used only if CV_CHECK_RANGE </param>
        </member>
        <member name="M:CxCore.cxcore.CvCheckArr(CxCore.CvMat@,System.Int32,System.Double,System.Double)">
            <summary>
            Checks every element of input array for invalid values
            </summary>
            <param name="arr">The array to check. </param>
            <param name="flags">The operation flags, 0 or combination of: CV_CHECK_RANGE CV_CHECK_QUIET </param>
            <param name="min_val">The inclusive lower boundary of valid values range.              It is used only if CV_CHECK_RANGE </param>
            <param name="max_val">The exclusive upper boundary of valid values range.              It is used only if CV_CHECK_RANGE </param>
        </member>
        <member name="M:CxCore.cxcore.CvCheckArr(CxCore.CvMat@,System.Int32,System.Double)">
            <summary>
            Checks every element of input array for invalid values
            </summary>
            <param name="arr">The array to check. </param>
            <param name="flags">The operation flags, 0 or combination of: CV_CHECK_RANGE CV_CHECK_QUIET </param>
            <param name="min_val">The inclusive lower boundary of valid values range.              It is used only if CV_CHECK_RANGE </param>
        </member>
        <member name="M:CxCore.cxcore.CvCheckArr(CxCore.CvMat@,System.Int32)">
            <summary>
            Checks every element of input array for invalid values
            </summary>
            <param name="arr">The array to check. </param>
            <param name="flags">The operation flags, 0 or combination of: CV_CHECK_RANGE CV_CHECK_QUIET </param>
        </member>
        <member name="M:CxCore.cxcore.CvCheckArr(CxCore.CvMat@)">
            <summary>
            Checks every element of input array for invalid values
            </summary>
            <param name="arr">The array to check. </param>
        </member>
        <member name="M:CxCore.cxcore.CvCheckArr(CxCore.CvMat@,System.Double,System.Double)">
            <summary>
            Checks every element of input array for invalid values
            </summary>
            <param name="arr">The array to check. </param>
            <param name="min_val">The inclusive lower boundary of valid values range.              It is used only if CV_CHECK_RANGE </param>
            <param name="max_val">The exclusive upper boundary of valid values range.              It is used only if CV_CHECK_RANGE </param>
        </member>
        <member name="M:CxCore.cxcore.CvCheckArr(CxCore.CvMat@,System.Double)">
            <summary>
            Checks every element of input array for invalid values
            </summary>
            <param name="arr">The array to check. </param>
            <param name="min_val">The inclusive lower boundary of valid values range.              It is used only if CV_CHECK_RANGE </param>
        </member>
        <member name="M:CxCore.cxcore.CvCheckArr(CxCore.CvSeq@,System.Int32,System.Double,System.Double)">
            <summary>
            Checks every element of input array for invalid values
            </summary>
            <param name="arr">The array to check. </param>
            <param name="flags">The operation flags, 0 or combination of: CV_CHECK_RANGE CV_CHECK_QUIET </param>
            <param name="min_val">The inclusive lower boundary of valid values range.              It is used only if CV_CHECK_RANGE </param>
            <param name="max_val">The exclusive upper boundary of valid values range.              It is used only if CV_CHECK_RANGE </param>
        </member>
        <member name="M:CxCore.cxcore.CvCheckArr(CxCore.CvSeq@,System.Int32,System.Double)">
            <summary>
            Checks every element of input array for invalid values
            </summary>
            <param name="arr">The array to check. </param>
            <param name="flags">The operation flags, 0 or combination of: CV_CHECK_RANGE CV_CHECK_QUIET </param>
            <param name="min_val">The inclusive lower boundary of valid values range.              It is used only if CV_CHECK_RANGE </param>
        </member>
        <member name="M:CxCore.cxcore.CvCheckArr(CxCore.CvSeq@,System.Int32)">
            <summary>
            Checks every element of input array for invalid values
            </summary>
            <param name="arr">The array to check. </param>
            <param name="flags">The operation flags, 0 or combination of: CV_CHECK_RANGE CV_CHECK_QUIET </param>
        </member>
        <member name="M:CxCore.cxcore.CvCheckArr(CxCore.CvSeq@)">
            <summary>
            Checks every element of input array for invalid values
            </summary>
            <param name="arr">The array to check. </param>
        </member>
        <member name="M:CxCore.cxcore.CvCheckArr(CxCore.CvSeq@,System.Double,System.Double)">
            <summary>
            Checks every element of input array for invalid values
            </summary>
            <param name="arr">The array to check. </param>
            <param name="min_val">The inclusive lower boundary of valid values range.              It is used only if CV_CHECK_RANGE </param>
            <param name="max_val">The exclusive upper boundary of valid values range.              It is used only if CV_CHECK_RANGE </param>
        </member>
        <member name="M:CxCore.cxcore.CvCheckArr(CxCore.CvSeq@,System.Double)">
            <summary>
            Checks every element of input array for invalid values
            </summary>
            <param name="arr">The array to check. </param>
            <param name="min_val">The inclusive lower boundary of valid values range.              It is used only if CV_CHECK_RANGE </param>
        </member>
        <member name="M:CxCore.cxcore.CvKMeans2(CxCore.IplImage@,System.Int32,CxCore.IplImage@,CxCore.CvTermCriteria)">
            <summary>
            Splits set of vectors by given number of clusters
            </summary>
            <param name="samples">Floating-point matrix of input samples, one row per sample. </param>
            <param name="cluster_count">Number of clusters to split the set by. </param>
            <param name="labels">Output integer vector storing cluster indices for every sample. </param>
            <param name="termcrit">Specifies maximum number of iterations and/or accuracy (distance the centers move bybetween the subsequent iterations). </param>
        </member>
        <member name="M:CxCore.cxcore.CvKMeans2(CxCore.CvMat@,System.Int32,CxCore.CvMat@,CxCore.CvTermCriteria)">
            <summary>
            Splits set of vectors by given number of clusters
            </summary>
            <param name="samples">Floating-point matrix of input samples, one row per sample. </param>
            <param name="cluster_count">Number of clusters to split the set by. </param>
            <param name="labels">Output integer vector storing cluster indices for every sample. </param>
            <param name="termcrit">Specifies maximum number of iterations and/or accuracy (distance the centers move bybetween the subsequent iterations). </param>
        </member>
        <member name="M:CxCore.cxcore.CvKMeans2(CxCore.CvSeq@,System.Int32,CxCore.CvSeq@,CxCore.CvTermCriteria)">
            <summary>
            Splits set of vectors by given number of clusters
            </summary>
            <param name="samples">Floating-point matrix of input samples, one row per sample. </param>
            <param name="cluster_count">Number of clusters to split the set by. </param>
            <param name="labels">Output integer vector storing cluster indices for every sample. </param>
            <param name="termcrit">Specifies maximum number of iterations and/or accuracy (distance the centers move bybetween the subsequent iterations). </param>
        </member>
        <member name="M:CxCore.cxcore.CvSeqPartition(CxCore.CvSeq@,CxCore.CvMemStorage@,CxCore.CvSeq@,System.IntPtr,System.IntPtr)">
            <summary>
            Splits sequence into equivalency classes
            </summary>
            <param name="seq">The sequence to partition. </param>
            <param name="storage">The storage to store the sequence of equivalency classes. If it is NULL,               the function uses seq->storage </param>
            <param name="labels">Ouput parameter. Double pointer to the sequence              of 0-based labels of input sequence elements. </param>
            <param name="is_equal">The relation function that should return non-zero if the two particular sequence elements                are from the same class, and zero overwise.                The partitioning algorithm uses transitive closure of the relation function as equivalency critria. </param>
            <param name="userdata">Pointer that is transparently passed to the is_equal </param>
        </member>
        <member name="M:CxCore.cxcore.CvSetErrMode(System.Int32)">
            <summary>
            Sets the error mode
            </summary>
            <param name="mode">The error mode. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSetErrStatus(System.Int32)">
            <summary>
            Sets the error status
            </summary>
            <param name="status">The error status. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetErrMode">
            <summary>
            Returns the current error mode
            </summary>
        </member>
        <member name="M:CxCore.cxcore.CvGetErrStatus">
            <summary>
            Returns the current error status
            </summary>
        </member>
        <member name="M:CxCore.cxcore.CvError(System.Int32,System.String,System.String,System.String,System.Int32)">
            <summary>
            Raises an error
            </summary>
            <param name="status">The error status. </param>
            <param name="func_name">Name of the function where the error occured. </param>
            <param name="err_msg">Additional information/diagnostics about the error. </param>
            <param name="file_name">Name of the file where the error occured. </param>
            <param name="line">Line number, where the error occured. </param>
        </member>
        <member name="M:CxCore.cxcore.CvErrorStr(System.Int32)">
            <summary>
            Returns textual description of error status code
            </summary>
            <param name="status">The error status. </param>
        </member>
        <member name="M:CxCore.cxcore.CvRedirectError(CxCore.cxcore.OnErrorCallback)">
            <summary>
            Sets a new error handler
            </summary>
            <param name="on_error">on_error</param>
        </member>
        <member name="M:CxCore.cxcore.CvAlloc(System.Int32)">
            <summary>
            Allocates memory buffer
            </summary>
            <param name="size">Buffer size in bytes. </param>
        </member>
        <member name="M:CxCore.cxcore.CvFree(System.IntPtr@)">
            <summary>
            Deallocates memory buffer
            </summary>
            <param name="arr">arr</param>
        </member>
        <member name="M:CxCore.cxcore.CvGetTickCount">
            <summary>
            Returns number of tics
            </summary>
        </member>
        <member name="M:CxCore.cxcore.CvGetTickFrequency">
            <summary>
            Returns number of tics per microsecond
            </summary>
        </member>
        <member name="M:CxCore.cxcore.CvRegisterModule(CxCore.CvModuleInfo@)">
            <summary>
            Registers another module
            </summary>
            <param name="module_info">Information about the module. </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetModuleInfo(System.String,System.Text.StringBuilder@)">
            <summary>
            Retrieves information about the registered module(s) and plugins
            </summary>
            <param name="module_name">Name of the module of interest, or NULL, which means all the modules. </param>
            <param name="loaded_addon_plugins">The list of names and versions of the optimized plugins that CXCORE was        able to find and load. </param>
        </member>
        <member name="M:CxCore.cxcore.CvUseOptimized(System.Int32)">
            <summary>
            Switches between optimized/non-optimized modes
            </summary>
            <param name="on_off">Use optimized (&lt;&gt;0) or not (0). </param>
        </member>
        <member name="M:CxCore.cxcore.CvGetNumThreads">
            <summary>
            Returns the current number of threads used
            </summary>
        </member>
        <member name="M:CxCore.cxcore.CvSetNumThreads(System.Int32)">
            <summary>
            Sets the number of threads
            </summary>
            <param name="threads">The number of threads. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSetNumThreads">
            <summary>
            Sets the number of threads
            </summary>
        </member>
        <member name="M:CxCore.cxcore.CvGetThreadNum">
            <summary>
            Returns index of the current thread
            </summary>
        </member>
        <member name="M:CxCore.cxcore.CV_RGB(System.Int32,System.Int32,System.Int32)">
            <summary>
            Convert RGB values to scalar
            </summary>
            <param name="r">Red</param>
            <param name="g">Green</param>
            <param name="b">Blue</param>
        </member>
        <member name="M:CxCore.cxcore.CvDecRefData(CxCore.CvMat@)">
            <summary>
            CvDecRefData
            </summary>
            <param name="arr">Input Array</param>
        </member>
        <member name="M:CxCore.cxcore.CvDecRefData(CxCore.CvMatND@)">
            <summary>
            CvDecRefData
            </summary>
            <param name="arr">Input Array</param>
        </member>
        <member name="M:CxCore.cxcore.CvIncRefData(CxCore.CvMat@)">
            <summary>
            CvIncRefData
            </summary>
            <param name="mat">Input Array</param>
        </member>
        <member name="M:CxCore.cxcore.CvIncRefData(CxCore.CvMatND@)">
            <summary>
            CvIncRefData
            </summary>
            <param name="mat">Input Array</param>
        </member>
        <member name="M:CxCore.cxcore.CvGetRow(CxCore.IplImage@,CxCore.CvMat@,System.Int32)">
            <summary>
            Get a single Row from Array
            </summary>
            <param name="arr">Input Array</param>
            <param name="submat">Output Row</param>
            <param name="row">index of row</param>
        </member>
        <member name="M:CxCore.cxcore.CvGetRow(CxCore.CvMat@,CxCore.CvMat@,System.Int32)">
            <summary>
            Get a single Row from Array
            </summary>
            <param name="arr">Input Array</param>
            <param name="submat">Output Row</param>
            <param name="row">index of row</param>
        </member>
        <member name="M:CxCore.cxcore.CvGetRow(CxCore.CvMatND@,CxCore.CvMat@,System.Int32)">
            <summary>
            Get a single Row from Array
            </summary>
            <param name="arr">Input Array</param>
            <param name="submat">Output Row</param>
            <param name="row">index of row</param>
        </member>
        <member name="M:CxCore.cxcore.CvGetRow(CxCore.CvSeq@,CxCore.CvMat@,System.Int32)">
            <summary>
            Get a single Row from Array
            </summary>
            <param name="arr">Input Array</param>
            <param name="submat">Output Row</param>
            <param name="row">index of row</param>
        </member>
        <member name="M:CxCore.cxcore.CvGetCol(CxCore.IplImage@,CxCore.CvMat@,System.Int32)">
            <summary>
            Get a single Column from Array
            </summary>
            <param name="arr">Input Array</param>
            <param name="submat">Output Column</param>
            <param name="col">index of Column</param>
        </member>
        <member name="M:CxCore.cxcore.CvGetCol(CxCore.CvMat@,CxCore.CvMat@,System.Int32)">
            <summary>
            Get a single Column from Array
            </summary>
            <param name="arr">Input Array</param>
            <param name="submat">Output Column</param>
            <param name="col">index of Column</param>
        </member>
        <member name="M:CxCore.cxcore.CvGetCol(CxCore.CvMatND@,CxCore.CvMat@,System.Int32)">
            <summary>
            Get a single Column from Array
            </summary>
            <param name="arr">Input Array</param>
            <param name="submat">Output Column</param>
            <param name="col">index of Column</param>
        </member>
        <member name="M:CxCore.cxcore.CvGetCol(CxCore.CvSeq@,CxCore.CvMat@,System.Int32)">
            <summary>
            Get a single Column from Array
            </summary>
            <param name="arr">Input Array</param>
            <param name="submat">Output Column</param>
            <param name="col">index of Column</param>
        </member>
        <member name="M:CxCore.cxcore.CvReleaseMatND(CxCore.CvMatND@)">
            <summary>
            Release Math ND
            </summary>
            <param name="mat">Array to release.</param>
        </member>
        <member name="M:CxCore.cxcore.CvGetNextSparseNode(CxCore.CvSparseMatIterator@)">
            <summary>
            Returns next Sparse node in a chain
            </summary>
            <param name="mat_iterator">Iterator</param>
        </member>
        <member name="M:CxCore.cxcore.CvReshapeND(CxCore.CvMat@,CxCore.CvMat@,System.Int32,System.Int32,System.Int32[])">
            <summary>
            Reshapes Array
            </summary>
            <param name="arr">Input array. </param>
            <param name="header">Size of output header to distinguish between IplImage, CvMat and CvMatND output headers. </param>
            <param name="new_cn">New number of channels. new_cn = 0 means that number of channels remains unchanged. </param>
            <param name="new_dims">New number of dimensions. new_dims = 0 means that number of dimensions remains the same. </param>
            <param name="new_sizes">Array of new dimension sizes. Only new_dims-1 values are used, because the total number of elements must remain the same. Thus, if new_dims = 1, new_sizes array is not used </param>
        </member>
        <member name="M:CxCore.cxcore.CvConvert(CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Converts one array to another with scale 1 and shift 0
            </summary>
            <param name="src">Input Array</param>
            <param name="dst">Dest Array</param>
        </member>
        <member name="M:CxCore.cxcore.CvSubS(CxCore.IplImage@,CxCore.CvScalar,CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Computes difference between array and scalar
            </summary>
            <param name="src">The source array. </param>
            <param name="value">Subtracted scalar. </param>
            <param name="dst">The destination array. </param>
            <param name="mask">Operation mask, 8-bit single channel array; specifies elements of destination array to be changed. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSubS(CxCore.IplImage@,CxCore.CvScalar,CxCore.IplImage@)">
            <summary>
            Computes difference between array and scalar
            </summary>
            <param name="src">The source array. </param>
            <param name="value">Subtracted scalar. </param>
            <param name="dst">The destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSubS(CxCore.CvMat@,CxCore.CvScalar,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Computes difference between array and scalar
            </summary>
            <param name="src">The source array. </param>
            <param name="value">Subtracted scalar. </param>
            <param name="dst">The destination array. </param>
            <param name="mask">Operation mask, 8-bit single channel array; specifies elements of destination array to be changed. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSubS(CxCore.CvMat@,CxCore.CvScalar,CxCore.CvMat@)">
            <summary>
            Computes difference between array and scalar
            </summary>
            <param name="src">The source array. </param>
            <param name="value">Subtracted scalar. </param>
            <param name="dst">The destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSubS(CxCore.CvSeq@,CxCore.CvScalar,CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Computes difference between array and scalar
            </summary>
            <param name="src">The source array. </param>
            <param name="value">Subtracted scalar. </param>
            <param name="dst">The destination array. </param>
            <param name="mask">Operation mask, 8-bit single channel array; specifies elements of destination array to be changed. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSubS(CxCore.CvSeq@,CxCore.CvScalar,CxCore.CvSeq@)">
            <summary>
            Computes difference between array and scalar
            </summary>
            <param name="src">The source array. </param>
            <param name="value">Subtracted scalar. </param>
            <param name="dst">The destination array. </param>
        </member>
        <member name="M:CxCore.cxcore.CvMatMulAdd(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Performs generalized matrix multiplication and Addition
            </summary>
            <param name="src1">src 1</param>
            <param name="src2">src 2</param>
            <param name="src3">src 3</param>
            <param name="dst">dst</param>
        </member>
        <member name="M:CxCore.cxcore.CvMatMulAdd(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Performs generalized matrix multiplication and Addition
            </summary>
            <param name="src1">src 1</param>
            <param name="src2">src 2</param>
            <param name="src3">src 3</param>
            <param name="dst">dst</param>
        </member>
        <member name="M:CxCore.cxcore.CvMatMulAdd(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Performs generalized matrix multiplication and Addition
            </summary>
            <param name="src1">src 1</param>
            <param name="src2">src 2</param>
            <param name="src3">src 3</param>
            <param name="dst">dst</param>
        </member>
        <member name="M:CxCore.cxcore.CvMatMulAdd(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Performs generalized matrix multiplication and Addition
            </summary>
            <param name="src1">src 1</param>
            <param name="src2">src 2</param>
            <param name="dst">dst</param>
        </member>
        <member name="M:CxCore.cxcore.CvMatMulAdd(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Performs generalized matrix multiplication and Addition
            </summary>
            <param name="src1">src 1</param>
            <param name="src2">src 2</param>
            <param name="dst">dst</param>
        </member>
        <member name="M:CxCore.cxcore.CvMatMulAdd(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Performs generalized matrix multiplication and Addition
            </summary>
            <param name="src1">src 1</param>
            <param name="src2">src 2</param>
            <param name="dst">dst</param>
        </member>
        <member name="M:CxCore.cxcore.CvMatMul(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Performs generalized matrix multiplication and Addition
            </summary>
            <param name="src1">src 1</param>
            <param name="src2">src 2</param>
            <param name="dst">dst</param>
        </member>
        <member name="M:CxCore.cxcore.CvMatMul(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Performs generalized matrix multiplication and Addition
            </summary>
            <param name="src1">src 1</param>
            <param name="src2">src 2</param>
            <param name="dst">dst</param>
        </member>
        <member name="M:CxCore.cxcore.CvMatMul(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Performs generalized matrix multiplication and Addition
            </summary>
            <param name="src1">src 1</param>
            <param name="src2">src 2</param>
            <param name="dst">dst</param>
        </member>
        <member name="M:CxCore.cxcore.CvCloneSeq(CxCore.CvSeq@,CxCore.CvMemStorage@)">
            <summary>
            Creates a copy of sequence
            </summary>
            <param name="seq">Sequence. </param>
            <param name="storage">The destination storage to keep the new sequence header and the copied data if any. If it is NULL, the function uses the storage containing the input sequence. </param>
        </member>
        <member name="M:CxCore.cxcore.CvCloneSeq(CxCore.CvSeq@)">
            <summary>
            Creates a copy of sequence
            </summary>
            <param name="seq">Sequence. </param>
        </member>
        <member name="M:CxCore.cxcore.CvSetNew(CxCore.CvSet@)">
            <summary>
            The Function has been added for Compatibility (calls CvSetAdd)
            </summary>
            <param name="set_header">Set Header</param>
        </member>
        <member name="M:CxCore.cxcore.CvSetRemoveByPtr">
            <summary>
            Removes set element given its pointer (Actual not Implemented, dont use.)
            </summary>
        </member>
        <member name="M:CxCore.cxcore.CvGetSetElem(CxCore.CvSet@,System.Int32)">
            <summary>
            Returns a set element by index. If the element doesn't belong to the set,
            NULL is returned
            </summary>
            <param name="set_header">Array Header</param>
            <param name="index">Index of element</param>
        </member>
        <member name="M:CxCore.cxcore.CvGetSetElem(CxCore.CvGraph@,System.Int32)">
            <summary>
            Returns a set element by index. If the element doesn't belong to the set, NULL is returned.
            </summary>
            <param name="set_header">Graph Header</param>
            <param name="index">Index of Element to be returned.</param>
        </member>
        <member name="M:CxCore.cxcore.CvGetGraphVtx(CxCore.CvGraph@,System.Int32)">
            <summary>
            Retrieves graph vertex by given index
            </summary>
            <param name="graph">Graph</param>
            <param name="idx">Index</param>
        </member>
        <member name="M:CxCore.cxcore.CvGraphVtxIdx(CxCore.CvGraph@,CxCore.CvGraphVtx@)">
            <summary>
            Retrieves index of a graph vertex given its pointer
            </summary>
            <param name="graph">Graph</param>
            <param name="vtx">Vertex</param>
        </member>
        <member name="M:CxCore.cxcore.CvGraphEdgeIdx(CxCore.CvGraph@,CxCore.CvGraphEdge@)">
            <summary>
            Retrieves index of a graph edge given its pointer
            </summary>
            <param name="graph">Graph</param>
            <param name="edge">Edge</param>
        </member>
        <member name="M:CxCore.cxcore.CvGraphGetVtxCount(CxCore.CvGraph@)">
            <summary>
            Number of vertices in the Graph
            </summary>
            <param name="graph">Graph</param>
        </member>
        <member name="M:CxCore.cxcore.CvGraphGetEdgeCount(CxCore.CvGraph@)">
            <summary>
            Returns Edge Count
            </summary>
            <param name="graph">Graph</param>
        </member>
        <member name="M:CxCore.cxcore.CV_NEXT_LINE_POINT(CxCore.CvLineIterator@)">
            <summary>
             Moves iterator to the next line point
            </summary>
            <param name="line_iterator">Line Iterator</param>
        </member>
        <member name="M:CxCore.cxcore.CV_LINE_POINT(CxCore.CvLineIterator@,CxCore.IplImage@)">
            <summary>
            No Comment available. Pls refer to openCV docu.
            </summary>
            <param name="line_iterator">Line Iterator</param>
            <param name="img">Image</param>
        </member>
        <member name="M:CxCore.cxcore.CvFont(System.Double,System.Int32)">
            <summary>
            Creates new Font
            </summary>
            <param name="scale">Scale</param>
            <param name="thickness">Thickness</param>
        </member>
        <member name="M:CxCore.cxcore.CvFont(System.Double)">
            <summary>
            Creates new Font
            </summary>
            <param name="scale">Scale</param>
        </member>
        <member name="T:CxCore.cxcore.OnCompareCallback">
            <summary>
            Compare Function
            </summary>
            <param name="a">Value 1 to compare</param>
            <param name="b">Value to compare to.</param>
            <param name="userdata">No Info</param>
            <returns>The result of the comparison. 0 for equal.</returns>
        </member>
        <member name="T:CxCore.cxcore.OnErrorCallback">
            <summary>
            On Error CallBack
            </summary>
            <param name="status">Error Status.</param>
            <param name="func_name">Error Handler Function.</param>
            <param name="err_msg">Error Message.</param>
            <param name="file_name">The Name of the file where the error occured.</param>
            <param name="line">The line in the file where the error occured.</param>
            <returns>Status</returns>
        </member>
        <member name="T:CvAux.CvImgObsInfo">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
        </member>
        <member name="F:CvAux.CvImgObsInfo.obs_x">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvImgObsInfo.obs_y">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvImgObsInfo.obs_size">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvImgObsInfo.obs">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvImgObsInfo.state">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvImgObsInfo.mix">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvImgObsInfo.ptr">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="T:CvAux.CvEHMMState">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
        </member>
        <member name="F:CvAux.CvEHMMState.num_mix">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvEHMMState.mu">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvEHMMState.inv_var">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvEHMMState.log_var_val">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvEHMMState.weight">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvEHMMState.ptr">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="T:CvAux.CvEHMM">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
        </member>
        <member name="F:CvAux.CvEHMM.level">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvEHMM.num_states">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvEHMM.transP">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvEHMM.obsProb">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvEHMM.u">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvEHMM.ptr">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="T:CvAux.CvGraphWeightedVtx">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
        </member>
        <member name="F:CvAux.CvGraphWeightedVtx.flags">
            <summary>
            vertex flags
            </summary>
        </member>
        <member name="F:CvAux.CvGraphWeightedVtx.first">
            <summary>
            the first incident edge
            </summary>
        </member>
        <member name="F:CvAux.CvGraphWeightedVtx.pt">
            <summary>
            Internal data pointer
            </summary>
        </member>
        <member name="F:CvAux.CvGraphWeightedVtx.weight">
            <summary>
            The wight of the vertex.
            </summary>
        </member>
        <member name="F:CvAux.CvGraphWeightedVtx.ptr">
            <summary>
            this pointer
            </summary>
        </member>
        <member name="T:CvAux.CvGraphWeightedEdge">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
        </member>
        <member name="F:CvAux.CvGraphWeightedEdge.flags">
            <summary>
            edge flags
            </summary>
        </member>
        <member name="F:CvAux.CvGraphWeightedEdge.weight">
            <summary>
            edge weight
            </summary>
        </member>
        <member name="F:CvAux.CvGraphWeightedEdge.next">
            <summary>
            the next edges in the incidence lists for staring (0) and ending (1) vertices
            </summary>
        </member>
        <member name="F:CvAux.CvGraphWeightedEdge.vtx">
            <summary>
            the starting (0) and ending (1) vertices
            </summary>
        </member>
        <member name="F:CvAux.CvGraphWeightedEdge.ptr">
            <summary>
            this pointer
            </summary>
        </member>
        <member name="T:CvAux.CvGraphWeightType">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
        </member>
        <member name="F:CvAux.CvGraphWeightType.CV_NOT_WEIGHTED">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvGraphWeightType.CV_WEIGHTED_VTX">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvGraphWeightType.CV_WEIGHTED_EDGE">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvGraphWeightType.CV_WEIGHTED_ALL">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="T:CvAux.CvCliqueFinder">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
        </member>
        <member name="F:CvAux.CvCliqueFinder.graph">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvCliqueFinder.adj_matr">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvCliqueFinder.N">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvCliqueFinder.k">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvCliqueFinder.current_comp">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvCliqueFinder.All">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvCliqueFinder.ne">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvCliqueFinder.ce">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvCliqueFinder.fixp">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvCliqueFinder.nod">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvCliqueFinder.s">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvCliqueFinder.status">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvCliqueFinder.best_score">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvCliqueFinder.weighted">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvCliqueFinder.weighted_edges">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvCliqueFinder.best_weight">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvCliqueFinder.edge_weights">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvCliqueFinder.vertex_weights">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvCliqueFinder.cur_weight">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvCliqueFinder.cand_weight">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvCliqueFinder.ptr">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="T:CvAux.CvStereoLineCoeff">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
        </member>
        <member name="F:CvAux.CvStereoLineCoeff.Xcoef">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvStereoLineCoeff.XcoefA">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvStereoLineCoeff.XcoefB">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvStereoLineCoeff.XcoefAB">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvStereoLineCoeff.Ycoef">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvStereoLineCoeff.YcoefA">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvStereoLineCoeff.YcoefB">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvStereoLineCoeff.YcoefAB">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvStereoLineCoeff.Zcoef">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvStereoLineCoeff.ZcoefA">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvStereoLineCoeff.ZcoefB">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvStereoLineCoeff.ZcoefAB">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvStereoLineCoeff.ptr">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="T:CvAux.CvCamera">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
        </member>
        <member name="F:CvAux.CvCamera.imgSize">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvCamera.matrix">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvCamera.distortion">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvCamera.rotMatr">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvCamera.transVect">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvCamera.ptr">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="T:CvAux.CvStereoCamera">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
        </member>
        <member name="F:CvAux.CvStereoCamera.camera">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvStereoCamera.fundMatr">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvStereoCamera.epipole">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvStereoCamera.quad">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvStereoCamera.coeffs">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvStereoCamera.border">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvStereoCamera.warpSize">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvStereoCamera.lineCoeffs">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvStereoCamera.needSwapCameras">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvStereoCamera.rotMatrix">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvStereoCamera.transVector">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvStereoCamera.ptr">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="T:CvAux.CvContourOrientation">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
        </member>
        <member name="F:CvAux.CvContourOrientation.egvals">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvContourOrientation.egvects">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvContourOrientation.max">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvContourOrientation.min">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvContourOrientation.imax">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvContourOrientation.imin">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvContourOrientation.ptr">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="T:CvAux.CvGLCM">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
        </member>
        <member name="F:CvAux.CvGLCM.ptr">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="T:CvAux.CvFaceTracker">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
        </member>
        <member name="F:CvAux.CvFaceTracker.ptr">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="T:CvAux.CvFace">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
        </member>
        <member name="F:CvAux.CvFace.MouthRect">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvFace.LeftEyeRect">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvFace.RightEyeRect">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvFace.ptr">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="T:CvAux.Cv3dTracker2dTrackedObject">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
        </member>
        <member name="F:CvAux.Cv3dTracker2dTrackedObject.id">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.Cv3dTracker2dTrackedObject.p">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:CvAux.Cv3dTracker2dTrackedObject.#ctor(System.Int32,CxCore.CvPoint2D32f)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="id">No comment available for this member. Please check the openCV documenation.</param>
            <param name="p">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="T:CvAux.Cv3dTrackerTrackedObject">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
        </member>
        <member name="F:CvAux.Cv3dTrackerTrackedObject.id">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.Cv3dTrackerTrackedObject.p">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.Cv3dTrackerTrackedObject.ptr">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="T:CvAux.Cv3dTrackerCameraInfo">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
        </member>
        <member name="F:CvAux.Cv3dTrackerCameraInfo.valid">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.Cv3dTrackerCameraInfo.mat">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.Cv3dTrackerCameraInfo.principal_point">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.Cv3dTrackerCameraInfo.ptr">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="T:CvAux.Cv3dTrackerCameraIntrinsics">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
        </member>
        <member name="F:CvAux.Cv3dTrackerCameraIntrinsics.principal_point">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.Cv3dTrackerCameraIntrinsics.focal_length">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.Cv3dTrackerCameraIntrinsics.distortion">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.Cv3dTrackerCameraIntrinsics.ptr">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="T:CvAux.CvVoronoiSite2D">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
        </member>
        <member name="F:CvAux.CvVoronoiSite2D.node">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvVoronoiSite2D.edge">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvVoronoiSite2D.next">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:CvAux.CvVoronoiSite2D.GetHashCode">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:CvAux.CvVoronoiSite2D.Equals(System.Object)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="obj">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.CvVoronoiSite2D.Node(System.Int32)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="idx">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.CvVoronoiSite2D.Edge(System.Int32)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="idx">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.CvVoronoiSite2D.Next(System.Int32)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="idx">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="T:CvAux.CvVoronoiEdge2D">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
        </member>
        <member name="F:CvAux.CvVoronoiEdge2D.node">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvVoronoiEdge2D.site">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvVoronoiEdge2D.next">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:CvAux.CvVoronoiEdge2D.Node(System.Int32)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="idx">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.CvVoronoiEdge2D.Site(System.Int32)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="idx">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.CvVoronoiEdge2D.Next(System.Int32)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="idx">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="T:CvAux.CvVoronoiNode2D">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
        </member>
        <member name="F:CvAux.CvVoronoiNode2D.next_free">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvVoronoiNode2D.pt">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvVoronoiNode2D.ptr">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="T:CvAux.CvVoronoiDiagram2D">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
        </member>
        <member name="F:CvAux.CvVoronoiDiagram2D.flags">
            <summary>
            micsellaneous flags
            </summary>
        </member>
        <member name="F:CvAux.CvVoronoiDiagram2D.header_size">
            <summary>
            size of sequence header
            </summary>
        </member>
        <member name="F:CvAux.CvVoronoiDiagram2D.h_prev">
            <summary>
            previous sequence
            </summary>
        </member>
        <member name="F:CvAux.CvVoronoiDiagram2D.h_next">
            <summary>
            next sequence
            </summary>
        </member>
        <member name="F:CvAux.CvVoronoiDiagram2D.v_prev">
            <summary>
            2nd previous sequence
            </summary>
        </member>
        <member name="F:CvAux.CvVoronoiDiagram2D.v_next">
            <summary>
            2nd next sequence
            </summary>
        </member>
        <member name="F:CvAux.CvVoronoiDiagram2D.total">
            <summary>
            total number of elements
            </summary>
        </member>
        <member name="F:CvAux.CvVoronoiDiagram2D.elem_size">
            <summary>
            size of sequence element in bytes
            </summary>
        </member>
        <member name="F:CvAux.CvVoronoiDiagram2D.block_max">
            <summary>
            maximal bound of the last block
            </summary>
        </member>
        <member name="F:CvAux.CvVoronoiDiagram2D.pt">
            <summary>
            current write pointer
            </summary>
        </member>
        <member name="F:CvAux.CvVoronoiDiagram2D.delta_elems">
            <summary>
            how many elements allocated when the seq grows
            </summary>
        </member>
        <member name="F:CvAux.CvVoronoiDiagram2D.storage">
            <summary>
            where the seq is stored
            </summary>
        </member>
        <member name="F:CvAux.CvVoronoiDiagram2D.free_blocks">
            <summary>
            free blocks list
            </summary>
        </member>
        <member name="F:CvAux.CvVoronoiDiagram2D.first">
            <summary>
            pointer to the first sequence block
            </summary>
        </member>
        <member name="F:CvAux.CvVoronoiDiagram2D.free_elems">
            <summary>
            internal use
            </summary>
        </member>
        <member name="F:CvAux.CvVoronoiDiagram2D.active_count">
            <summary>
            internal use
            </summary>
        </member>
        <member name="F:CvAux.CvVoronoiDiagram2D.edges">
            <summary>
            Set of edges
            </summary>
        </member>
        <member name="F:CvAux.CvVoronoiDiagram2D.sites">
            <summary>
            Set of Sites
            </summary>
        </member>
        <member name="F:CvAux.CvVoronoiDiagram2D.ptr">
            <summary>
            this pointer
            </summary>
        </member>
        <member name="T:CvAux.CvLCMEdge">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
        </member>
        <member name="F:CvAux.CvLCMEdge.flags">
            <summary>
            edge flags
            </summary>
        </member>
        <member name="F:CvAux.CvLCMEdge.weight">
            <summary>
            edge weight
            </summary>
        </member>
        <member name="F:CvAux.CvLCMEdge.next">
            <summary>
            the next edges in the incidence lists for staring (0) and ending (1) vertices
            </summary>
        </member>
        <member name="F:CvAux.CvLCMEdge.vtx">
            <summary>
            the starting (0) and ending (1) vertices
            </summary>
        </member>
        <member name="F:CvAux.CvLCMEdge.chain">
            <summary>
            Not available.
            </summary>
        </member>
        <member name="F:CvAux.CvLCMEdge.width">
            <summary>
            Not available.
            </summary>
        </member>
        <member name="F:CvAux.CvLCMEdge.index1">
            <summary>
            Not available.
            </summary>
        </member>
        <member name="F:CvAux.CvLCMEdge.index2">
            <summary>
            Not available.
            </summary>
        </member>
        <member name="F:CvAux.CvLCMEdge.ptr">
            <summary>
            this pointer
            </summary>
        </member>
        <member name="T:CvAux.CvLCMNode">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
        </member>
        <member name="F:CvAux.CvLCMNode.flags">
            <summary>
            vertex flags
            </summary>
        </member>
        <member name="F:CvAux.CvLCMNode.first">
            <summary>
            the first incident edge
            </summary>
        </member>
        <member name="F:CvAux.CvLCMNode.pt">
            <summary>
            Internal data pointer
            </summary>
        </member>
        <member name="F:CvAux.CvLCMNode.ptr">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="T:CvAux.CvBGStatModel">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
        </member>
        <member name="F:CvAux.CvBGStatModel.type">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvBGStatModel.release">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvBGStatModel.update">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvBGStatModel.background">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvBGStatModel.foreground">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvBGStatModel.layers">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvBGStatModel.layer_count">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvBGStatModel.storage">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvBGStatModel.foreground_regions">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvBGStatModel.ptr">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="T:CvAux.CvFGDStatModelParams">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
        </member>
        <member name="F:CvAux.CvFGDStatModelParams.Lc">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvFGDStatModelParams.N1c">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvFGDStatModelParams.N2c">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvFGDStatModelParams.Lcc">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvFGDStatModelParams.N1cc">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvFGDStatModelParams.N2cc">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvFGDStatModelParams.is_obj_without_holes">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvFGDStatModelParams.perform_morphing">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvFGDStatModelParams.alpha1">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvFGDStatModelParams.alpha2">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvFGDStatModelParams.alpha3">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvFGDStatModelParams.delta">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvFGDStatModelParams.T">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvFGDStatModelParams.minArea">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvFGDStatModelParams.ptr">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="T:CvAux.CvBGPixelCStatTable">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
        </member>
        <member name="F:CvAux.CvBGPixelCStatTable.Pv">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvBGPixelCStatTable.Pvb">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvBGPixelCStatTable.v">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvBGPixelCStatTable.ptr">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="T:CvAux.CvBGPixelCCStatTable">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
        </member>
        <member name="F:CvAux.CvBGPixelCCStatTable.Pv">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvBGPixelCCStatTable.Pvb">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvBGPixelCCStatTable.v">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvBGPixelCCStatTable.ptr">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="T:CvAux.CvBGPixelStat">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
        </member>
        <member name="F:CvAux.CvBGPixelStat.Pbc">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvBGPixelStat.Pbcc">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvBGPixelStat.ctable">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvBGPixelStat.cctable">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvBGPixelStat.is_trained_st_model">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvBGPixelStat.is_trained_dyn_model">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvBGPixelStat.ptr">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="T:CvAux.CvFGDStatModel">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
        </member>
        <member name="F:CvAux.CvFGDStatModel.type">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvFGDStatModel.release">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvFGDStatModel.update">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvFGDStatModel.background">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvFGDStatModel.foreground">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvFGDStatModel.layers">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvFGDStatModel.layer_count">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvFGDStatModel.storage">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvFGDStatModel.foreground_regions">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvFGDStatModel.pixel_stat">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvFGDStatModel.Ftd">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvFGDStatModel.Fbd">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvFGDStatModel.prev_frame">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvFGDStatModel._params">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvFGDStatModel.ptr">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="T:CvAux.CvGaussBGStatModelParams">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
        </member>
        <member name="F:CvAux.CvGaussBGStatModelParams.win_size">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvGaussBGStatModelParams.n_gauss">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvGaussBGStatModelParams.bg_threshold">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvGaussBGStatModelParams.std_threshold">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvGaussBGStatModelParams.minArea">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvGaussBGStatModelParams.weight_init">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvGaussBGStatModelParams.variance_init">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvGaussBGStatModelParams.ptr">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="T:CvAux.CvGaussBGValues">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
        </member>
        <member name="F:CvAux.CvGaussBGValues.match_sum">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvGaussBGValues.weight">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvGaussBGValues.variance">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvGaussBGValues.mean">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvGaussBGValues.ptr">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="T:CvAux.CvGaussBGPoint">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
        </member>
        <member name="F:CvAux.CvGaussBGPoint.g_values">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvGaussBGPoint.ptr">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="T:CvAux.CvGaussBGModel">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
        </member>
        <member name="F:CvAux.CvGaussBGModel._params">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvGaussBGModel.g_point">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvGaussBGModel.countFrames">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvGaussBGModel.ptr">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="T:CvAux.CV_FACE_ELEMENTS">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
        </member>
        <member name="F:CvAux.CV_FACE_ELEMENTS.CV_FACE_MOUTH">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CV_FACE_ELEMENTS.CV_FACE_LEFT_EYE">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CV_FACE_ELEMENTS.CV_FACE_RIGHT_EYE">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="T:CvAux.CvLeeParameters">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
        </member>
        <member name="F:CvAux.CvLeeParameters.CV_LEE_INT">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvLeeParameters.CV_LEE_FLOAT">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvLeeParameters.CV_LEE_DOUBLE">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvLeeParameters.CV_LEE_AUTO">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvLeeParameters.CV_LEE_ERODE">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvLeeParameters.CV_LEE_ZOOM">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.CvLeeParameters.CV_LEE_NON">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="T:CvAux.cvaux">
            <summary>
            The openCV wrapper class
            </summary>
        </member>
        <member name="F:CvAux.cvaux.CV_EIGOBJ_NO_CALLBACK">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.cvaux.CV_EIGOBJ_INPUT_CALLBACK">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.cvaux.CV_EIGOBJ_OUTPUT_CALLBACK">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.cvaux.CV_EIGOBJ_BOTH_CALLBACK">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.cvaux.CLIQUE_TIME_OFF">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.cvaux.CLIQUE_FOUND">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.cvaux.CLIQUE_END">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.cvaux.CV_UNDEF_SC_PARAM">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.cvaux.CV_IDP_BIRCHFIELD_PARAM1">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.cvaux.CV_IDP_BIRCHFIELD_PARAM2">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.cvaux.CV_IDP_BIRCHFIELD_PARAM3">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.cvaux.CV_IDP_BIRCHFIELD_PARAM4">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.cvaux.CV_IDP_BIRCHFIELD_PARAM5">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.cvaux.CV_DISPARITY_BIRCHFIELD">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.cvaux.CV_CAMERA_TO_WARP">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.cvaux.CV_WARP_TO_CAMERA">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.cvaux.CV_GLCM_OPTIMIZATION_NONE">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.cvaux.CV_GLCM_OPTIMIZATION_LUT">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.cvaux.CV_GLCM_OPTIMIZATION_HISTOGRAM">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.cvaux.CV_GLCMDESC_OPTIMIZATION_ALLOWDOUBLENEST">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.cvaux.CV_GLCMDESC_OPTIMIZATION_ALLOWTRIPLENEST">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.cvaux.CV_GLCMDESC_OPTIMIZATION_HISTOGRAM">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.cvaux.CV_GLCMDESC_ENTROPY">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.cvaux.CV_GLCMDESC_ENERGY">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.cvaux.CV_GLCMDESC_HOMOGENITY">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.cvaux.CV_GLCMDESC_CONTRAST">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.cvaux.CV_GLCMDESC_CLUSTERTENDENCY">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.cvaux.CV_GLCMDESC_CLUSTERSHADE">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.cvaux.CV_GLCMDESC_CORRELATION">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.cvaux.CV_GLCMDESC_CORRELATIONINFO1">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.cvaux.CV_GLCMDESC_CORRELATIONINFO2">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.cvaux.CV_GLCMDESC_MAXIMUMPROBABILITY">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.cvaux.CV_GLCM_ALL">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.cvaux.CV_GLCM_GLCM">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.cvaux.CV_GLCM_DESC">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.cvaux.CV_NUM_FACE_ELEMENTS">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.cvaux.CV_BG_MODEL_FGD">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.cvaux.CV_BG_MODEL_MOG">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.cvaux.CV_BG_MODEL_FGD_SIMPLE">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.cvaux.CV_BGFG_FGD_LC">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.cvaux.CV_BGFG_FGD_N1C">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.cvaux.CV_BGFG_FGD_N2C">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.cvaux.CV_BGFG_FGD_LCC">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.cvaux.CV_BGFG_FGD_N1CC">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.cvaux.CV_BGFG_FGD_N2CC">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.cvaux.CV_BGFG_FGD_ALPHA_1">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.cvaux.CV_BGFG_FGD_ALPHA_2">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.cvaux.CV_BGFG_FGD_ALPHA_3">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.cvaux.CV_BGFG_FGD_DELTA">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.cvaux.CV_BGFG_FGD_T">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.cvaux.CV_BGFG_FGD_MINAREA">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.cvaux.CV_BGFG_FGD_BG_UPDATE_TRESH">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.cvaux.CV_BGFG_MOG_MAX_NGAUSSIANS">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.cvaux.CV_BGFG_MOG_BACKGROUND_THRESHOLD">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.cvaux.CV_BGFG_MOG_STD_THRESHOLD">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.cvaux.CV_BGFG_MOG_WINDOW_SIZE">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.cvaux.CV_BGFG_MOG_NGAUSSIANS">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.cvaux.CV_BGFG_MOG_WEIGHT_INIT">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.cvaux.CV_BGFG_MOG_SIGMA_INIT">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.cvaux.CV_BGFG_MOG_MINAREA">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:CvAux.cvaux.CV_BGFG_MOG_NCOLORS">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:CvAux.cvaux.CvSegmentImage(CxCore.IplImage@,CxCore.IplImage@,System.Double,System.Double,CxCore.CvMemStorage@)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="srcarr">No comment available for this member. Please check the openCV documenation.</param>
            <param name="dstarr">No comment available for this member. Please check the openCV documenation.</param>
            <param name="canny_threshold">No comment available for this member. Please check the openCV documenation.</param>
            <param name="ffill_threshold">No comment available for this member. Please check the openCV documenation.</param>
            <param name="storage">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.CvSegmentImage(CxCore.CvMat@,CxCore.CvMat@,System.Double,System.Double,CxCore.CvMemStorage@)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="srcarr">No comment available for this member. Please check the openCV documenation.</param>
            <param name="dstarr">No comment available for this member. Please check the openCV documenation.</param>
            <param name="canny_threshold">No comment available for this member. Please check the openCV documenation.</param>
            <param name="ffill_threshold">No comment available for this member. Please check the openCV documenation.</param>
            <param name="storage">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.CvSegmentImage(CxCore.CvMatND@,CxCore.CvMatND@,System.Double,System.Double,CxCore.CvMemStorage@)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="srcarr">No comment available for this member. Please check the openCV documenation.</param>
            <param name="dstarr">No comment available for this member. Please check the openCV documenation.</param>
            <param name="canny_threshold">No comment available for this member. Please check the openCV documenation.</param>
            <param name="ffill_threshold">No comment available for this member. Please check the openCV documenation.</param>
            <param name="storage">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.CvSegmentImage(CxCore.CvSeq@,CxCore.CvSeq@,System.Double,System.Double,CxCore.CvMemStorage@)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="srcarr">No comment available for this member. Please check the openCV documenation.</param>
            <param name="dstarr">No comment available for this member. Please check the openCV documenation.</param>
            <param name="canny_threshold">No comment available for this member. Please check the openCV documenation.</param>
            <param name="ffill_threshold">No comment available for this member. Please check the openCV documenation.</param>
            <param name="storage">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.CvCalcCovarMatrixEx(System.Int32,System.IntPtr,System.Int32,System.Int32,System.IntPtr,System.IntPtr,CxCore.IplImage@,System.Single[])">
            <summary>
            Calculates covariance matrix for group of input objects
            </summary>
            <param name="nObjects">No comment available for this member. Please check the openCV documenation.</param>
            <param name="input">Pointer either to the array of IplImage input objects or to the readcallback function according to the value of the parameter ioFlags . </param>
            <param name="ioFlags">Input/output flags. </param>
            <param name="ioBufSize">Input/output buffer size. </param>
            <param name="buffer">Pointer to the input/output buffer. </param>
            <param name="userData">Pointer to the structure that contains all necessary data for the </param>
            <param name="avg">Averaged object. </param>
            <param name="covarMatrix">Covariance matrix. An output parameter; must be allocated before thecall. </param>
        </member>
        <member name="M:CvAux.cvaux.CvCalcEigenObjects(System.Int32,System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.IntPtr,CxCore.CvTermCriteria@,CxCore.IplImage@,System.Single[])">
            <summary>
            Calculates orthonormal eigen basis and averaged object for group of inputobjects
            </summary>
            <param name="nObjects">Number of source objects. </param>
            <param name="input">Pointer either to the array of IplImage input objects or to the readcallback function according to the value of the parameter ioFlags . </param>
            <param name="output">Pointer either to the array of eigen objects or to the write callbackfunction according to the value of the parameter ioFlags . </param>
            <param name="ioFlags">Input/output flags. </param>
            <param name="ioBufSize">Input/output buffer size in bytes. The size is zero, if unknown. </param>
            <param name="userData">Pointer to the structure that contains all necessary data for thecallback functions. </param>
            <param name="calcLimit">Criteria that determine when to stop calculation of eigen objects. </param>
            <param name="avg">Averaged object. </param>
            <param name="eigVals">Pointer to the eigenvalues array in the descending order; may be NULL . </param>
        </member>
        <member name="M:CvAux.cvaux.CvCalcDecompCoeff(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Calculates decomposition coefficient of input object
            </summary>
            <param name="obj">Input object. </param>
            <param name="eigObj">Eigen object. </param>
            <param name="avg">Averaged object. </param>
        </member>
        <member name="M:CvAux.cvaux.CvEigenDecomposite(CxCore.IplImage@,System.Int32,System.IntPtr,System.Int32,System.IntPtr,CxCore.IplImage@,System.Single[])">
            <summary>
            Calculates all decomposition coefficients for input object
            </summary>
            <param name="obj">Input object. </param>
            <param name="nEigObjs">No comment available for this member. Please check the openCV documenation.</param>
            <param name="eigInput">Pointer either to the array of IplImage input objects or to the readcallback function according to the value of the parameter ioFlags . </param>
            <param name="ioFlags">Input/output flags. </param>
            <param name="userData">Pointer to the structure that contains all necessary data for thecallback functions. </param>
            <param name="avg">Averaged object. </param>
            <param name="coeffs">Calculated coefficients; an output parameter. </param>
        </member>
        <member name="M:CvAux.cvaux.CvEigenProjection(System.IntPtr,System.Int32,System.Int32,System.IntPtr,System.Single[],CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Calculates object projection to the eigen sub-space
            </summary>
            <param name="eigInput">No comment available for this member. Please check the openCV documenation.</param>
            <param name="nEigObjs">No comment available for this member. Please check the openCV documenation.</param>
            <param name="ioFlags">Input/output flags; see cvCalcEigenObjects . </param>
            <param name="userData">Pointer to the structure that contains all necessary data for thecallback functions. </param>
            <param name="coeffs">Previously calculated decomposition coefficients. </param>
            <param name="avg">Average vector, calculated by cvCalcEigenObjects . </param>
            <param name="proj">Projection to the eigen sub-space. </param>
        </member>
        <member name="M:CvAux.cvaux.CvCreate2DHMM(System.Int32[],System.Int32[],System.Int32)">
            <summary>
            Creates 2D embedded HMM
            </summary>
            <param name="stateNumber">Array, the first element of the which specifies the number ofsuperstates in the HMM. All subsequent elements specify the number of states inevery embedded HMM, corresponding to each superstate. So, the length of thearray is stateNumber [0]+1 . </param>
            <param name="numMix">Array with numbers of Gaussian mixture components per each internalstate. The number of elements in the array is equal to number of internal statesin the HMM, that is, superstates are not counted here. </param>
            <param name="obsSize">Size of observation vectors to be used with created HMM. </param>
        </member>
        <member name="M:CvAux.cvaux.CvRelease2DHMM(CvAux.CvEHMM@)">
            <summary>
            Releases 2D embedded HMM
            </summary>
            <param name="hmm">Address of pointer to HMM to be released. </param>
        </member>
        <member name="M:CvAux.cvaux.CV_COUNT_OBS(CxCore.CvSize,CxCore.CvSize,CxCore.CvSize,CxCore.CvSize@)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="roi">No comment available for this member. Please check the openCV documenation.</param>
            <param name="win">No comment available for this member. Please check the openCV documenation.</param>
            <param name="delta">No comment available for this member. Please check the openCV documenation.</param>
            <param name="numObs">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.CvCreateObsInfo(CxCore.CvSize,System.Int32)">
            <summary>
            Creates structure to store image observation vectors
            </summary>
            <param name="numObs">Numbers of observations in the horizontal and vertical directions. Forthe given image and scheme of extracting observations the parameter can becomputed via the macro CV_COUNT_OBS( roi, dctSize, delta, numObs ) , where roi,dctSize, delta, numObs are the pointers to structures of the type CvSize . Thepointer roi means size of roi of image observed, numObs is the output parameterof the macro. </param>
            <param name="obsSize">Size of observation vectors to be stored in the structure. </param>
        </member>
        <member name="M:CvAux.cvaux.CvReleaseObsInfo(CvAux.CvImgObsInfo@)">
            <summary>
            Releases observation vectors structure
            </summary>
            <param name="obs_info">Address of the pointer to the structure CvImgObsInfo . </param>
        </member>
        <member name="M:CvAux.cvaux.CvImgToObs_DCT(CxCore.IplImage@,System.Single[],CxCore.CvSize,CxCore.CvSize,CxCore.CvSize)">
            <summary>
            Extracts observation vectors from image
            </summary>
            <param name="arr">No comment available for this member. Please check the openCV documenation.</param>
            <param name="obs">Pointer to consequently stored observation vectors. </param>
            <param name="dctSize">Size of image blocks for which DCT (Discrete Cosine Transform)coefficients are to be computed. </param>
            <param name="obsSize">Number of the lowest DCT coefficients in the horizontal and verticaldirections to be put into the observation vector. </param>
            <param name="delta">Shift in pixels between two consecutive image blocks in the horizontal andvertical directions. </param>
        </member>
        <member name="M:CvAux.cvaux.CvUniformImgSegm(CvAux.CvImgObsInfo@,CvAux.CvEHMM@)">
            <summary>
            Performs uniform segmentation of image observations by HMM states
            </summary>
            <param name="obs_info">Observations structure. </param>
            <param name="ehmm">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.CvInitMixSegm(CvAux.CvImgObsInfo@,System.Int32,CvAux.CvEHMM@)">
            <summary>
            Segments all observations within every internal state of HMM by state mixturecomponents
            </summary>
            <param name="obs_info_array">Array of pointers to the observation structures. </param>
            <param name="num_img">Length of above array. </param>
            <param name="hmm">HMM. </param>
        </member>
        <member name="M:CvAux.cvaux.CvEstimateHMMStateParams(CvAux.CvImgObsInfo@,System.Int32,CvAux.CvEHMM@)">
            <summary>
            Estimates all parameters of every HMM state
            </summary>
            <param name="obs_info_array">Array of pointers to the observation structures. </param>
            <param name="num_img">Length of the array. </param>
            <param name="hmm">HMM. </param>
        </member>
        <member name="M:CvAux.cvaux.CvEstimateTransProb(CvAux.CvImgObsInfo@,System.Int32,CvAux.CvEHMM@)">
            <summary>
            Computes transition probability matrices for embedded HMM
            </summary>
            <param name="obs_info_array">Array of pointers to the observation structures. </param>
            <param name="num_img">Length of the above array. </param>
            <param name="hmm">HMM. </param>
        </member>
        <member name="M:CvAux.cvaux.CvEstimateObsProb(CvAux.CvImgObsInfo@,CvAux.CvEHMM@)">
            <summary>
            Computes probability of every observation of several images
            </summary>
            <param name="obs_info">Observation structure. </param>
            <param name="hmm">HMM structure. </param>
        </member>
        <member name="M:CvAux.cvaux.CvEViterbi(CvAux.CvImgObsInfo@,CvAux.CvEHMM@)">
            <summary>
            Executes Viterbi algorithm for embedded HMM
            </summary>
            <param name="obs_info">Observation structure. </param>
            <param name="hmm">HMM structure. </param>
        </member>
        <member name="M:CvAux.cvaux.CvMixSegmL2(CvAux.CvImgObsInfo@,System.Int32,CvAux.CvEHMM@)">
            <summary>
            Segments observations from all training images by mixture components of newlyassigned states
            </summary>
            <param name="obs_info_array">Array of pointers to the observation structures. </param>
            <param name="num_img">Length of the array. </param>
            <param name="hmm">HMM. </param>
        </member>
        <member name="M:CvAux.cvaux.CvCreateHandMask(CxCore.CvSeq@,CxCore.IplImage@,CxCore.CvRect@)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="hand_points">No comment available for this member. Please check the openCV documenation.</param>
            <param name="img_mask">No comment available for this member. Please check the openCV documenation.</param>
            <param name="roi">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.CvFindHandRegion(CxCore.CvPoint3D32f@,System.Int32,CxCore.CvSeq@,System.Single[],CxCore.CvSize2D32f,System.Int32,CxCore.CvPoint3D32f@,CxCore.CvMemStorage@,CxCore.CvSeq@)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="points">No comment available for this member. Please check the openCV documenation.</param>
            <param name="count">No comment available for this member. Please check the openCV documenation.</param>
            <param name="indexs">No comment available for this member. Please check the openCV documenation.</param>
            <param name="line">No comment available for this member. Please check the openCV documenation.</param>
            <param name="size">No comment available for this member. Please check the openCV documenation.</param>
            <param name="flag">No comment available for this member. Please check the openCV documenation.</param>
            <param name="center">No comment available for this member. Please check the openCV documenation.</param>
            <param name="storage">No comment available for this member. Please check the openCV documenation.</param>
            <param name="numbers">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.CvFindHandRegionA(CxCore.CvPoint3D32f@,System.Int32,CxCore.CvSeq@,System.Single[],CxCore.CvSize2D32f,System.Int32,CxCore.CvPoint3D32f@,CxCore.CvMemStorage@,CxCore.CvSeq@)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="points">No comment available for this member. Please check the openCV documenation.</param>
            <param name="count">No comment available for this member. Please check the openCV documenation.</param>
            <param name="indexs">No comment available for this member. Please check the openCV documenation.</param>
            <param name="line">No comment available for this member. Please check the openCV documenation.</param>
            <param name="size">No comment available for this member. Please check the openCV documenation.</param>
            <param name="jc">No comment available for this member. Please check the openCV documenation.</param>
            <param name="center">No comment available for this member. Please check the openCV documenation.</param>
            <param name="storage">No comment available for this member. Please check the openCV documenation.</param>
            <param name="numbers">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.IcvDrawMosaic(Cv.CvSubdiv2D@,CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="subdiv">No comment available for this member. Please check the openCV documenation.</param>
            <param name="src">No comment available for this member. Please check the openCV documenation.</param>
            <param name="dst">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.IcvSubdiv2DCheck(Cv.CvSubdiv2D@)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="subdiv">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.IcvSqDist2D32f(CxCore.CvPoint2D32f,CxCore.CvPoint2D32f)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="pt1">No comment available for this member. Please check the openCV documenation.</param>
            <param name="pt2">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.CV_CURRENT_INT(CxCore.CvSeqReader)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="reader">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.CV_PREV_INT(CxCore.CvSeqReader)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="reader">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.CvFindStereoCorrespondence(CxCore.IplImage@,CxCore.IplImage@,System.Int32,CxCore.IplImage@,System.Int32,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Calculates disparity for stereo-pair
            </summary>
            <param name="leftImage">Left image of stereo pair, rectified grayscale 8-bit image </param>
            <param name="rightImage">Right image of stereo pair, rectified grayscale 8-bit image </param>
            <param name="mode">Algorithm used to find a disparity (now only CV_DISPARITY_BIRCHFIELD is supported) </param>
            <param name="dispImage">No comment available for this member. Please check the openCV documenation.</param>
            <param name="maxDisparity">Maximum possible disparity. The closer the objects to the cameras, the larger value should be specified here. Too big values slow down the process significantly. </param>
            <param name="param1">parameter of algorithm. For example, param1 is the constant occlusion penalty, param2 is the constant match reward, param3 defines a highly reliable region (set of contiguous pixels whose reliability is at least param3), param4 defines a moderately reliable region, param5 defines a slightly reliable region. If some parameter is omitted default value is used. In Birchfield's algorithm param1 = 25, param2 = 5, param3 = 12, param4 = 15, param5 = 25 (These values have been taken from "Depth Discontinuities by Pixel-to-Pixel Stereo" Stanford University Technical Report STAN-CS-TR-96-1573, July 1996.) </param>
            <param name="param2">parameter of algorithm. For example, param1 is the constant occlusion penalty, param2 is the constant match reward, param3 defines a highly reliable region (set of contiguous pixels whose reliability is at least param3), param4 defines a moderately reliable region, param5 defines a slightly reliable region. If some parameter is omitted default value is used. In Birchfield's algorithm param1 = 25, param2 = 5, param3 = 12, param4 = 15, param5 = 25 (These values have been taken from "Depth Discontinuities by Pixel-to-Pixel Stereo" Stanford University Technical Report STAN-CS-TR-96-1573, July 1996.) </param>
            <param name="param3">parameter of algorithm. For example, param1 is the constant occlusion penalty, param2 is the constant match reward, param3 defines a highly reliable region (set of contiguous pixels whose reliability is at least param3), param4 defines a moderately reliable region, param5 defines a slightly reliable region. If some parameter is omitted default value is used. In Birchfield's algorithm param1 = 25, param2 = 5, param3 = 12, param4 = 15, param5 = 25 (These values have been taken from "Depth Discontinuities by Pixel-to-Pixel Stereo" Stanford University Technical Report STAN-CS-TR-96-1573, July 1996.) </param>
            <param name="param4">parameters of algorithm. For example, param1 is the constant occlusion penalty, param2 is the constant match reward, param3 defines a highly reliable region (set of contiguous pixels whose reliability is at least param3), param4 defines a moderately reliable region, param5 defines a slightly reliable region. If some parameter is omitted default value is used. In Birchfield's algorithm param1 = 25, param2 = 5, param3 = 12, param4 = 15, param5 = 25 (These values have been taken from "Depth Discontinuities by Pixel-to-Pixel Stereo" Stanford University Technical Report STAN-CS-TR-96-1573, July 1996.) </param>
            <param name="param5">parameters of algorithm. For example, param1 is the constant occlusion penalty, param2 is the constant match reward, param3 defines a highly reliable region (set of contiguous pixels whose reliability is at least param3), param4 defines a moderately reliable region, param5 defines a slightly reliable region. If some parameter is omitted default value is used. In Birchfield's algorithm param1 = 25, param2 = 5, param3 = 12, param4 = 15, param5 = 25 (These values have been taken from "Depth Discontinuities by Pixel-to-Pixel Stereo" Stanford University Technical Report STAN-CS-TR-96-1573, July 1996.) </param>
        </member>
        <member name="M:CvAux.cvaux.IcvConvertWarpCoordinates(System.IntPtr,CxCore.CvPoint2D32f@,CxCore.CvPoint2D32f@,System.Int32)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="coeffs">No comment available for this member. Please check the openCV documenation.</param>
            <param name="cameraPoint">No comment available for this member. Please check the openCV documenation.</param>
            <param name="warpPoint">No comment available for this member. Please check the openCV documenation.</param>
            <param name="direction">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.IcvGetSymPoint3D(Cv.CvPoint3D64d,Cv.CvPoint3D64d,Cv.CvPoint3D64d,Cv.CvPoint3D64d@)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="pointCorner">No comment available for this member. Please check the openCV documenation.</param>
            <param name="point1">No comment available for this member. Please check the openCV documenation.</param>
            <param name="point2">No comment available for this member. Please check the openCV documenation.</param>
            <param name="pointSym2">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.IcvGetPieceLength3D(Cv.CvPoint3D64d,Cv.CvPoint3D64d,System.Double[])">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="point1">No comment available for this member. Please check the openCV documenation.</param>
            <param name="point2">No comment available for this member. Please check the openCV documenation.</param>
            <param name="dist">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.IcvCompute3DPoint(System.Double,System.Double,CvAux.CvStereoLineCoeff@,Cv.CvPoint3D64d@)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="alpha">No comment available for this member. Please check the openCV documenation.</param>
            <param name="betta">No comment available for this member. Please check the openCV documenation.</param>
            <param name="coeffs">No comment available for this member. Please check the openCV documenation.</param>
            <param name="point">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.IcvCreateConvertMatrVect(System.Double[],System.Double[],System.Double[],System.Double[],System.Double[],System.Double[])">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="rotMatr1">No comment available for this member. Please check the openCV documenation.</param>
            <param name="transVect1">No comment available for this member. Please check the openCV documenation.</param>
            <param name="rotMatr2">No comment available for this member. Please check the openCV documenation.</param>
            <param name="transVect2">No comment available for this member. Please check the openCV documenation.</param>
            <param name="convRotMatr">No comment available for this member. Please check the openCV documenation.</param>
            <param name="convTransVect">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.IcvConvertPointSystem(Cv.CvPoint3D64d,Cv.CvPoint3D64d@,System.Double[],System.Double[])">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="M2">No comment available for this member. Please check the openCV documenation.</param>
            <param name="M1">No comment available for this member. Please check the openCV documenation.</param>
            <param name="rotMatr">No comment available for this member. Please check the openCV documenation.</param>
            <param name="transVect">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.IcvComputeCoeffForStereo(CvAux.CvStereoCamera@)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="stereoCamera">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.IcvGetCrossPieceVector(CxCore.CvPoint2D32f,CxCore.CvPoint2D32f,CxCore.CvPoint2D32f,CxCore.CvPoint2D32f,CxCore.CvPoint2D32f@)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="p1_start">No comment available for this member. Please check the openCV documenation.</param>
            <param name="p1_end">No comment available for this member. Please check the openCV documenation.</param>
            <param name="v2_start">No comment available for this member. Please check the openCV documenation.</param>
            <param name="v2_end">No comment available for this member. Please check the openCV documenation.</param>
            <param name="cross">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.IcvGetCrossLineDirect(CxCore.CvPoint2D32f,CxCore.CvPoint2D32f,System.Single,System.Single,System.Single,CxCore.CvPoint2D32f@)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="p1">No comment available for this member. Please check the openCV documenation.</param>
            <param name="p2">No comment available for this member. Please check the openCV documenation.</param>
            <param name="a">No comment available for this member. Please check the openCV documenation.</param>
            <param name="b">No comment available for this member. Please check the openCV documenation.</param>
            <param name="c">No comment available for this member. Please check the openCV documenation.</param>
            <param name="cross">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.IcvDefinePointPosition(CxCore.CvPoint2D32f,CxCore.CvPoint2D32f,CxCore.CvPoint2D32f)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="point1">No comment available for this member. Please check the openCV documenation.</param>
            <param name="point2">No comment available for this member. Please check the openCV documenation.</param>
            <param name="point">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.IcvStereoCalibration(System.Int32,System.Int32[],CxCore.CvSize,CxCore.CvPoint2D32f@,CxCore.CvPoint2D32f@,CxCore.CvPoint3D32f@,CvAux.CvStereoCamera@)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="numImages">No comment available for this member. Please check the openCV documenation.</param>
            <param name="nums">No comment available for this member. Please check the openCV documenation.</param>
            <param name="imageSize">No comment available for this member. Please check the openCV documenation.</param>
            <param name="imagePoints1">No comment available for this member. Please check the openCV documenation.</param>
            <param name="imagePoints2">No comment available for this member. Please check the openCV documenation.</param>
            <param name="objectPoints">No comment available for this member. Please check the openCV documenation.</param>
            <param name="stereoparams">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.IcvComputeRestStereoParams(CvAux.CvStereoCamera@)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="stereoparams">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.CvComputePerspectiveMap(System.IntPtr,CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="coeffs">No comment available for this member. Please check the openCV documenation.</param>
            <param name="rectMapX">No comment available for this member. Please check the openCV documenation.</param>
            <param name="rectMapY">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.CvComputePerspectiveMap(System.IntPtr,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="coeffs">No comment available for this member. Please check the openCV documenation.</param>
            <param name="rectMapX">No comment available for this member. Please check the openCV documenation.</param>
            <param name="rectMapY">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.CvComputePerspectiveMap(System.IntPtr,CxCore.CvMatND@,CxCore.CvMatND@)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="coeffs">No comment available for this member. Please check the openCV documenation.</param>
            <param name="rectMapX">No comment available for this member. Please check the openCV documenation.</param>
            <param name="rectMapY">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.CvComputePerspectiveMap(System.IntPtr,CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="coeffs">No comment available for this member. Please check the openCV documenation.</param>
            <param name="rectMapX">No comment available for this member. Please check the openCV documenation.</param>
            <param name="rectMapY">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.IcvComCoeffForLine(Cv.CvPoint2D64d,Cv.CvPoint2D64d,Cv.CvPoint2D64d,Cv.CvPoint2D64d,System.Double[],System.Double[],System.Double[],System.Double[],System.Double[],System.Double[],CvAux.CvStereoLineCoeff@,System.Int32[])">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="point1">No comment available for this member. Please check the openCV documenation.</param>
            <param name="point2">No comment available for this member. Please check the openCV documenation.</param>
            <param name="point3">No comment available for this member. Please check the openCV documenation.</param>
            <param name="point4">No comment available for this member. Please check the openCV documenation.</param>
            <param name="camMatr1">No comment available for this member. Please check the openCV documenation.</param>
            <param name="rotMatr1">No comment available for this member. Please check the openCV documenation.</param>
            <param name="transVect1">No comment available for this member. Please check the openCV documenation.</param>
            <param name="camMatr2">No comment available for this member. Please check the openCV documenation.</param>
            <param name="rotMatr2">No comment available for this member. Please check the openCV documenation.</param>
            <param name="transVect2">No comment available for this member. Please check the openCV documenation.</param>
            <param name="coeffs">No comment available for this member. Please check the openCV documenation.</param>
            <param name="needSwapCameras">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.IcvGetDirectionForPoint(Cv.CvPoint2D64d,System.Double[],Cv.CvPoint3D64d@)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="point">No comment available for this member. Please check the openCV documenation.</param>
            <param name="camMatr">No comment available for this member. Please check the openCV documenation.</param>
            <param name="direct">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.IcvGetCrossLines(Cv.CvPoint3D64d,Cv.CvPoint3D64d,Cv.CvPoint3D64d,Cv.CvPoint3D64d,Cv.CvPoint3D64d@)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="point11">No comment available for this member. Please check the openCV documenation.</param>
            <param name="point12">No comment available for this member. Please check the openCV documenation.</param>
            <param name="point21">No comment available for this member. Please check the openCV documenation.</param>
            <param name="point22">No comment available for this member. Please check the openCV documenation.</param>
            <param name="midPoint">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.IcvComputeStereoLineCoeffs(Cv.CvPoint3D64d,Cv.CvPoint3D64d,Cv.CvPoint3D64d,System.Double,CvAux.CvStereoLineCoeff@)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="pointA">No comment available for this member. Please check the openCV documenation.</param>
            <param name="pointB">No comment available for this member. Please check the openCV documenation.</param>
            <param name="pointCam1">No comment available for this member. Please check the openCV documenation.</param>
            <param name="gamma">No comment available for this member. Please check the openCV documenation.</param>
            <param name="coeffs">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.IcvGetAngleLine(Cv.CvPoint2D64d,CxCore.CvSize,Cv.CvPoint2D64d@,Cv.CvPoint2D64d@)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="startPoint">No comment available for this member. Please check the openCV documenation.</param>
            <param name="imageSize">No comment available for this member. Please check the openCV documenation.</param>
            <param name="point1">No comment available for this member. Please check the openCV documenation.</param>
            <param name="point2">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.IcvGetCoefForPiece(Cv.CvPoint2D64d,Cv.CvPoint2D64d,System.Double[],System.Double[],System.Double[],System.Int32[])">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="p_start">No comment available for this member. Please check the openCV documenation.</param>
            <param name="p_end">No comment available for this member. Please check the openCV documenation.</param>
            <param name="a">No comment available for this member. Please check the openCV documenation.</param>
            <param name="b">No comment available for this member. Please check the openCV documenation.</param>
            <param name="c">No comment available for this member. Please check the openCV documenation.</param>
            <param name="result">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.IcvComputeeInfiniteProject1(System.Double[],System.Double[],System.Double[],CxCore.CvPoint2D32f,CxCore.CvPoint2D32f@)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="rotMatr">No comment available for this member. Please check the openCV documenation.</param>
            <param name="camMatr1">No comment available for this member. Please check the openCV documenation.</param>
            <param name="camMatr2">No comment available for this member. Please check the openCV documenation.</param>
            <param name="point1">No comment available for this member. Please check the openCV documenation.</param>
            <param name="point2">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.IcvComputeeInfiniteProject2(System.Double[],System.Double[],System.Double[],CxCore.CvPoint2D32f@,CxCore.CvPoint2D32f)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="rotMatr">No comment available for this member. Please check the openCV documenation.</param>
            <param name="camMatr1">No comment available for this member. Please check the openCV documenation.</param>
            <param name="camMatr2">No comment available for this member. Please check the openCV documenation.</param>
            <param name="point1">No comment available for this member. Please check the openCV documenation.</param>
            <param name="point2">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.IcvGetCrossDirectDirect(System.Double[],System.Double[],Cv.CvPoint2D64d@,System.Int32[])">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="direct1">No comment available for this member. Please check the openCV documenation.</param>
            <param name="direct2">No comment available for this member. Please check the openCV documenation.</param>
            <param name="cross">No comment available for this member. Please check the openCV documenation.</param>
            <param name="result">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.IcvGetCrossPieceDirect(Cv.CvPoint2D64d,Cv.CvPoint2D64d,System.Double,System.Double,System.Double,Cv.CvPoint2D64d@,System.Int32[])">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="p_start">No comment available for this member. Please check the openCV documenation.</param>
            <param name="p_end">No comment available for this member. Please check the openCV documenation.</param>
            <param name="a">No comment available for this member. Please check the openCV documenation.</param>
            <param name="b">No comment available for this member. Please check the openCV documenation.</param>
            <param name="c">No comment available for this member. Please check the openCV documenation.</param>
            <param name="cross">No comment available for this member. Please check the openCV documenation.</param>
            <param name="result">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.IcvGetCrossPiecePiece(Cv.CvPoint2D64d,Cv.CvPoint2D64d,Cv.CvPoint2D64d,Cv.CvPoint2D64d,Cv.CvPoint2D64d@,System.Int32[])">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="p1_start">No comment available for this member. Please check the openCV documenation.</param>
            <param name="p1_end">No comment available for this member. Please check the openCV documenation.</param>
            <param name="p2_start">No comment available for this member. Please check the openCV documenation.</param>
            <param name="p2_end">No comment available for this member. Please check the openCV documenation.</param>
            <param name="cross">No comment available for this member. Please check the openCV documenation.</param>
            <param name="result">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.IcvGetPieceLength(Cv.CvPoint2D64d,Cv.CvPoint2D64d,System.Double[])">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="point1">No comment available for this member. Please check the openCV documenation.</param>
            <param name="point2">No comment available for this member. Please check the openCV documenation.</param>
            <param name="dist">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.IcvGetCrossRectDirect(CxCore.CvSize,System.Double,System.Double,System.Double,Cv.CvPoint2D64d@,Cv.CvPoint2D64d@,System.Int32[])">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="imageSize">No comment available for this member. Please check the openCV documenation.</param>
            <param name="a">No comment available for this member. Please check the openCV documenation.</param>
            <param name="b">No comment available for this member. Please check the openCV documenation.</param>
            <param name="c">No comment available for this member. Please check the openCV documenation.</param>
            <param name="start">No comment available for this member. Please check the openCV documenation.</param>
            <param name="end">No comment available for this member. Please check the openCV documenation.</param>
            <param name="result">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.IcvProjectPointToImage(Cv.CvPoint3D64d,System.Double[],System.Double[],System.Double[],Cv.CvPoint2D64d@)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="point">No comment available for this member. Please check the openCV documenation.</param>
            <param name="camMatr">No comment available for this member. Please check the openCV documenation.</param>
            <param name="rotMatr">No comment available for this member. Please check the openCV documenation.</param>
            <param name="transVect">No comment available for this member. Please check the openCV documenation.</param>
            <param name="projPoint">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.IcvGetQuadsTransform(CxCore.CvSize,System.Double[],System.Double[],System.Double[],System.Double[],System.Double[],System.Double[],CxCore.CvSize@,System.IntPtr,System.IntPtr,System.Double[],Cv.CvPoint3D64d@,Cv.CvPoint3D64d@)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="imageSize">No comment available for this member. Please check the openCV documenation.</param>
            <param name="camMatr1">No comment available for this member. Please check the openCV documenation.</param>
            <param name="rotMatr1">No comment available for this member. Please check the openCV documenation.</param>
            <param name="transVect1">No comment available for this member. Please check the openCV documenation.</param>
            <param name="camMatr2">No comment available for this member. Please check the openCV documenation.</param>
            <param name="rotMatr2">No comment available for this member. Please check the openCV documenation.</param>
            <param name="transVect2">No comment available for this member. Please check the openCV documenation.</param>
            <param name="warpSize">No comment available for this member. Please check the openCV documenation.</param>
            <param name="quad1">No comment available for this member. Please check the openCV documenation.</param>
            <param name="quad2">No comment available for this member. Please check the openCV documenation.</param>
            <param name="fundMatr">No comment available for this member. Please check the openCV documenation.</param>
            <param name="epipole1">No comment available for this member. Please check the openCV documenation.</param>
            <param name="epipole2">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.IcvGetQuadsTransformStruct(CvAux.CvStereoCamera@)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="stereoCamera">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.IcvComputeStereoParamsForCameras(CvAux.CvStereoCamera@)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="stereoCamera">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.IcvGetCutPiece(System.Double[],System.Double[],Cv.CvPoint2D64d,CxCore.CvSize,Cv.CvPoint2D64d@,Cv.CvPoint2D64d@,Cv.CvPoint2D64d@,Cv.CvPoint2D64d@,System.Int32[])">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="areaLineCoef1">No comment available for this member. Please check the openCV documenation.</param>
            <param name="areaLineCoef2">No comment available for this member. Please check the openCV documenation.</param>
            <param name="epipole">No comment available for this member. Please check the openCV documenation.</param>
            <param name="imageSize">No comment available for this member. Please check the openCV documenation.</param>
            <param name="point11">No comment available for this member. Please check the openCV documenation.</param>
            <param name="point12">No comment available for this member. Please check the openCV documenation.</param>
            <param name="point21">No comment available for this member. Please check the openCV documenation.</param>
            <param name="point22">No comment available for this member. Please check the openCV documenation.</param>
            <param name="result">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.IcvGetMiddleAnglePoint(Cv.CvPoint2D64d,Cv.CvPoint2D64d,Cv.CvPoint2D64d,Cv.CvPoint2D64d@)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="basePoint">No comment available for this member. Please check the openCV documenation.</param>
            <param name="point1">No comment available for this member. Please check the openCV documenation.</param>
            <param name="point2">No comment available for this member. Please check the openCV documenation.</param>
            <param name="midPoint">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.IcvGetNormalDirect(System.Double[],Cv.CvPoint2D64d,System.Double[])">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="direct">No comment available for this member. Please check the openCV documenation.</param>
            <param name="point">No comment available for this member. Please check the openCV documenation.</param>
            <param name="normDirect">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.IcvGetVect(Cv.CvPoint2D64d,Cv.CvPoint2D64d,Cv.CvPoint2D64d)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="basePoint">No comment available for this member. Please check the openCV documenation.</param>
            <param name="point1">No comment available for this member. Please check the openCV documenation.</param>
            <param name="point2">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.IcvProjectPointToDirect(Cv.CvPoint2D64d,System.Double[],Cv.CvPoint2D64d@)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="point">No comment available for this member. Please check the openCV documenation.</param>
            <param name="lineCoeff">No comment available for this member. Please check the openCV documenation.</param>
            <param name="projectPoint">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.IcvGetDistanceFromPointToDirect(Cv.CvPoint2D64d,System.Double[],System.Double[])">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="point">No comment available for this member. Please check the openCV documenation.</param>
            <param name="lineCoef">No comment available for this member. Please check the openCV documenation.</param>
            <param name="dist">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.IcvCreateIsometricImage(CxCore.IplImage@,CxCore.IplImage@,System.Int32,System.Int32)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="src">No comment available for this member. Please check the openCV documenation.</param>
            <param name="dst">No comment available for this member. Please check the openCV documenation.</param>
            <param name="desired_depth">No comment available for this member. Please check the openCV documenation.</param>
            <param name="desired_num_channels">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.CvDeInterlace(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="frame">No comment available for this member. Please check the openCV documenation.</param>
            <param name="fieldEven">No comment available for this member. Please check the openCV documenation.</param>
            <param name="fieldOdd">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.CvDeInterlace(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="frame">No comment available for this member. Please check the openCV documenation.</param>
            <param name="fieldEven">No comment available for this member. Please check the openCV documenation.</param>
            <param name="fieldOdd">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.CvDeInterlace(CxCore.CvMatND@,CxCore.CvMatND@,CxCore.CvMatND@)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="frame">No comment available for this member. Please check the openCV documenation.</param>
            <param name="fieldEven">No comment available for this member. Please check the openCV documenation.</param>
            <param name="fieldOdd">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.CvDeInterlace(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="frame">No comment available for this member. Please check the openCV documenation.</param>
            <param name="fieldEven">No comment available for this member. Please check the openCV documenation.</param>
            <param name="fieldOdd">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.CvCreateGLCM(CxCore.IplImage@,System.Int32,System.Int32[],System.Int32,System.Int32)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="srcImage">No comment available for this member. Please check the openCV documenation.</param>
            <param name="stepMagnitude">No comment available for this member. Please check the openCV documenation.</param>
            <param name="stepDirections">No comment available for this member. Please check the openCV documenation.</param>
            <param name="numStepDirections">No comment available for this member. Please check the openCV documenation.</param>
            <param name="optimizationType">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.CvReleaseGLCM(CvAux.CvGLCM@,System.Int32)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="GLCM">No comment available for this member. Please check the openCV documenation.</param>
            <param name="flag">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.CvCreateGLCMDescriptors(CvAux.CvGLCM@,System.Int32)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="destGLCM">No comment available for this member. Please check the openCV documenation.</param>
            <param name="descriptorOptimizationType">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.CvGetGLCMDescriptor(CvAux.CvGLCM@,System.Int32,System.Int32)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="GLCM">No comment available for this member. Please check the openCV documenation.</param>
            <param name="step">No comment available for this member. Please check the openCV documenation.</param>
            <param name="descriptor">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.CvGetGLCMDescriptorStatistics(CvAux.CvGLCM@,System.Int32,System.Double[],System.Double[])">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="GLCM">No comment available for this member. Please check the openCV documenation.</param>
            <param name="descriptor">No comment available for this member. Please check the openCV documenation.</param>
            <param name="average">No comment available for this member. Please check the openCV documenation.</param>
            <param name="standardDeviation">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.CvCreateGLCMImage(CvAux.CvGLCM@,System.Int32)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="GLCM">No comment available for this member. Please check the openCV documenation.</param>
            <param name="step">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.CvInitFaceTracker(CvAux.CvFaceTracker@,CxCore.IplImage@,CxCore.CvRect@,System.Int32)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="pFaceTracking">No comment available for this member. Please check the openCV documenation.</param>
            <param name="imgGray">No comment available for this member. Please check the openCV documenation.</param>
            <param name="pRects">No comment available for this member. Please check the openCV documenation.</param>
            <param name="nRects">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.CvTrackFace(CvAux.CvFaceTracker@,CxCore.IplImage@,CxCore.CvRect@,System.Int32,CxCore.CvPoint@,System.Double[])">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="pFaceTracker">No comment available for this member. Please check the openCV documenation.</param>
            <param name="imgGray">No comment available for this member. Please check the openCV documenation.</param>
            <param name="pRects">No comment available for this member. Please check the openCV documenation.</param>
            <param name="nRects">No comment available for this member. Please check the openCV documenation.</param>
            <param name="ptRotate">No comment available for this member. Please check the openCV documenation.</param>
            <param name="dbAngleRotate">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.CvReleaseFaceTracker(CvAux.CvFaceTracker@)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="ppFaceTracker">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.cv3dTrackerTrackedObject(System.Int32,CxCore.CvPoint3D32f)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="id">No comment available for this member. Please check the openCV documenation.</param>
            <param name="p">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.Cv3dTrackerCalibrateCameras(System.Int32,System.IntPtr,CxCore.CvSize,System.Single,System.IntPtr,System.IntPtr)">
            <summary>
            Simultaneously determines position and orientation of multiple cameras
            </summary>
            <param name="num_cameras">the number of cameras to calibrate. This is the size of each of thethree array parameters. the number of cameras. </param>
            <param name="camera_intrinsics">camera intrinsics for each camera, such as determined by CalibFilter. </param>
            <param name="etalon_size">No comment available for this member. Please check the openCV documenation.</param>
            <param name="square_size">No comment available for this member. Please check the openCV documenation.</param>
            <param name="samples">images from each camera, with a view of the checkerboard. </param>
            <param name="camera_info">filled in with the results of the camera calibration. This is passed into 3dTrackerLocateObjects to do tracking. The function cv3dTrackerCalibrateCameras searches for a checkerboard of the specified size in eachof the images. For each image in which it finds the checkerboard, it fillsin the corresponding slot in camera_info with the positionand orientation of the camerarelative to the checkerboard and sets the valid flag.If it finds the checkerboard in all the images, it returns true;otherwise it returns false. This function does not change the members of the camera_info arraythat correspond to images in which the checkerboard was not found.This allows you to calibrate each camera independently, instead ofsimultaneously.To accomplish this, do the following: clear all the valid flags before calling this function the first time; call this function with each set of images; check all the valid flags after each call.When all the valid flags are set, calibration is complete. Note that this method works well only if the checkerboard is rigidly mounted;if it is handheld, all the cameras should be calibrated simultanouslyto get an accurate result.To ensure that all cameras are calibrated simultaneously,ignore the valid flags anduse the return value to decide when calibration is complete. 3dTrackerLocateObjects Determines 3d location of tracked objects int cv3dTrackerLocateObjects(int num_cameras, int num_objects, const Cv3dTrackerCameraInfo camera_info[], const Cv3dTracker2dTrackedObject tracking_info[], Cv3dTrackerTrackedObject tracked_objects[]); camera position and location information for each camera,as determined by 3dTrackerCalibrateCameras . </param>
        </member>
        <member name="M:CvAux.cvaux.Cv3dTrackerLocateObjects(System.Int32,System.Int32,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>
            Determines 3d location of tracked objects
            </summary>
            <param name="num_cameras">the number of cameras. </param>
            <param name="num_objects">the maximum number of objects found by any camera. (Also themaximum number of objects returned in tracked_objects .) </param>
            <param name="camera_info">camera position and location information for each camera,as determined by 3dTrackerCalibrateCameras . </param>
            <param name="tracking_info">the 2d position of each object as seen by each camera. Althoughthis is specified as a one-dimensional array, it is actually atwo-dimensional array: const Cv3dTracker2dTrackedObject tracking_info[num_cameras][num_objects] .The id field of any unused slots must be -1. Ids need notbe ordered or consecutive. </param>
            <param name="tracked_objects">filled in with the results. The function cv3dTrackerLocateObjects determines the 3d position of tracked objectsbased on the 2d tracking information from multiple cameras andthe camera position and orientation information computed by 3dTrackerCalibrateCameras .It locates any objects with the same id that are tracked by morethan one camera.It fills in the tracked_objects array andreturns the number of objects located. The id fields ofany unused slots in tracked_objects are set to -1. Eigen Objects (PCA) Functions The functions described in this section do PCA analysis and compression fora set of 8-bit images that may not fit into memory all together.If your data fits into memory and the vectors are not 8-bit (or you want a simplerinterface), use cvCalcCovarMatrix , cvSVD and cvGEMM to do PCA CalcCovarMatrixEx Calculates covariance matrix for group of input objects void cvCalcCovarMatrixEx( int object_count, void* input, int io_flags, int iobuf_size, uchar* buffer, void* userdata, IplImage* avg, float* covar_matrix ); </param>
        </member>
        <member name="M:CvAux.cvaux.CV_NEXT_VORONOISITE2D(CvAux.CvVoronoiSite2D)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="SITE">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.CV_PREV_VORONOISITE2D(CvAux.CvVoronoiSite2D)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="SITE">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.CV_FIRST_VORONOIEDGE2D(CvAux.CvVoronoiSite2D)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="SITE">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.CV_LAST_VORONOIEDGE2D(CvAux.CvVoronoiSite2D)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="SITE">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.CV_NEXT_VORONOIEDGE2D(CvAux.CvVoronoiEdge2D,CvAux.CvVoronoiSite2D)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="EDGE">No comment available for this member. Please check the openCV documenation.</param>
            <param name="SITE">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.CV_PREV_VORONOIEDGE2D(CvAux.CvVoronoiEdge2D,CvAux.CvVoronoiSite2D)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="EDGE">No comment available for this member. Please check the openCV documenation.</param>
            <param name="SITE">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.CV_VORONOIEDGE2D_BEGINNODE(CvAux.CvVoronoiEdge2D,CvAux.CvVoronoiSite2D)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="EDGE">No comment available for this member. Please check the openCV documenation.</param>
            <param name="SITE">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.CV_VORONOIEDGE2D_ENDNODE(CvAux.CvVoronoiEdge2D,CvAux.CvVoronoiSite2D)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="EDGE">No comment available for this member. Please check the openCV documenation.</param>
            <param name="SITE">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.CV_TWIN_VORONOISITE2D(CvAux.CvVoronoiSite2D,CvAux.CvVoronoiEdge2D)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="SITE">No comment available for this member. Please check the openCV documenation.</param>
            <param name="EDGE">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.CvVoronoiDiagramFromContour(CxCore.CvSeq@,CvAux.CvVoronoiDiagram2D@,CxCore.CvMemStorage@,CvAux.CvLeeParameters,System.Int32,System.Int32)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="ContourSeq">No comment available for this member. Please check the openCV documenation.</param>
            <param name="VoronoiDiagram">No comment available for this member. Please check the openCV documenation.</param>
            <param name="VoronoiStorage">No comment available for this member. Please check the openCV documenation.</param>
            <param name="contour_type">No comment available for this member. Please check the openCV documenation.</param>
            <param name="contour_orientation">No comment available for this member. Please check the openCV documenation.</param>
            <param name="attempt_number">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.CvVoronoiDiagramFromImage(CxCore.IplImage@,CxCore.CvSeq@,CvAux.CvVoronoiDiagram2D@,CxCore.CvMemStorage@,CvAux.CvLeeParameters,System.Single)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="pImage">No comment available for this member. Please check the openCV documenation.</param>
            <param name="ContourSeq">No comment available for this member. Please check the openCV documenation.</param>
            <param name="VoronoiDiagram">No comment available for this member. Please check the openCV documenation.</param>
            <param name="VoronoiStorage">No comment available for this member. Please check the openCV documenation.</param>
            <param name="regularization_method">No comment available for this member. Please check the openCV documenation.</param>
            <param name="approx_precision">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.CvReleaseVoronoiStorage(CvAux.CvVoronoiDiagram2D@,CxCore.CvMemStorage@)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="VoronoiDiagram">No comment available for this member. Please check the openCV documenation.</param>
            <param name="pVoronoiStorage">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.CvLinearContorModelFromVoronoiDiagram(CvAux.CvVoronoiDiagram2D@,System.Single)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="VoronoiDiagram">No comment available for this member. Please check the openCV documenation.</param>
            <param name="maxWidth">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.CvReleaseLinearContorModelStorage(CxCore.CvGraph@)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="Graph">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.CvInitPerspectiveTransform(CxCore.CvSize,System.IntPtr,System.IntPtr,CxCore.IplImage@)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="size">No comment available for this member. Please check the openCV documenation.</param>
            <param name="vertex">No comment available for this member. Please check the openCV documenation.</param>
            <param name="matrix">No comment available for this member. Please check the openCV documenation.</param>
            <param name="rectMap">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.CvInitPerspectiveTransform(CxCore.CvSize,System.IntPtr,System.IntPtr,CxCore.CvMat@)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="size">No comment available for this member. Please check the openCV documenation.</param>
            <param name="vertex">No comment available for this member. Please check the openCV documenation.</param>
            <param name="matrix">No comment available for this member. Please check the openCV documenation.</param>
            <param name="rectMap">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.CvInitPerspectiveTransform(CxCore.CvSize,System.IntPtr,System.IntPtr,CxCore.CvMatND@)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="size">No comment available for this member. Please check the openCV documenation.</param>
            <param name="vertex">No comment available for this member. Please check the openCV documenation.</param>
            <param name="matrix">No comment available for this member. Please check the openCV documenation.</param>
            <param name="rectMap">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.CvInitPerspectiveTransform(CxCore.CvSize,System.IntPtr,System.IntPtr,CxCore.CvSeq@)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="size">No comment available for this member. Please check the openCV documenation.</param>
            <param name="vertex">No comment available for this member. Please check the openCV documenation.</param>
            <param name="matrix">No comment available for this member. Please check the openCV documenation.</param>
            <param name="rectMap">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.CvMakeScanlines(Cv.CvMatrix3@,CxCore.CvSize,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])">
            <summary>
            Calculates scanlines coordinates for two cameras by fundamental matrix
            </summary>
            <param name="matrix">Fundamental matrix. </param>
            <param name="img_size">Size of the image. </param>
            <param name="scanlines1">Pointer to the array of calculated scanlines of the first image. Pointer to the array of the first scanlines. </param>
            <param name="scanlines2">Pointer to the array of calculated scanlines of the second image. Pointer to the array of the second scanlines. </param>
            <param name="lengths1">Pointer to the array of calculated lengths (in pixels) of the first imagescanlines. </param>
            <param name="lengths2">Pointer to the array of calculated lengths (in pixels) of the second imagescanlines. </param>
            <param name="line_count">Pointer to the variable that stores the number of scanlines. The function cvMakeScanlines finds coordinates of scanlines for two images. This function returns the number of scanlines. The function does nothing exceptcalculating the number of scanlines if the pointers scanlines1 or scanlines2 areequal to zero. PreWarpImage Rectifies image void cvPreWarpImage( int line_count, IplImage* img, uchar* dst, int* dst_nums, int* scanlines ); Number of scanlines for the image. Number of the scanlines. Number of scanlines. Number of scanlines. Number of scanlines in the prewarp image. Number of the scanlines. </param>
        </member>
        <member name="M:CvAux.cvaux.CvPreWarpImage(System.Int32,CxCore.IplImage@,System.Byte@,System.Int32[],System.Int32[])">
            <summary>
            Rectifies image
            </summary>
            <param name="line_count">Number of scanlines for the image. Number of the scanlines. Number of scanlines. Number of scanlines. Number of scanlines in the prewarp image. Number of the scanlines. </param>
            <param name="img">Image to prewarp. Resulting unwarp image. Image. The function cvDeleteMoire deletes moire from the given image. The post-warpedimage may have black (un-covered) points because of possible holes betweenneighboring scanlines. The function deletes moire (black pixels) from the imageby substituting neighboring pixels for black pixels. If all the scanlines arehorizontal, the function may be omitted. 3D Tracking Functions The section discusses functions for tracking objects in 3d space using a stereo camera.Besides C API, there is DirectShow 3dTracker filterand the wrapper application 3dTracker . Here you may find a description how to test the filter on sample data. 3dTrackerCalibrateCameras Simultaneously determines position and orientation of multiple cameras CvBool cv3dTrackerCalibrateCameras(int num_cameras, const Cv3dTrackerCameraIntrinsics camera_intrinsics[], CvSize checkerboard_size, IplImage *samples[], Cv3dTrackerCameraInfo camera_info[]); </param>
            <param name="dst">Data to store for the prewarp image. </param>
            <param name="dst_nums">Pointer to the array of lengths of scanlines. </param>
            <param name="scanlines">Pointer to the array of coordinates of scanlines. The function cvPreWarpImage rectifies the image so that the scanlines in therectified image are horizontal. The output buffer of size max(width,height)*line_count*3 must be allocated before calling the function. FindRuns Retrieves scanlines from rectified image and breaks them down into runs void cvFindRuns( int line_count, uchar* prewarp1, uchar* prewarp2, int* line_lengths1, int* line_lengths2, int* runs1, int* runs2, int* num_runs1, int* num_runs2 ); Pointer to the array of scanlines data. The function cvPostWarpImage warps the resultant image from the virtual camera bystoring its rows across the scanlines whose coordinates are calculated by cvMakeAlphaScanlines . DeleteMoire Deletes moire in given image void cvDeleteMoire( IplImage* img ); </param>
        </member>
        <member name="M:CvAux.cvaux.CvFindRuns(System.Int32,System.Byte@,System.Byte@,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])">
            <summary>
            Retrieves scanlines from rectified image and breaks them down into runs
            </summary>
            <param name="line_count">Number of the scanlines. Number of scanlines. Number of scanlines. Number of scanlines in the prewarp image. Number of the scanlines. </param>
            <param name="prewarp1">Prewarp data of the first image. </param>
            <param name="prewarp2">Prewarp data of the second image. </param>
            <param name="line_lengths1">Array of lengths of scanlines in the first image. </param>
            <param name="line_lengths2">Array of lengths of scanlines in the second image. </param>
            <param name="runs1">Array of runs in each scanline in the first image. </param>
            <param name="runs2">Array of runs in each scanline in the second image. </param>
            <param name="num_runs1">Array of numbers of runs in each scanline in the first image. </param>
            <param name="num_runs2">Array of numbers of runs in each scanline in the second image. The function cvFindRuns retrieves scanlines from the rectified image and breakseach scanline down into several runs, that is, series of pixels of almost thesame brightness. DynamicCorrespondMulti Finds correspondence between two sets of runs of two warped images void cvDynamicCorrespondMulti( int line_count, int* first, int* first_runs, int* second, int* second_runs, int* first_corr, int* second_corr ); </param>
        </member>
        <member name="M:CvAux.cvaux.CvDynamicCorrespondMulti(System.Int32,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])">
            <summary>
            Finds correspondence between two sets of runs of two warped images
            </summary>
            <param name="line_count">Number of scanlines. Number of scanlines. Number of scanlines in the prewarp image. Number of the scanlines. </param>
            <param name="first">Array of runs of the first image. First sequence of runs. </param>
            <param name="first_runs">Array of numbers of runs in each scanline of the first image. Pointer to the number of runs in each scanline in the first image. </param>
            <param name="second">Array of runs of the second image. Second sequence of runs. </param>
            <param name="second_runs">Array of numbers of runs in each scanline of the second image. Pointer to the number of runs in each scanline in the second image. </param>
            <param name="first_corr">Pointer to the array of correspondence information found for the firstruns. Pointer to the array of correspondence information found for the firstruns. </param>
            <param name="second_corr">Pointer to the array of correspondence information found for thesecond runs. The function cvDynamicCorrespondMulti finds correspondence between two sets ofruns of two images. Memory must be allocated before calling this function.Memory size for one array of correspondence information is max( width,height )* numscanlines*3*sizeof ( int ) . MakeAlphaScanlines Calculates coordinates of scanlines of image from virtual camera void cvMakeAlphaScanlines( int* scanlines1, int* scanlines2, int* scanlinesA, int* lengths, int line_count, float alpha ); Pointer to the array of correspondence information found for thesecond runs. The function cvMorphEpilinesMulti morphs two pre-warped images using informationabout correspondence between the scanlines of two images. PostWarpImage Warps rectified morphed image back void cvPostWarpImage( int line_count, uchar* src, int* src_nums, IplImage* img, int* scanlines ); </param>
        </member>
        <member name="M:CvAux.cvaux.CvMakeAlphaScanlines(System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32,System.Single)">
            <summary>
            Calculates coordinates of scanlines of image from virtual camera
            </summary>
            <param name="scanlines1">Pointer to the array of the first scanlines. </param>
            <param name="scanlines2">Pointer to the array of the second scanlines. </param>
            <param name="scanlinesA">Pointer to the array of the scanlines found in the virtual image. </param>
            <param name="lengths">Pointer to the array of lengths of the scanlines found in the virtualimage. </param>
            <param name="line_count">Number of scanlines. Number of scanlines in the prewarp image. Number of the scanlines. </param>
            <param name="alpha">Position of virtual camera (0.0 - 1.0) . The function cvMakeAlphaScanlines finds coordinates of scanlines for the virtualcamera with the given camera position. Memory must be allocated before calling this function. Memory size for the arrayof correspondence runs is numscanlines*2*4*sizeof(int) . Memory size for thearray of the scanline lengths is numscanlines*2*4*sizeof(int) . MorphEpilinesMulti Morphs two pre-warped images using information about stereo correspondence void cvMorphEpilinesMulti( int line_count, uchar* first_pix, int* first_num, uchar* second_pix, int* second_num, uchar* dst_pix, int* dst_num, float alpha, int* first, int* first_runs, int* second, int* second_runs, int* first_corr, int* second_corr ); Virtual camera position (0.0 - 1.0) . </param>
        </member>
        <member name="M:CvAux.cvaux.CvMorphEpilinesMulti(System.Int32,System.Byte@,System.Int32[],System.Byte@,System.Int32[],System.Byte@,System.Int32[],System.Single,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])">
            <summary>
            Morphs two pre-warped images using information about stereo correspondence
            </summary>
            <param name="line_count">Number of scanlines in the prewarp image. Number of the scanlines. </param>
            <param name="first_pix">Pointer to the first prewarp image. </param>
            <param name="first_num">Pointer to the array of numbers of points in each scanline in the firstimage. </param>
            <param name="second_pix">Pointer to the second prewarp image. </param>
            <param name="second_num">Pointer to the array of numbers of points in each scanline in thesecond image. </param>
            <param name="dst_pix">Pointer to the resulting morphed warped image. </param>
            <param name="dst_num">Pointer to the array of numbers of points in each line. </param>
            <param name="alpha">Virtual camera position (0.0 - 1.0) . </param>
            <param name="first">First sequence of runs. </param>
            <param name="first_runs">Pointer to the number of runs in each scanline in the first image. </param>
            <param name="second">Second sequence of runs. </param>
            <param name="second_runs">Pointer to the number of runs in each scanline in the second image. </param>
            <param name="first_corr">Pointer to the array of correspondence information found for the firstruns. </param>
            <param name="second_corr">Pointer to the array of correspondence information found for thesecond runs. The function cvMorphEpilinesMulti morphs two pre-warped images using informationabout correspondence between the scanlines of two images. PostWarpImage Warps rectified morphed image back void cvPostWarpImage( int line_count, uchar* src, int* src_nums, IplImage* img, int* scanlines ); </param>
        </member>
        <member name="M:CvAux.cvaux.CvPostWarpImage(System.Int32,System.Byte@,System.Int32[],CxCore.IplImage@,System.Int32[])">
            <summary>
            Warps rectified morphed image back
            </summary>
            <param name="line_count">Number of the scanlines. </param>
            <param name="src">Pointer to the prewarp image virtual image. </param>
            <param name="src_nums">Number of the scanlines in the image. </param>
            <param name="img">Resulting unwarp image. Image. The function cvDeleteMoire deletes moire from the given image. The post-warpedimage may have black (un-covered) points because of possible holes betweenneighboring scanlines. The function deletes moire (black pixels) from the imageby substituting neighboring pixels for black pixels. If all the scanlines arehorizontal, the function may be omitted. 3D Tracking Functions The section discusses functions for tracking objects in 3d space using a stereo camera.Besides C API, there is DirectShow 3dTracker filterand the wrapper application 3dTracker . Here you may find a description how to test the filter on sample data. 3dTrackerCalibrateCameras Simultaneously determines position and orientation of multiple cameras CvBool cv3dTrackerCalibrateCameras(int num_cameras, const Cv3dTrackerCameraIntrinsics camera_intrinsics[], CvSize checkerboard_size, IplImage *samples[], Cv3dTrackerCameraInfo camera_info[]); </param>
            <param name="scanlines">Pointer to the array of scanlines data. The function cvPostWarpImage warps the resultant image from the virtual camera bystoring its rows across the scanlines whose coordinates are calculated by cvMakeAlphaScanlines . DeleteMoire Deletes moire in given image void cvDeleteMoire( IplImage* img ); </param>
        </member>
        <member name="M:CvAux.cvaux.CvDeleteMoire(CxCore.IplImage@)">
            <summary>
            Deletes moire in given image
            </summary>
            <param name="img">Image. The function cvDeleteMoire deletes moire from the given image. The post-warpedimage may have black (un-covered) points because of possible holes betweenneighboring scanlines. The function deletes moire (black pixels) from the imageby substituting neighboring pixels for black pixels. If all the scanlines arehorizontal, the function may be omitted. 3D Tracking Functions The section discusses functions for tracking objects in 3d space using a stereo camera.Besides C API, there is DirectShow 3dTracker filterand the wrapper application 3dTracker . Here you may find a description how to test the filter on sample data. 3dTrackerCalibrateCameras Simultaneously determines position and orientation of multiple cameras CvBool cv3dTrackerCalibrateCameras(int num_cameras, const Cv3dTrackerCameraIntrinsics camera_intrinsics[], CvSize checkerboard_size, IplImage *samples[], Cv3dTrackerCameraInfo camera_info[]); </param>
        </member>
        <member name="M:CvAux.cvaux.CvReleaseBGStatModel(CvAux.CvFGDStatModel@)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="bg_model">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.CvUpdateBGStatModel(CxCore.IplImage@,CvAux.CvFGDStatModel@)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="current_frame">No comment available for this member. Please check the openCV documenation.</param>
            <param name="bg_model">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.CvRefineForegroundMaskBySegm(CxCore.CvSeq@,CvAux.CvBGStatModel@)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="segments">No comment available for this member. Please check the openCV documenation.</param>
            <param name="bg_model">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.CvChangeDetection(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="prev_frame">No comment available for this member. Please check the openCV documenation.</param>
            <param name="curr_frame">No comment available for this member. Please check the openCV documenation.</param>
            <param name="change_mask">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.CvCreateFGDStatModel(CxCore.IplImage@,CvAux.CvFGDStatModelParams@)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="first_frame">No comment available for this member. Please check the openCV documenation.</param>
            <param name="parameters">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.CvCreateFGDStatModel(CxCore.IplImage@)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="first_frame">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.CvCreateGaussianBGModel(CxCore.IplImage@,CvAux.CvGaussBGStatModelParams@)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="first_frame">No comment available for this member. Please check the openCV documenation.</param>
            <param name="parameters">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.cvaux.CvCreateGaussianBGModel(CxCore.IplImage@)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="first_frame">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="T:CvAux.cvaux.CvReleaseBGStatModelFunc">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="ptr">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="T:CvAux.cvaux.CvUpdateBGStatModelFunc">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="curr_frame">No comment available for this member. Please check the openCV documenation.</param>
            <param name="bg_model">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="T:MachineLearning.CvNormalBayesClassifier">
            <summary>
            Bayes classifier for normally distributed data
            </summary>
        </member>
        <member name="M:MachineLearning.CvNormalBayesClassifier.Finalize">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvNormalBayesClassifier.Dispose">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvNormalBayesClassifier.train(CxCore.CvMat,CxCore.CvMat,System.Boolean)">
            <summary>
            Trains the model
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
            <param name="update">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvNormalBayesClassifier.#ctor">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvNormalBayesClassifier.#ctor(CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_sample_idx">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvNormalBayesClassifier.#ctor(CxCore.CvMat,CxCore.CvMat,CxCore.CvMat)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_idx">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvNormalBayesClassifier.#ctor(CxCore.CvMat,CxCore.CvMat)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvNormalBayesClassifier.train(CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,System.Boolean)">
            <summary>
            Trains the model
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_sample_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="update">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvNormalBayesClassifier.train(CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat)">
            <summary>
            Trains the model
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_sample_idx">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvNormalBayesClassifier.train(CxCore.CvMat,CxCore.CvMat,CxCore.CvMat)">
            <summary>
            Trains the model
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_idx">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvNormalBayesClassifier.train(CxCore.CvMat,CxCore.CvMat)">
            <summary>
            Trains the model
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvNormalBayesClassifier.predict(CxCore.CvMat,CxCore.CvMat)">
            <summary>
            Predicts the response for sample(s)
            </summary>
            <param name="_samples">No comment available for this member. Please check the openCV documenation.</param>
            <param name="results">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvNormalBayesClassifier.predict(CxCore.CvMat)">
            <summary>
            Predicts the response for sample(s)
            </summary>
            <param name="_samples">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvNormalBayesClassifier.clear">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="T:Cv.cv">
            <summary>
            OpenCV routines.
            </summary>
        </member>
        <member name="F:Cv.cv.CV_BLUR_NO_SCALE">
            <summary>
            Value = 0. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cv.CV_BLUR">
            <summary>
            Value = 1. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cv.CV_GAUSSIAN">
            <summary>
            Value = 2. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cv.CV_MEDIAN">
            <summary>
            Value = 3. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cv.CV_BILATERAL">
            <summary>
            Value = 4. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cv.CV_INPAINT_NS">
            <summary>
            Value = 0. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cv.CV_INPAINT_TELEA">
            <summary>
            Value = 1. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cv.CV_SCHARR">
            <summary>
            Value = -1. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cv.CV_MAX_SOBEL_KSIZE">
            <summary>
            Value = 7. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cv.CV_INTER_NN">
            <summary>
            Value = 0. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cv.CV_INTER_LINEAR">
            <summary>
            Value = 1. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cv.CV_INTER_CUBIC">
            <summary>
            Value = 2. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cv.CV_INTER_AREA">
            <summary>
            Value = 3. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cv.CV_WARP_FILL_OUTLIERS">
            <summary>
            Value = 8. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cv.CV_WARP_INVERSE_MAP">
            <summary>
            Value = 16. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cv.CV_MOP_OPEN">
            <summary>
            Value = 2. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cv.CV_MOP_CLOSE">
            <summary>
            Value = 3. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cv.CV_MOP_GRADIENT">
            <summary>
            Value = 4. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cv.CV_MOP_TOPHAT">
            <summary>
            Value = 5. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cv.CV_MOP_BLACKHAT">
            <summary>
            Value = 6. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cv.CV_TM_SQDIFF">
            <summary>
            Value = 0. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cv.CV_TM_SQDIFF_NORMED">
            <summary>
            Value = 1. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cv.CV_TM_CCORR">
            <summary>
            Value = 2. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cv.CV_TM_CCORR_NORMED">
            <summary>
            Value = 3. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cv.CV_TM_CCOEFF">
            <summary>
            Value = 4. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cv.CV_TM_CCOEFF_NORMED">
            <summary>
            Value = 5. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cv.CV_LKFLOW_PYR_A_READY">
            <summary>
            Value = 1. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cv.CV_LKFLOW_PYR_B_READY">
            <summary>
            Value = 2. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cv.CV_LKFLOW_INITIAL_GUESSES">
            <summary>
            Value = 4. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cv.CV_POLY_APPROX_DP">
            <summary>
            Value = 0. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cv.CV_DOMINANT_IPAN">
            <summary>
            Value = 1. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cv.CV_CONTOURS_MATCH_I1">
            <summary>
            Value = 1. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cv.CV_CONTOURS_MATCH_I2">
            <summary>
            Value = 2. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cv.CV_CONTOURS_MATCH_I3">
            <summary>
            Value = 3. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cv.CV_CONTOUR_TREES_MATCH_I1">
            <summary>
            Value = 1. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cv.CV_CLOCKWISE">
            <summary>
            Value = 1. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cv.CV_COUNTER_CLOCKWISE">
            <summary>
            Value = 2. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cv.CV_COMP_CORREL">
            <summary>
            Value = 0. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cv.CV_COMP_CHISQR">
            <summary>
            Value = 1. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cv.CV_COMP_INTERSECT">
            <summary>
            Value = 2. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cv.CV_COMP_BHATTACHARYYA">
            <summary>
            Value = 3. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cv.CV_VALUE">
            <summary>
            Value = 1. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cv.CV_ARRAY">
            <summary>
            Value = 2. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cv.CV_DIST_MASK_3">
            <summary>
            Value = 3. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cv.CV_DIST_MASK_5">
            <summary>
            Value = 5. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cv.CV_DIST_MASK_PRECISE">
            <summary>
            Value = 0. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cv.CV_CALIB_CB_ADAPTIVE_THRESH">
            <summary>
            Value = 1. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cv.CV_CALIB_CB_NORMALIZE_IMAGE">
            <summary>
            Value = 2. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cv.CV_CALIB_CB_FILTER_QUADS">
            <summary>
            Value = 4. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cv.CV_THRESH_BINARY">
            <summary>
            Value = 0. value = value threshold max_value 0 
            </summary>
        </member>
        <member name="F:Cv.cv.CV_THRESH_BINARY_INV">
            <summary>
            Value = 1. value = value threshold 0 max_value 
            </summary>
        </member>
        <member name="F:Cv.cv.CV_THRESH_TRUNC">
            <summary>
            Value = 2. value = value threshold threshold value 
            </summary>
        </member>
        <member name="F:Cv.cv.CV_THRESH_TOZERO">
            <summary>
            Value = 3. value = value threshold value 0 
            </summary>
        </member>
        <member name="F:Cv.cv.CV_THRESH_TOZERO_INV">
            <summary>
            Value = 4. value = value threshold 0 value 
            </summary>
        </member>
        <member name="F:Cv.cv.CV_THRESH_MASK">
            <summary>
            Value = 7. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cv.CV_THRESH_OTSU">
            <summary>
            Value = 8. use Otsu algorithm to choose the optimal threshold value 
            combine the flag with one of the above CV_THRESH_ values 
            </summary>
        </member>
        <member name="F:Cv.cv.CV_ADAPTIVE_THRESH_MEAN_C">
            <summary>
            Value = 0. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cv.CV_ADAPTIVE_THRESH_GAUSSIAN_C">
            <summary>
            Value = 1. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cv.CV_FLOODFILL_FIXED_RANGE">
            <summary>
            Value = (1&lt;&lt;16). No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cv.CV_FLOODFILL_MASK_ONLY">
            <summary>
            Value = (1&lt;&lt;17). No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cv.CV_CANNY_L2_GRADIENT">
            <summary>
            Value = (1&lt;&lt;31). No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cv.CV_HOUGH_STANDARD">
            <summary>
            Value = 0. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cv.CV_HOUGH_PROBABILISTIC">
            <summary>
            Value = 1. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cv.CV_HOUGH_MULTI_SCALE">
            <summary>
            Value = 2. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cv.CV_HOUGH_GRADIENT">
            <summary>
            Value = 3. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cv.CV_HAAR_DO_CANNY_PRUNING">
            <summary>
            Value = 1. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cv.CV_HAAR_SCALE_IMAGE">
            <summary>
            Value = 2. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cv.CV_CALIB_USE_INTRINSIC_GUESS">
            <summary>
            Value = 1. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cv.CV_CALIB_FIX_ASPECT_RATIO">
            <summary>
            Value = 2. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cv.CV_CALIB_FIX_PRINCIPAL_POINT">
            <summary>
            Value = 4. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cv.CV_CALIB_ZERO_TANGENT_DIST">
            <summary>
            Value = 8. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cv.CV_FM_7POINT">
            <summary>
            Value = 1. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cv.CV_FM_8POINT">
            <summary>
            Value = 2. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cv.CV_FM_LMEDS_ONLY">
            <summary>
            Value = 4. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cv.CV_FM_RANSAC_ONLY">
            <summary>
            Value = 8. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cv.CV_FM_LMEDS">
            <summary>
            Value = (CV_FM_LMEDS_ONLY+CV_FM_8POINT). No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cv.CV_FM_RANSAC">
            <summary>
            Value = (CV_FM_RANSAC_ONLY+CV_FM_8POINT). No comment available for this member.
            </summary>
        </member>
        <member name="M:Cv.cv.CvSobel(CxCore.IplImage@,CxCore.IplImage@,System.Int32,System.Int32,System.Int32)">
            <summary>
            Calculates first, second, third or mixed image derivatives using extended Sobel operator
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="xorder">Order of the derivative x . </param>
            <param name="yorder">Order of the derivative y . </param>
            <param name="aperture_size">Size of the extended Sobel kernel, must be 1, 3, 5 or 7.In all cases except 1, aperture_size �aperture_size separable kernel will be used to calculatethe derivative. For aperture_size CV_SCHARR </param>
        </member>
        <member name="M:Cv.cv.CvSobel(CxCore.IplImage@,CxCore.IplImage@,System.Int32,System.Int32)">
            <summary>
            Calculates first, second, third or mixed image derivatives using extended Sobel operator
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="xorder">Order of the derivative x . </param>
            <param name="yorder">Order of the derivative y . </param>
        </member>
        <member name="M:Cv.cv.CvSobel(CxCore.CvMat@,CxCore.CvMat@,System.Int32,System.Int32,System.Int32)">
            <summary>
            Calculates first, second, third or mixed image derivatives using extended Sobel operator
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="xorder">Order of the derivative x . </param>
            <param name="yorder">Order of the derivative y . </param>
            <param name="aperture_size">Size of the extended Sobel kernel, must be 1, 3, 5 or 7.In all cases except 1, aperture_size �aperture_size separable kernel will be used to calculatethe derivative. For aperture_size CV_SCHARR </param>
        </member>
        <member name="M:Cv.cv.CvSobel(CxCore.CvMat@,CxCore.CvMat@,System.Int32,System.Int32)">
            <summary>
            Calculates first, second, third or mixed image derivatives using extended Sobel operator
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="xorder">Order of the derivative x . </param>
            <param name="yorder">Order of the derivative y . </param>
        </member>
        <member name="M:Cv.cv.CvSobel(CxCore.CvSeq@,CxCore.CvSeq@,System.Int32,System.Int32,System.Int32)">
            <summary>
            Calculates first, second, third or mixed image derivatives using extended Sobel operator
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="xorder">Order of the derivative x . </param>
            <param name="yorder">Order of the derivative y . </param>
            <param name="aperture_size">Size of the extended Sobel kernel, must be 1, 3, 5 or 7.In all cases except 1, aperture_size �aperture_size separable kernel will be used to calculatethe derivative. For aperture_size CV_SCHARR </param>
        </member>
        <member name="M:Cv.cv.CvSobel(CxCore.CvSeq@,CxCore.CvSeq@,System.Int32,System.Int32)">
            <summary>
            Calculates first, second, third or mixed image derivatives using extended Sobel operator
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="xorder">Order of the derivative x . </param>
            <param name="yorder">Order of the derivative y . </param>
        </member>
        <member name="M:Cv.cv.CvLaplace(CxCore.IplImage@,CxCore.IplImage@,System.Int32)">
            <summary>
            Calculates Laplacian of the image
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="aperture_size">Aperture size (it has the same meaning as in </param>
        </member>
        <member name="M:Cv.cv.CvLaplace(CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Calculates Laplacian of the image
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
        </member>
        <member name="M:Cv.cv.CvLaplace(CxCore.CvMat@,CxCore.CvMat@,System.Int32)">
            <summary>
            Calculates Laplacian of the image
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="aperture_size">Aperture size (it has the same meaning as in </param>
        </member>
        <member name="M:Cv.cv.CvLaplace(CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Calculates Laplacian of the image
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
        </member>
        <member name="M:Cv.cv.CvLaplace(CxCore.CvSeq@,CxCore.CvSeq@,System.Int32)">
            <summary>
            Calculates Laplacian of the image
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="aperture_size">Aperture size (it has the same meaning as in </param>
        </member>
        <member name="M:Cv.cv.CvLaplace(CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Calculates Laplacian of the image
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
        </member>
        <member name="M:Cv.cv.CvCanny(CxCore.IplImage@,CxCore.IplImage@,System.Double,System.Double,System.Int32)">
            <summary>
            Implements Canny algorithm for edge detection
            </summary>
            <param name="image">Input image. </param>
            <param name="edges">Image to store the edges found by the function. </param>
            <param name="threshold1">The first threshold. </param>
            <param name="threshold2">The second threshold. </param>
            <param name="aperture_size">Aperture parameter for Sobel operator (see </param>
        </member>
        <member name="M:Cv.cv.CvCanny(CxCore.IplImage@,CxCore.IplImage@,System.Double,System.Double)">
            <summary>
            Implements Canny algorithm for edge detection
            </summary>
            <param name="image">Input image. </param>
            <param name="edges">Image to store the edges found by the function. </param>
            <param name="threshold1">The first threshold. </param>
            <param name="threshold2">The second threshold. </param>
        </member>
        <member name="M:Cv.cv.CvCanny(CxCore.CvMat@,CxCore.CvMat@,System.Double,System.Double,System.Int32)">
            <summary>
            Implements Canny algorithm for edge detection
            </summary>
            <param name="image">Input image. </param>
            <param name="edges">Image to store the edges found by the function. </param>
            <param name="threshold1">The first threshold. </param>
            <param name="threshold2">The second threshold. </param>
            <param name="aperture_size">Aperture parameter for Sobel operator (see </param>
        </member>
        <member name="M:Cv.cv.CvCanny(CxCore.CvMat@,CxCore.CvMat@,System.Double,System.Double)">
            <summary>
            Implements Canny algorithm for edge detection
            </summary>
            <param name="image">Input image. </param>
            <param name="edges">Image to store the edges found by the function. </param>
            <param name="threshold1">The first threshold. </param>
            <param name="threshold2">The second threshold. </param>
        </member>
        <member name="M:Cv.cv.CvCanny(CxCore.CvSeq@,CxCore.CvSeq@,System.Double,System.Double,System.Int32)">
            <summary>
            Implements Canny algorithm for edge detection
            </summary>
            <param name="image">Input image. </param>
            <param name="edges">Image to store the edges found by the function. </param>
            <param name="threshold1">The first threshold. </param>
            <param name="threshold2">The second threshold. </param>
            <param name="aperture_size">Aperture parameter for Sobel operator (see </param>
        </member>
        <member name="M:Cv.cv.CvCanny(CxCore.CvSeq@,CxCore.CvSeq@,System.Double,System.Double)">
            <summary>
            Implements Canny algorithm for edge detection
            </summary>
            <param name="image">Input image. </param>
            <param name="edges">Image to store the edges found by the function. </param>
            <param name="threshold1">The first threshold. </param>
            <param name="threshold2">The second threshold. </param>
        </member>
        <member name="M:Cv.cv.CvPreCornerDetect(CxCore.IplImage@,CxCore.IplImage@,System.Int32)">
            <summary>
            Calculates feature map for corner detection
            </summary>
            <param name="image">Input image. </param>
            <param name="corners">Image to store the corner candidates. </param>
            <param name="aperture_size">Aperture parameter for Sobel operator (see </param>
        </member>
        <member name="M:Cv.cv.CvPreCornerDetect(CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Calculates feature map for corner detection
            </summary>
            <param name="image">Input image. </param>
            <param name="corners">Image to store the corner candidates. </param>
        </member>
        <member name="M:Cv.cv.CvPreCornerDetect(CxCore.CvMat@,CxCore.CvMat@,System.Int32)">
            <summary>
            Calculates feature map for corner detection
            </summary>
            <param name="image">Input image. </param>
            <param name="corners">Image to store the corner candidates. </param>
            <param name="aperture_size">Aperture parameter for Sobel operator (see </param>
        </member>
        <member name="M:Cv.cv.CvPreCornerDetect(CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Calculates feature map for corner detection
            </summary>
            <param name="image">Input image. </param>
            <param name="corners">Image to store the corner candidates. </param>
        </member>
        <member name="M:Cv.cv.CvPreCornerDetect(CxCore.CvSeq@,CxCore.CvSeq@,System.Int32)">
            <summary>
            Calculates feature map for corner detection
            </summary>
            <param name="image">Input image. </param>
            <param name="corners">Image to store the corner candidates. </param>
            <param name="aperture_size">Aperture parameter for Sobel operator (see </param>
        </member>
        <member name="M:Cv.cv.CvPreCornerDetect(CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Calculates feature map for corner detection
            </summary>
            <param name="image">Input image. </param>
            <param name="corners">Image to store the corner candidates. </param>
        </member>
        <member name="M:Cv.cv.CvCornerEigenValsAndVecs(CxCore.IplImage@,CxCore.IplImage@,System.Int32,System.Int32)">
            <summary>
            Calculates eigenvalues and eigenvectors of image blocks for corner detection
            </summary>
            <param name="image">Input image. </param>
            <param name="eigenvv">Image to store the results. It must be 6 times wider than the input image. </param>
            <param name="block_size">Neighborhood size (see discussion). </param>
            <param name="aperture_size">Aperture parameter for Sobel operator (see </param>
        </member>
        <member name="M:Cv.cv.CvCornerEigenValsAndVecs(CxCore.IplImage@,CxCore.IplImage@,System.Int32)">
            <summary>
            Calculates eigenvalues and eigenvectors of image blocks for corner detection
            </summary>
            <param name="image">Input image. </param>
            <param name="eigenvv">Image to store the results. It must be 6 times wider than the input image. </param>
            <param name="block_size">Neighborhood size (see discussion). </param>
        </member>
        <member name="M:Cv.cv.CvCornerEigenValsAndVecs(CxCore.CvMat@,CxCore.CvMat@,System.Int32,System.Int32)">
            <summary>
            Calculates eigenvalues and eigenvectors of image blocks for corner detection
            </summary>
            <param name="image">Input image. </param>
            <param name="eigenvv">Image to store the results. It must be 6 times wider than the input image. </param>
            <param name="block_size">Neighborhood size (see discussion). </param>
            <param name="aperture_size">Aperture parameter for Sobel operator (see </param>
        </member>
        <member name="M:Cv.cv.CvCornerEigenValsAndVecs(CxCore.CvMat@,CxCore.CvMat@,System.Int32)">
            <summary>
            Calculates eigenvalues and eigenvectors of image blocks for corner detection
            </summary>
            <param name="image">Input image. </param>
            <param name="eigenvv">Image to store the results. It must be 6 times wider than the input image. </param>
            <param name="block_size">Neighborhood size (see discussion). </param>
        </member>
        <member name="M:Cv.cv.CvCornerEigenValsAndVecs(CxCore.CvSeq@,CxCore.CvSeq@,System.Int32,System.Int32)">
            <summary>
            Calculates eigenvalues and eigenvectors of image blocks for corner detection
            </summary>
            <param name="image">Input image. </param>
            <param name="eigenvv">Image to store the results. It must be 6 times wider than the input image. </param>
            <param name="block_size">Neighborhood size (see discussion). </param>
            <param name="aperture_size">Aperture parameter for Sobel operator (see </param>
        </member>
        <member name="M:Cv.cv.CvCornerEigenValsAndVecs(CxCore.CvSeq@,CxCore.CvSeq@,System.Int32)">
            <summary>
            Calculates eigenvalues and eigenvectors of image blocks for corner detection
            </summary>
            <param name="image">Input image. </param>
            <param name="eigenvv">Image to store the results. It must be 6 times wider than the input image. </param>
            <param name="block_size">Neighborhood size (see discussion). </param>
        </member>
        <member name="M:Cv.cv.CvCornerMinEigenVal(CxCore.IplImage@,CxCore.IplImage@,System.Int32,System.Int32)">
            <summary>
            Calculates minimal eigenvalue of gradient matrices for corner detection
            </summary>
            <param name="image">Input image. </param>
            <param name="eigenval">Image to store the minimal eigen values. Should have the same size as image </param>
            <param name="block_size">Neighborhood size (see discussion of </param>
            <param name="aperture_size">Aperture parameter for Sobel operator (see </param>
        </member>
        <member name="M:Cv.cv.CvCornerMinEigenVal(CxCore.IplImage@,CxCore.IplImage@,System.Int32)">
            <summary>
            Calculates minimal eigenvalue of gradient matrices for corner detection
            </summary>
            <param name="image">Input image. </param>
            <param name="eigenval">Image to store the minimal eigen values. Should have the same size as image </param>
            <param name="block_size">Neighborhood size (see discussion of </param>
        </member>
        <member name="M:Cv.cv.CvCornerMinEigenVal(CxCore.CvMat@,CxCore.CvMat@,System.Int32,System.Int32)">
            <summary>
            Calculates minimal eigenvalue of gradient matrices for corner detection
            </summary>
            <param name="image">Input image. </param>
            <param name="eigenval">Image to store the minimal eigen values. Should have the same size as image </param>
            <param name="block_size">Neighborhood size (see discussion of </param>
            <param name="aperture_size">Aperture parameter for Sobel operator (see </param>
        </member>
        <member name="M:Cv.cv.CvCornerMinEigenVal(CxCore.CvMat@,CxCore.CvMat@,System.Int32)">
            <summary>
            Calculates minimal eigenvalue of gradient matrices for corner detection
            </summary>
            <param name="image">Input image. </param>
            <param name="eigenval">Image to store the minimal eigen values. Should have the same size as image </param>
            <param name="block_size">Neighborhood size (see discussion of </param>
        </member>
        <member name="M:Cv.cv.CvCornerMinEigenVal(CxCore.CvSeq@,CxCore.CvSeq@,System.Int32,System.Int32)">
            <summary>
            Calculates minimal eigenvalue of gradient matrices for corner detection
            </summary>
            <param name="image">Input image. </param>
            <param name="eigenval">Image to store the minimal eigen values. Should have the same size as image </param>
            <param name="block_size">Neighborhood size (see discussion of </param>
            <param name="aperture_size">Aperture parameter for Sobel operator (see </param>
        </member>
        <member name="M:Cv.cv.CvCornerMinEigenVal(CxCore.CvSeq@,CxCore.CvSeq@,System.Int32)">
            <summary>
            Calculates minimal eigenvalue of gradient matrices for corner detection
            </summary>
            <param name="image">Input image. </param>
            <param name="eigenval">Image to store the minimal eigen values. Should have the same size as image </param>
            <param name="block_size">Neighborhood size (see discussion of </param>
        </member>
        <member name="M:Cv.cv.CvCornerHarris(CxCore.IplImage@,CxCore.IplImage@,System.Int32,System.Int32,System.Double)">
            <summary>
            Harris edge detector
            </summary>
            <param name="image">Input image. </param>
            <param name="harris_responce">Image to store the Harris detector responces. Should have the same size as image </param>
            <param name="block_size">Neighborhood size (see discussion of </param>
            <param name="aperture_size">Aperture parameter for Sobel operator (see </param>
            <param name="k">Harris detector free parameter. See the formula below. </param>
        </member>
        <member name="M:Cv.cv.CvCornerHarris(CxCore.IplImage@,CxCore.IplImage@,System.Int32,System.Int32)">
            <summary>
            Harris edge detector
            </summary>
            <param name="image">Input image. </param>
            <param name="harris_responce">Image to store the Harris detector responces. Should have the same size as image </param>
            <param name="block_size">Neighborhood size (see discussion of </param>
            <param name="aperture_size">Aperture parameter for Sobel operator (see </param>
        </member>
        <member name="M:Cv.cv.CvCornerHarris(CxCore.IplImage@,CxCore.IplImage@,System.Int32)">
            <summary>
            Harris edge detector
            </summary>
            <param name="image">Input image. </param>
            <param name="harris_responce">Image to store the Harris detector responces. Should have the same size as image </param>
            <param name="block_size">Neighborhood size (see discussion of </param>
        </member>
        <member name="M:Cv.cv.CvCornerHarris(CxCore.IplImage@,CxCore.IplImage@,System.Int32,System.Double)">
            <summary>
            Harris edge detector
            </summary>
            <param name="image">Input image. </param>
            <param name="harris_responce">Image to store the Harris detector responces. Should have the same size as image </param>
            <param name="block_size">Neighborhood size (see discussion of </param>
            <param name="k">Harris detector free parameter. See the formula below. </param>
        </member>
        <member name="M:Cv.cv.CvCornerHarris(CxCore.CvMat@,CxCore.CvMat@,System.Int32,System.Int32,System.Double)">
            <summary>
            Harris edge detector
            </summary>
            <param name="image">Input image. </param>
            <param name="harris_responce">Image to store the Harris detector responces. Should have the same size as image </param>
            <param name="block_size">Neighborhood size (see discussion of </param>
            <param name="aperture_size">Aperture parameter for Sobel operator (see </param>
            <param name="k">Harris detector free parameter. See the formula below. </param>
        </member>
        <member name="M:Cv.cv.CvCornerHarris(CxCore.CvMat@,CxCore.CvMat@,System.Int32,System.Int32)">
            <summary>
            Harris edge detector
            </summary>
            <param name="image">Input image. </param>
            <param name="harris_responce">Image to store the Harris detector responces. Should have the same size as image </param>
            <param name="block_size">Neighborhood size (see discussion of </param>
            <param name="aperture_size">Aperture parameter for Sobel operator (see </param>
        </member>
        <member name="M:Cv.cv.CvCornerHarris(CxCore.CvMat@,CxCore.CvMat@,System.Int32)">
            <summary>
            Harris edge detector
            </summary>
            <param name="image">Input image. </param>
            <param name="harris_responce">Image to store the Harris detector responces. Should have the same size as image </param>
            <param name="block_size">Neighborhood size (see discussion of </param>
        </member>
        <member name="M:Cv.cv.CvCornerHarris(CxCore.CvMat@,CxCore.CvMat@,System.Int32,System.Double)">
            <summary>
            Harris edge detector
            </summary>
            <param name="image">Input image. </param>
            <param name="harris_responce">Image to store the Harris detector responces. Should have the same size as image </param>
            <param name="block_size">Neighborhood size (see discussion of </param>
            <param name="k">Harris detector free parameter. See the formula below. </param>
        </member>
        <member name="M:Cv.cv.CvCornerHarris(CxCore.CvSeq@,CxCore.CvSeq@,System.Int32,System.Int32,System.Double)">
            <summary>
            Harris edge detector
            </summary>
            <param name="image">Input image. </param>
            <param name="harris_responce">Image to store the Harris detector responces. Should have the same size as image </param>
            <param name="block_size">Neighborhood size (see discussion of </param>
            <param name="aperture_size">Aperture parameter for Sobel operator (see </param>
            <param name="k">Harris detector free parameter. See the formula below. </param>
        </member>
        <member name="M:Cv.cv.CvCornerHarris(CxCore.CvSeq@,CxCore.CvSeq@,System.Int32,System.Int32)">
            <summary>
            Harris edge detector
            </summary>
            <param name="image">Input image. </param>
            <param name="harris_responce">Image to store the Harris detector responces. Should have the same size as image </param>
            <param name="block_size">Neighborhood size (see discussion of </param>
            <param name="aperture_size">Aperture parameter for Sobel operator (see </param>
        </member>
        <member name="M:Cv.cv.CvCornerHarris(CxCore.CvSeq@,CxCore.CvSeq@,System.Int32)">
            <summary>
            Harris edge detector
            </summary>
            <param name="image">Input image. </param>
            <param name="harris_responce">Image to store the Harris detector responces. Should have the same size as image </param>
            <param name="block_size">Neighborhood size (see discussion of </param>
        </member>
        <member name="M:Cv.cv.CvCornerHarris(CxCore.CvSeq@,CxCore.CvSeq@,System.Int32,System.Double)">
            <summary>
            Harris edge detector
            </summary>
            <param name="image">Input image. </param>
            <param name="harris_responce">Image to store the Harris detector responces. Should have the same size as image </param>
            <param name="block_size">Neighborhood size (see discussion of </param>
            <param name="k">Harris detector free parameter. See the formula below. </param>
        </member>
        <member name="M:Cv.cv.CvFindCornerSubPix(CxCore.IplImage@,System.IntPtr,System.Int32,CxCore.CvSize,CxCore.CvSize,CxCore.CvTermCriteria)">
            <summary>
            Refines corner locations
            </summary>
            <param name="image">Input image. </param>
            <param name="corners">Initial coordinates of the input corners and refined coordinates onoutput. </param>
            <param name="count">Number of corners. </param>
            <param name="win">Half sizes of the search window. For example, if win </param>
            <param name="zero_zone">Half size of the dead region in the middle of the search zone over which thesummation in formulae below is not done. It is used sometimes to avoid possible singularities of the autocorrelation matrix.The value of (-1,-1) indicates that there is no such size. </param>
            <param name="criteria">Criteria for termination of the iterative process of corner refinement.That is, the process of corner position refinement stops either after certain number of iteration orwhen a required accuracy is achieved. The criteria </param>
        </member>
        <member name="M:Cv.cv.CvFindCornerSubPix(CxCore.CvMat@,System.IntPtr,System.Int32,CxCore.CvSize,CxCore.CvSize,CxCore.CvTermCriteria)">
            <summary>
            Refines corner locations
            </summary>
            <param name="image">Input image. </param>
            <param name="corners">Initial coordinates of the input corners and refined coordinates onoutput. </param>
            <param name="count">Number of corners. </param>
            <param name="win">Half sizes of the search window. For example, if win </param>
            <param name="zero_zone">Half size of the dead region in the middle of the search zone over which thesummation in formulae below is not done. It is used sometimes to avoid possible singularities of the autocorrelation matrix.The value of (-1,-1) indicates that there is no such size. </param>
            <param name="criteria">Criteria for termination of the iterative process of corner refinement.That is, the process of corner position refinement stops either after certain number of iteration orwhen a required accuracy is achieved. The criteria </param>
        </member>
        <member name="M:Cv.cv.CvFindCornerSubPix(CxCore.CvSeq@,System.IntPtr,System.Int32,CxCore.CvSize,CxCore.CvSize,CxCore.CvTermCriteria)">
            <summary>
            Refines corner locations
            </summary>
            <param name="image">Input image. </param>
            <param name="corners">Initial coordinates of the input corners and refined coordinates onoutput. </param>
            <param name="count">Number of corners. </param>
            <param name="win">Half sizes of the search window. For example, if win </param>
            <param name="zero_zone">Half size of the dead region in the middle of the search zone over which thesummation in formulae below is not done. It is used sometimes to avoid possible singularities of the autocorrelation matrix.The value of (-1,-1) indicates that there is no such size. </param>
            <param name="criteria">Criteria for termination of the iterative process of corner refinement.That is, the process of corner position refinement stops either after certain number of iteration orwhen a required accuracy is achieved. The criteria </param>
        </member>
        <member name="M:Cv.cv.CvGoodFeaturesToTrack(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@,System.IntPtr,System.Int32@,System.Double,System.Double,System.IntPtr,System.Int32,System.Int32,System.Double)">
            <summary>
            Determines strong corners on image
            </summary>
            <param name="image">The source 8-bit or floating-point 32-bit, single-channel image. </param>
            <param name="eig_image">Temporary floating-point 32-bit image of the same size as image </param>
            <param name="temp_image">Another temporary image of the same size and same format as eig_image </param>
            <param name="corners">Output parameter. Detected corners. </param>
            <param name="corner_count">Output parameter. Number of detected corners. </param>
            <param name="quality_level">Multiplier for the maxmin eigenvalue; specifies minimal acceptedquality of image corners. </param>
            <param name="min_distance">Limit, specifying minimum possible distance between returnedcorners; Euclidian distance is used. </param>
            <param name="mask">Region of interest. The function selects points either in the specified regionor in the whole image if the mask is NULL. </param>
            <param name="block_size">Size of the averaging block, passed to underlying </param>
            <param name="use_harris">If nonzero, Harris operator ( </param>
            <param name="k">Free parameter of Harris detector; used only if use_harris?0 </param>
        </member>
        <member name="M:Cv.cv.CvGoodFeaturesToTrack(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@,System.IntPtr,System.Int32@,System.Double,System.Double,System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Determines strong corners on image
            </summary>
            <param name="image">The source 8-bit or floating-point 32-bit, single-channel image. </param>
            <param name="eig_image">Temporary floating-point 32-bit image of the same size as image </param>
            <param name="temp_image">Another temporary image of the same size and same format as eig_image </param>
            <param name="corners">Output parameter. Detected corners. </param>
            <param name="corner_count">Output parameter. Number of detected corners. </param>
            <param name="quality_level">Multiplier for the maxmin eigenvalue; specifies minimal acceptedquality of image corners. </param>
            <param name="min_distance">Limit, specifying minimum possible distance between returnedcorners; Euclidian distance is used. </param>
            <param name="mask">Region of interest. The function selects points either in the specified regionor in the whole image if the mask is NULL. </param>
            <param name="block_size">Size of the averaging block, passed to underlying </param>
            <param name="use_harris">If nonzero, Harris operator ( </param>
        </member>
        <member name="M:Cv.cv.CvGoodFeaturesToTrack(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@,System.IntPtr,System.Int32@,System.Double,System.Double,System.IntPtr,System.Int32)">
            <summary>
            Determines strong corners on image
            </summary>
            <param name="image">The source 8-bit or floating-point 32-bit, single-channel image. </param>
            <param name="eig_image">Temporary floating-point 32-bit image of the same size as image </param>
            <param name="temp_image">Another temporary image of the same size and same format as eig_image </param>
            <param name="corners">Output parameter. Detected corners. </param>
            <param name="corner_count">Output parameter. Number of detected corners. </param>
            <param name="quality_level">Multiplier for the maxmin eigenvalue; specifies minimal acceptedquality of image corners. </param>
            <param name="min_distance">Limit, specifying minimum possible distance between returnedcorners; Euclidian distance is used. </param>
            <param name="mask">Region of interest. The function selects points either in the specified regionor in the whole image if the mask is NULL. </param>
            <param name="block_size">Size of the averaging block, passed to underlying </param>
        </member>
        <member name="M:Cv.cv.CvGoodFeaturesToTrack(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@,System.IntPtr,System.Int32@,System.Double,System.Double,System.IntPtr)">
            <summary>
            Determines strong corners on image
            </summary>
            <param name="image">The source 8-bit or floating-point 32-bit, single-channel image. </param>
            <param name="eig_image">Temporary floating-point 32-bit image of the same size as image </param>
            <param name="temp_image">Another temporary image of the same size and same format as eig_image </param>
            <param name="corners">Output parameter. Detected corners. </param>
            <param name="corner_count">Output parameter. Number of detected corners. </param>
            <param name="quality_level">Multiplier for the maxmin eigenvalue; specifies minimal acceptedquality of image corners. </param>
            <param name="min_distance">Limit, specifying minimum possible distance between returnedcorners; Euclidian distance is used. </param>
            <param name="mask">Region of interest. The function selects points either in the specified regionor in the whole image if the mask is NULL. </param>
        </member>
        <member name="M:Cv.cv.CvGoodFeaturesToTrack(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@,System.IntPtr,System.Int32@,System.Double,System.Double)">
            <summary>
            Determines strong corners on image
            </summary>
            <param name="image">The source 8-bit or floating-point 32-bit, single-channel image. </param>
            <param name="eig_image">Temporary floating-point 32-bit image of the same size as image </param>
            <param name="temp_image">Another temporary image of the same size and same format as eig_image </param>
            <param name="corners">Output parameter. Detected corners. </param>
            <param name="corner_count">Output parameter. Number of detected corners. </param>
            <param name="quality_level">Multiplier for the maxmin eigenvalue; specifies minimal acceptedquality of image corners. </param>
            <param name="min_distance">Limit, specifying minimum possible distance between returnedcorners; Euclidian distance is used. </param>
        </member>
        <member name="M:Cv.cv.CvGoodFeaturesToTrack(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@,System.IntPtr,System.Int32@,System.Double,System.Double,System.Int32,System.Int32,System.Double)">
            <summary>
            Determines strong corners on image
            </summary>
            <param name="image">The source 8-bit or floating-point 32-bit, single-channel image. </param>
            <param name="eig_image">Temporary floating-point 32-bit image of the same size as image </param>
            <param name="temp_image">Another temporary image of the same size and same format as eig_image </param>
            <param name="corners">Output parameter. Detected corners. </param>
            <param name="corner_count">Output parameter. Number of detected corners. </param>
            <param name="quality_level">Multiplier for the maxmin eigenvalue; specifies minimal acceptedquality of image corners. </param>
            <param name="min_distance">Limit, specifying minimum possible distance between returnedcorners; Euclidian distance is used. </param>
            <param name="block_size">Size of the averaging block, passed to underlying </param>
            <param name="use_harris">If nonzero, Harris operator ( </param>
            <param name="k">Free parameter of Harris detector; used only if use_harris?0 </param>
        </member>
        <member name="M:Cv.cv.CvGoodFeaturesToTrack(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@,System.IntPtr,System.Int32@,System.Double,System.Double,System.Int32,System.Int32)">
            <summary>
            Determines strong corners on image
            </summary>
            <param name="image">The source 8-bit or floating-point 32-bit, single-channel image. </param>
            <param name="eig_image">Temporary floating-point 32-bit image of the same size as image </param>
            <param name="temp_image">Another temporary image of the same size and same format as eig_image </param>
            <param name="corners">Output parameter. Detected corners. </param>
            <param name="corner_count">Output parameter. Number of detected corners. </param>
            <param name="quality_level">Multiplier for the maxmin eigenvalue; specifies minimal acceptedquality of image corners. </param>
            <param name="min_distance">Limit, specifying minimum possible distance between returnedcorners; Euclidian distance is used. </param>
            <param name="block_size">Size of the averaging block, passed to underlying </param>
            <param name="use_harris">If nonzero, Harris operator ( </param>
        </member>
        <member name="M:Cv.cv.CvGoodFeaturesToTrack(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@,System.IntPtr,System.Int32@,System.Double,System.Double,System.Int32)">
            <summary>
            Determines strong corners on image
            </summary>
            <param name="image">The source 8-bit or floating-point 32-bit, single-channel image. </param>
            <param name="eig_image">Temporary floating-point 32-bit image of the same size as image </param>
            <param name="temp_image">Another temporary image of the same size and same format as eig_image </param>
            <param name="corners">Output parameter. Detected corners. </param>
            <param name="corner_count">Output parameter. Number of detected corners. </param>
            <param name="quality_level">Multiplier for the maxmin eigenvalue; specifies minimal acceptedquality of image corners. </param>
            <param name="min_distance">Limit, specifying minimum possible distance between returnedcorners; Euclidian distance is used. </param>
            <param name="block_size">Size of the averaging block, passed to underlying </param>
        </member>
        <member name="M:Cv.cv.CvGoodFeaturesToTrack(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,System.IntPtr,System.Int32@,System.Double,System.Double,System.IntPtr,System.Int32,System.Int32,System.Double)">
            <summary>
            Determines strong corners on image
            </summary>
            <param name="image">The source 8-bit or floating-point 32-bit, single-channel image. </param>
            <param name="eig_image">Temporary floating-point 32-bit image of the same size as image </param>
            <param name="temp_image">Another temporary image of the same size and same format as eig_image </param>
            <param name="corners">Output parameter. Detected corners. </param>
            <param name="corner_count">Output parameter. Number of detected corners. </param>
            <param name="quality_level">Multiplier for the maxmin eigenvalue; specifies minimal acceptedquality of image corners. </param>
            <param name="min_distance">Limit, specifying minimum possible distance between returnedcorners; Euclidian distance is used. </param>
            <param name="mask">Region of interest. The function selects points either in the specified regionor in the whole image if the mask is NULL. </param>
            <param name="block_size">Size of the averaging block, passed to underlying </param>
            <param name="use_harris">If nonzero, Harris operator ( </param>
            <param name="k">Free parameter of Harris detector; used only if use_harris?0 </param>
        </member>
        <member name="M:Cv.cv.CvGoodFeaturesToTrack(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,System.IntPtr,System.Int32@,System.Double,System.Double,System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Determines strong corners on image
            </summary>
            <param name="image">The source 8-bit or floating-point 32-bit, single-channel image. </param>
            <param name="eig_image">Temporary floating-point 32-bit image of the same size as image </param>
            <param name="temp_image">Another temporary image of the same size and same format as eig_image </param>
            <param name="corners">Output parameter. Detected corners. </param>
            <param name="corner_count">Output parameter. Number of detected corners. </param>
            <param name="quality_level">Multiplier for the maxmin eigenvalue; specifies minimal acceptedquality of image corners. </param>
            <param name="min_distance">Limit, specifying minimum possible distance between returnedcorners; Euclidian distance is used. </param>
            <param name="mask">Region of interest. The function selects points either in the specified regionor in the whole image if the mask is NULL. </param>
            <param name="block_size">Size of the averaging block, passed to underlying </param>
            <param name="use_harris">If nonzero, Harris operator ( </param>
        </member>
        <member name="M:Cv.cv.CvGoodFeaturesToTrack(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,System.IntPtr,System.Int32@,System.Double,System.Double,System.IntPtr,System.Int32)">
            <summary>
            Determines strong corners on image
            </summary>
            <param name="image">The source 8-bit or floating-point 32-bit, single-channel image. </param>
            <param name="eig_image">Temporary floating-point 32-bit image of the same size as image </param>
            <param name="temp_image">Another temporary image of the same size and same format as eig_image </param>
            <param name="corners">Output parameter. Detected corners. </param>
            <param name="corner_count">Output parameter. Number of detected corners. </param>
            <param name="quality_level">Multiplier for the maxmin eigenvalue; specifies minimal acceptedquality of image corners. </param>
            <param name="min_distance">Limit, specifying minimum possible distance between returnedcorners; Euclidian distance is used. </param>
            <param name="mask">Region of interest. The function selects points either in the specified regionor in the whole image if the mask is NULL. </param>
            <param name="block_size">Size of the averaging block, passed to underlying </param>
        </member>
        <member name="M:Cv.cv.CvGoodFeaturesToTrack(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,System.IntPtr,System.Int32@,System.Double,System.Double,System.IntPtr)">
            <summary>
            Determines strong corners on image
            </summary>
            <param name="image">The source 8-bit or floating-point 32-bit, single-channel image. </param>
            <param name="eig_image">Temporary floating-point 32-bit image of the same size as image </param>
            <param name="temp_image">Another temporary image of the same size and same format as eig_image </param>
            <param name="corners">Output parameter. Detected corners. </param>
            <param name="corner_count">Output parameter. Number of detected corners. </param>
            <param name="quality_level">Multiplier for the maxmin eigenvalue; specifies minimal acceptedquality of image corners. </param>
            <param name="min_distance">Limit, specifying minimum possible distance between returnedcorners; Euclidian distance is used. </param>
            <param name="mask">Region of interest. The function selects points either in the specified regionor in the whole image if the mask is NULL. </param>
        </member>
        <member name="M:Cv.cv.CvGoodFeaturesToTrack(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,System.IntPtr,System.Int32@,System.Double,System.Double)">
            <summary>
            Determines strong corners on image
            </summary>
            <param name="image">The source 8-bit or floating-point 32-bit, single-channel image. </param>
            <param name="eig_image">Temporary floating-point 32-bit image of the same size as image </param>
            <param name="temp_image">Another temporary image of the same size and same format as eig_image </param>
            <param name="corners">Output parameter. Detected corners. </param>
            <param name="corner_count">Output parameter. Number of detected corners. </param>
            <param name="quality_level">Multiplier for the maxmin eigenvalue; specifies minimal acceptedquality of image corners. </param>
            <param name="min_distance">Limit, specifying minimum possible distance between returnedcorners; Euclidian distance is used. </param>
        </member>
        <member name="M:Cv.cv.CvGoodFeaturesToTrack(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,System.IntPtr,System.Int32@,System.Double,System.Double,System.Int32,System.Int32,System.Double)">
            <summary>
            Determines strong corners on image
            </summary>
            <param name="image">The source 8-bit or floating-point 32-bit, single-channel image. </param>
            <param name="eig_image">Temporary floating-point 32-bit image of the same size as image </param>
            <param name="temp_image">Another temporary image of the same size and same format as eig_image </param>
            <param name="corners">Output parameter. Detected corners. </param>
            <param name="corner_count">Output parameter. Number of detected corners. </param>
            <param name="quality_level">Multiplier for the maxmin eigenvalue; specifies minimal acceptedquality of image corners. </param>
            <param name="min_distance">Limit, specifying minimum possible distance between returnedcorners; Euclidian distance is used. </param>
            <param name="block_size">Size of the averaging block, passed to underlying </param>
            <param name="use_harris">If nonzero, Harris operator ( </param>
            <param name="k">Free parameter of Harris detector; used only if use_harris?0 </param>
        </member>
        <member name="M:Cv.cv.CvGoodFeaturesToTrack(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,System.IntPtr,System.Int32@,System.Double,System.Double,System.Int32,System.Int32)">
            <summary>
            Determines strong corners on image
            </summary>
            <param name="image">The source 8-bit or floating-point 32-bit, single-channel image. </param>
            <param name="eig_image">Temporary floating-point 32-bit image of the same size as image </param>
            <param name="temp_image">Another temporary image of the same size and same format as eig_image </param>
            <param name="corners">Output parameter. Detected corners. </param>
            <param name="corner_count">Output parameter. Number of detected corners. </param>
            <param name="quality_level">Multiplier for the maxmin eigenvalue; specifies minimal acceptedquality of image corners. </param>
            <param name="min_distance">Limit, specifying minimum possible distance between returnedcorners; Euclidian distance is used. </param>
            <param name="block_size">Size of the averaging block, passed to underlying </param>
            <param name="use_harris">If nonzero, Harris operator ( </param>
        </member>
        <member name="M:Cv.cv.CvGoodFeaturesToTrack(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,System.IntPtr,System.Int32@,System.Double,System.Double,System.Int32)">
            <summary>
            Determines strong corners on image
            </summary>
            <param name="image">The source 8-bit or floating-point 32-bit, single-channel image. </param>
            <param name="eig_image">Temporary floating-point 32-bit image of the same size as image </param>
            <param name="temp_image">Another temporary image of the same size and same format as eig_image </param>
            <param name="corners">Output parameter. Detected corners. </param>
            <param name="corner_count">Output parameter. Number of detected corners. </param>
            <param name="quality_level">Multiplier for the maxmin eigenvalue; specifies minimal acceptedquality of image corners. </param>
            <param name="min_distance">Limit, specifying minimum possible distance between returnedcorners; Euclidian distance is used. </param>
            <param name="block_size">Size of the averaging block, passed to underlying </param>
        </member>
        <member name="M:Cv.cv.CvGoodFeaturesToTrack(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@,System.IntPtr,System.Int32@,System.Double,System.Double,System.IntPtr,System.Int32,System.Int32,System.Double)">
            <summary>
            Determines strong corners on image
            </summary>
            <param name="image">The source 8-bit or floating-point 32-bit, single-channel image. </param>
            <param name="eig_image">Temporary floating-point 32-bit image of the same size as image </param>
            <param name="temp_image">Another temporary image of the same size and same format as eig_image </param>
            <param name="corners">Output parameter. Detected corners. </param>
            <param name="corner_count">Output parameter. Number of detected corners. </param>
            <param name="quality_level">Multiplier for the maxmin eigenvalue; specifies minimal acceptedquality of image corners. </param>
            <param name="min_distance">Limit, specifying minimum possible distance between returnedcorners; Euclidian distance is used. </param>
            <param name="mask">Region of interest. The function selects points either in the specified regionor in the whole image if the mask is NULL. </param>
            <param name="block_size">Size of the averaging block, passed to underlying </param>
            <param name="use_harris">If nonzero, Harris operator ( </param>
            <param name="k">Free parameter of Harris detector; used only if use_harris?0 </param>
        </member>
        <member name="M:Cv.cv.CvGoodFeaturesToTrack(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@,System.IntPtr,System.Int32@,System.Double,System.Double,System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Determines strong corners on image
            </summary>
            <param name="image">The source 8-bit or floating-point 32-bit, single-channel image. </param>
            <param name="eig_image">Temporary floating-point 32-bit image of the same size as image </param>
            <param name="temp_image">Another temporary image of the same size and same format as eig_image </param>
            <param name="corners">Output parameter. Detected corners. </param>
            <param name="corner_count">Output parameter. Number of detected corners. </param>
            <param name="quality_level">Multiplier for the maxmin eigenvalue; specifies minimal acceptedquality of image corners. </param>
            <param name="min_distance">Limit, specifying minimum possible distance between returnedcorners; Euclidian distance is used. </param>
            <param name="mask">Region of interest. The function selects points either in the specified regionor in the whole image if the mask is NULL. </param>
            <param name="block_size">Size of the averaging block, passed to underlying </param>
            <param name="use_harris">If nonzero, Harris operator ( </param>
        </member>
        <member name="M:Cv.cv.CvGoodFeaturesToTrack(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@,System.IntPtr,System.Int32@,System.Double,System.Double,System.IntPtr,System.Int32)">
            <summary>
            Determines strong corners on image
            </summary>
            <param name="image">The source 8-bit or floating-point 32-bit, single-channel image. </param>
            <param name="eig_image">Temporary floating-point 32-bit image of the same size as image </param>
            <param name="temp_image">Another temporary image of the same size and same format as eig_image </param>
            <param name="corners">Output parameter. Detected corners. </param>
            <param name="corner_count">Output parameter. Number of detected corners. </param>
            <param name="quality_level">Multiplier for the maxmin eigenvalue; specifies minimal acceptedquality of image corners. </param>
            <param name="min_distance">Limit, specifying minimum possible distance between returnedcorners; Euclidian distance is used. </param>
            <param name="mask">Region of interest. The function selects points either in the specified regionor in the whole image if the mask is NULL. </param>
            <param name="block_size">Size of the averaging block, passed to underlying </param>
        </member>
        <member name="M:Cv.cv.CvGoodFeaturesToTrack(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@,System.IntPtr,System.Int32@,System.Double,System.Double,System.IntPtr)">
            <summary>
            Determines strong corners on image
            </summary>
            <param name="image">The source 8-bit or floating-point 32-bit, single-channel image. </param>
            <param name="eig_image">Temporary floating-point 32-bit image of the same size as image </param>
            <param name="temp_image">Another temporary image of the same size and same format as eig_image </param>
            <param name="corners">Output parameter. Detected corners. </param>
            <param name="corner_count">Output parameter. Number of detected corners. </param>
            <param name="quality_level">Multiplier for the maxmin eigenvalue; specifies minimal acceptedquality of image corners. </param>
            <param name="min_distance">Limit, specifying minimum possible distance between returnedcorners; Euclidian distance is used. </param>
            <param name="mask">Region of interest. The function selects points either in the specified regionor in the whole image if the mask is NULL. </param>
        </member>
        <member name="M:Cv.cv.CvGoodFeaturesToTrack(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@,System.IntPtr,System.Int32@,System.Double,System.Double)">
            <summary>
            Determines strong corners on image
            </summary>
            <param name="image">The source 8-bit or floating-point 32-bit, single-channel image. </param>
            <param name="eig_image">Temporary floating-point 32-bit image of the same size as image </param>
            <param name="temp_image">Another temporary image of the same size and same format as eig_image </param>
            <param name="corners">Output parameter. Detected corners. </param>
            <param name="corner_count">Output parameter. Number of detected corners. </param>
            <param name="quality_level">Multiplier for the maxmin eigenvalue; specifies minimal acceptedquality of image corners. </param>
            <param name="min_distance">Limit, specifying minimum possible distance between returnedcorners; Euclidian distance is used. </param>
        </member>
        <member name="M:Cv.cv.CvGoodFeaturesToTrack(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@,System.IntPtr,System.Int32@,System.Double,System.Double,System.Int32,System.Int32,System.Double)">
            <summary>
            Determines strong corners on image
            </summary>
            <param name="image">The source 8-bit or floating-point 32-bit, single-channel image. </param>
            <param name="eig_image">Temporary floating-point 32-bit image of the same size as image </param>
            <param name="temp_image">Another temporary image of the same size and same format as eig_image </param>
            <param name="corners">Output parameter. Detected corners. </param>
            <param name="corner_count">Output parameter. Number of detected corners. </param>
            <param name="quality_level">Multiplier for the maxmin eigenvalue; specifies minimal acceptedquality of image corners. </param>
            <param name="min_distance">Limit, specifying minimum possible distance between returnedcorners; Euclidian distance is used. </param>
            <param name="block_size">Size of the averaging block, passed to underlying </param>
            <param name="use_harris">If nonzero, Harris operator ( </param>
            <param name="k">Free parameter of Harris detector; used only if use_harris?0 </param>
        </member>
        <member name="M:Cv.cv.CvGoodFeaturesToTrack(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@,System.IntPtr,System.Int32@,System.Double,System.Double,System.Int32,System.Int32)">
            <summary>
            Determines strong corners on image
            </summary>
            <param name="image">The source 8-bit or floating-point 32-bit, single-channel image. </param>
            <param name="eig_image">Temporary floating-point 32-bit image of the same size as image </param>
            <param name="temp_image">Another temporary image of the same size and same format as eig_image </param>
            <param name="corners">Output parameter. Detected corners. </param>
            <param name="corner_count">Output parameter. Number of detected corners. </param>
            <param name="quality_level">Multiplier for the maxmin eigenvalue; specifies minimal acceptedquality of image corners. </param>
            <param name="min_distance">Limit, specifying minimum possible distance between returnedcorners; Euclidian distance is used. </param>
            <param name="block_size">Size of the averaging block, passed to underlying </param>
            <param name="use_harris">If nonzero, Harris operator ( </param>
        </member>
        <member name="M:Cv.cv.CvGoodFeaturesToTrack(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@,System.IntPtr,System.Int32@,System.Double,System.Double,System.Int32)">
            <summary>
            Determines strong corners on image
            </summary>
            <param name="image">The source 8-bit or floating-point 32-bit, single-channel image. </param>
            <param name="eig_image">Temporary floating-point 32-bit image of the same size as image </param>
            <param name="temp_image">Another temporary image of the same size and same format as eig_image </param>
            <param name="corners">Output parameter. Detected corners. </param>
            <param name="corner_count">Output parameter. Number of detected corners. </param>
            <param name="quality_level">Multiplier for the maxmin eigenvalue; specifies minimal acceptedquality of image corners. </param>
            <param name="min_distance">Limit, specifying minimum possible distance between returnedcorners; Euclidian distance is used. </param>
            <param name="block_size">Size of the averaging block, passed to underlying </param>
        </member>
        <member name="M:Cv.cv.CvSampleLine(CxCore.IplImage@,CxCore.CvPoint,CxCore.CvPoint,System.IntPtr,System.Int32)">
            <summary>
            Reads raster line to buffer
            </summary>
            <param name="image">Image to sample the line from. </param>
            <param name="pt1">Starting the line point. </param>
            <param name="pt2">Ending the line point. </param>
            <param name="buffer">Buffer to store the line points; must have enough size to storemax( | pt2.x pt1.x pt2.y pt1.y pt2.x pt1.x pt2.y pt1.y </param>
            <param name="connectivity">The line connectivity, 4 or 8. </param>
        </member>
        <member name="M:Cv.cv.CvSampleLine(CxCore.IplImage@,CxCore.CvPoint,CxCore.CvPoint,System.IntPtr)">
            <summary>
            Reads raster line to buffer
            </summary>
            <param name="image">Image to sample the line from. </param>
            <param name="pt1">Starting the line point. </param>
            <param name="pt2">Ending the line point. </param>
            <param name="buffer">Buffer to store the line points; must have enough size to storemax( | pt2.x pt1.x pt2.y pt1.y pt2.x pt1.x pt2.y pt1.y </param>
        </member>
        <member name="M:Cv.cv.CvSampleLine(CxCore.CvMat@,CxCore.CvPoint,CxCore.CvPoint,System.IntPtr,System.Int32)">
            <summary>
            Reads raster line to buffer
            </summary>
            <param name="image">Image to sample the line from. </param>
            <param name="pt1">Starting the line point. </param>
            <param name="pt2">Ending the line point. </param>
            <param name="buffer">Buffer to store the line points; must have enough size to storemax( | pt2.x pt1.x pt2.y pt1.y pt2.x pt1.x pt2.y pt1.y </param>
            <param name="connectivity">The line connectivity, 4 or 8. </param>
        </member>
        <member name="M:Cv.cv.CvSampleLine(CxCore.CvMat@,CxCore.CvPoint,CxCore.CvPoint,System.IntPtr)">
            <summary>
            Reads raster line to buffer
            </summary>
            <param name="image">Image to sample the line from. </param>
            <param name="pt1">Starting the line point. </param>
            <param name="pt2">Ending the line point. </param>
            <param name="buffer">Buffer to store the line points; must have enough size to storemax( | pt2.x pt1.x pt2.y pt1.y pt2.x pt1.x pt2.y pt1.y </param>
        </member>
        <member name="M:Cv.cv.CvSampleLine(CxCore.CvSeq@,CxCore.CvPoint,CxCore.CvPoint,System.IntPtr,System.Int32)">
            <summary>
            Reads raster line to buffer
            </summary>
            <param name="image">Image to sample the line from. </param>
            <param name="pt1">Starting the line point. </param>
            <param name="pt2">Ending the line point. </param>
            <param name="buffer">Buffer to store the line points; must have enough size to storemax( | pt2.x pt1.x pt2.y pt1.y pt2.x pt1.x pt2.y pt1.y </param>
            <param name="connectivity">The line connectivity, 4 or 8. </param>
        </member>
        <member name="M:Cv.cv.CvSampleLine(CxCore.CvSeq@,CxCore.CvPoint,CxCore.CvPoint,System.IntPtr)">
            <summary>
            Reads raster line to buffer
            </summary>
            <param name="image">Image to sample the line from. </param>
            <param name="pt1">Starting the line point. </param>
            <param name="pt2">Ending the line point. </param>
            <param name="buffer">Buffer to store the line points; must have enough size to storemax( | pt2.x pt1.x pt2.y pt1.y pt2.x pt1.x pt2.y pt1.y </param>
        </member>
        <member name="M:Cv.cv.CvGetRectSubPix(CxCore.IplImage@,CxCore.IplImage@,CxCore.CvPoint2D32f)">
            <summary>
            Retrieves pixel rectangle from image with sub-pixel accuracy
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Extracted rectangle. </param>
            <param name="center">Floating point coordinates of the extracted rectangle center within the source image.The center must be inside the image. </param>
        </member>
        <member name="M:Cv.cv.CvGetRectSubPix(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvPoint2D32f)">
            <summary>
            Retrieves pixel rectangle from image with sub-pixel accuracy
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Extracted rectangle. </param>
            <param name="center">Floating point coordinates of the extracted rectangle center within the source image.The center must be inside the image. </param>
        </member>
        <member name="M:Cv.cv.CvGetRectSubPix(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvPoint2D32f)">
            <summary>
            Retrieves pixel rectangle from image with sub-pixel accuracy
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Extracted rectangle. </param>
            <param name="center">Floating point coordinates of the extracted rectangle center within the source image.The center must be inside the image. </param>
        </member>
        <member name="M:Cv.cv.CvGetQuadrangleSubPix(CxCore.IplImage@,CxCore.IplImage@,CxCore.CvMat@)">
            <summary>
            Retrieves pixel quadrangle from image with sub-pixel accuracy
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Extracted quadrangle. </param>
            <param name="map_matrix">The transformation 2 � 3 matrix [ A b </param>
        </member>
        <member name="M:Cv.cv.CvGetQuadrangleSubPix(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Retrieves pixel quadrangle from image with sub-pixel accuracy
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Extracted quadrangle. </param>
            <param name="map_matrix">The transformation 2 � 3 matrix [ A b </param>
        </member>
        <member name="M:Cv.cv.CvGetQuadrangleSubPix(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvMat@)">
            <summary>
            Retrieves pixel quadrangle from image with sub-pixel accuracy
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Extracted quadrangle. </param>
            <param name="map_matrix">The transformation 2 � 3 matrix [ A b </param>
        </member>
        <member name="M:Cv.cv.CvResize(CxCore.IplImage@,CxCore.IplImage@,System.Int32)">
            <summary>
            Resizes image
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="interpolation">Interpolation method: CV_INTER_NN </param>
        </member>
        <member name="M:Cv.cv.CvResize(CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Resizes image
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
        </member>
        <member name="M:Cv.cv.CvResize(CxCore.CvMat@,CxCore.CvMat@,System.Int32)">
            <summary>
            Resizes image
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="interpolation">Interpolation method: CV_INTER_NN </param>
        </member>
        <member name="M:Cv.cv.CvResize(CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Resizes image
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
        </member>
        <member name="M:Cv.cv.CvResize(CxCore.CvSeq@,CxCore.CvSeq@,System.Int32)">
            <summary>
            Resizes image
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="interpolation">Interpolation method: CV_INTER_NN </param>
        </member>
        <member name="M:Cv.cv.CvResize(CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Resizes image
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
        </member>
        <member name="M:Cv.cv.CvWarpAffine(CxCore.IplImage@,CxCore.IplImage@,CxCore.CvMat@,System.Int32,CxCore.CvScalar)">
            <summary>
            Applies affine transformation to the image
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="map_matrix">2�3 transformation matrix. </param>
            <param name="flags">A combination of interpolation method and the following optional flags: fillval matrix map_matrix </param>
            <param name="fillval">A value used to fill outliers. </param>
        </member>
        <member name="M:Cv.cv.CvWarpAffine(CxCore.IplImage@,CxCore.IplImage@,CxCore.CvMat@,System.Int32)">
            <summary>
            Applies affine transformation to the image
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="map_matrix">2�3 transformation matrix. </param>
            <param name="flags">A combination of interpolation method and the following optional flags: fillval matrix map_matrix </param>
        </member>
        <member name="M:Cv.cv.CvWarpAffine(CxCore.IplImage@,CxCore.IplImage@,CxCore.CvMat@)">
            <summary>
            Applies affine transformation to the image
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="map_matrix">2�3 transformation matrix. </param>
        </member>
        <member name="M:Cv.cv.CvWarpAffine(CxCore.IplImage@,CxCore.IplImage@,CxCore.CvMat@,CxCore.CvScalar)">
            <summary>
            Applies affine transformation to the image
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="map_matrix">2�3 transformation matrix. </param>
            <param name="fillval">A value used to fill outliers. </param>
        </member>
        <member name="M:Cv.cv.CvWarpAffine(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,System.Int32,CxCore.CvScalar)">
            <summary>
            Applies affine transformation to the image
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="map_matrix">2�3 transformation matrix. </param>
            <param name="flags">A combination of interpolation method and the following optional flags: fillval matrix map_matrix </param>
            <param name="fillval">A value used to fill outliers. </param>
        </member>
        <member name="M:Cv.cv.CvWarpAffine(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,System.Int32)">
            <summary>
            Applies affine transformation to the image
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="map_matrix">2�3 transformation matrix. </param>
            <param name="flags">A combination of interpolation method and the following optional flags: fillval matrix map_matrix </param>
        </member>
        <member name="M:Cv.cv.CvWarpAffine(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Applies affine transformation to the image
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="map_matrix">2�3 transformation matrix. </param>
        </member>
        <member name="M:Cv.cv.CvWarpAffine(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,CxCore.CvScalar)">
            <summary>
            Applies affine transformation to the image
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="map_matrix">2�3 transformation matrix. </param>
            <param name="fillval">A value used to fill outliers. </param>
        </member>
        <member name="M:Cv.cv.CvWarpAffine(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvMat@,System.Int32,CxCore.CvScalar)">
            <summary>
            Applies affine transformation to the image
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="map_matrix">2�3 transformation matrix. </param>
            <param name="flags">A combination of interpolation method and the following optional flags: fillval matrix map_matrix </param>
            <param name="fillval">A value used to fill outliers. </param>
        </member>
        <member name="M:Cv.cv.CvWarpAffine(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvMat@,System.Int32)">
            <summary>
            Applies affine transformation to the image
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="map_matrix">2�3 transformation matrix. </param>
            <param name="flags">A combination of interpolation method and the following optional flags: fillval matrix map_matrix </param>
        </member>
        <member name="M:Cv.cv.CvWarpAffine(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvMat@)">
            <summary>
            Applies affine transformation to the image
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="map_matrix">2�3 transformation matrix. </param>
        </member>
        <member name="M:Cv.cv.CvWarpAffine(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvMat@,CxCore.CvScalar)">
            <summary>
            Applies affine transformation to the image
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="map_matrix">2�3 transformation matrix. </param>
            <param name="fillval">A value used to fill outliers. </param>
        </member>
        <member name="M:Cv.cv.CvGetAffineTransform(System.IntPtr,System.IntPtr,CxCore.CvMat@)">
            <summary>
            Calculates affine transform from 3 corresponding points
            </summary>
            <param name="src">Coordinates of 3 triangle vertices in the source image. </param>
            <param name="dst">Coordinates of the 3 corresponding triangle vertices in the destination image. </param>
            <param name="map_matrix">Pointer to the destination 2�3 matrix. </param>
        </member>
        <member name="M:Cv.cv.Cv2DRotationMatrix(CxCore.CvPoint2D32f,System.Double,System.Double,CxCore.CvMat@)">
            <summary>
            Calculates affine matrix of 2d rotation
            </summary>
            <param name="center">Center of the rotation in the source image. </param>
            <param name="angle">The rotation angle in degrees. Positive values mean couter-clockwise rotation(the coordiate origin is assumed at top-left corner). </param>
            <param name="scale">Isotropic scale factor. </param>
            <param name="map_matrix">Pointer to the destination 2�3 matrix. </param>
        </member>
        <member name="M:Cv.cv.CvWarpPerspective(CxCore.IplImage@,CxCore.IplImage@,CxCore.CvMat@,System.Int32,CxCore.CvScalar)">
            <summary>
            Applies perspective transformation to the image
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="map_matrix">3�3 transformation matrix. </param>
            <param name="flags">A combination of interpolation method and the following optional flags: fillval matrix map_matrix </param>
            <param name="fillval">A value used to fill outliers. </param>
        </member>
        <member name="M:Cv.cv.CvWarpPerspective(CxCore.IplImage@,CxCore.IplImage@,CxCore.CvMat@,System.Int32)">
            <summary>
            Applies perspective transformation to the image
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="map_matrix">3�3 transformation matrix. </param>
            <param name="flags">A combination of interpolation method and the following optional flags: fillval matrix map_matrix </param>
        </member>
        <member name="M:Cv.cv.CvWarpPerspective(CxCore.IplImage@,CxCore.IplImage@,CxCore.CvMat@)">
            <summary>
            Applies perspective transformation to the image
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="map_matrix">3�3 transformation matrix. </param>
        </member>
        <member name="M:Cv.cv.CvWarpPerspective(CxCore.IplImage@,CxCore.IplImage@,CxCore.CvMat@,CxCore.CvScalar)">
            <summary>
            Applies perspective transformation to the image
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="map_matrix">3�3 transformation matrix. </param>
            <param name="fillval">A value used to fill outliers. </param>
        </member>
        <member name="M:Cv.cv.CvWarpPerspective(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,System.Int32,CxCore.CvScalar)">
            <summary>
            Applies perspective transformation to the image
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="map_matrix">3�3 transformation matrix. </param>
            <param name="flags">A combination of interpolation method and the following optional flags: fillval matrix map_matrix </param>
            <param name="fillval">A value used to fill outliers. </param>
        </member>
        <member name="M:Cv.cv.CvWarpPerspective(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,System.Int32)">
            <summary>
            Applies perspective transformation to the image
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="map_matrix">3�3 transformation matrix. </param>
            <param name="flags">A combination of interpolation method and the following optional flags: fillval matrix map_matrix </param>
        </member>
        <member name="M:Cv.cv.CvWarpPerspective(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Applies perspective transformation to the image
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="map_matrix">3�3 transformation matrix. </param>
        </member>
        <member name="M:Cv.cv.CvWarpPerspective(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,CxCore.CvScalar)">
            <summary>
            Applies perspective transformation to the image
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="map_matrix">3�3 transformation matrix. </param>
            <param name="fillval">A value used to fill outliers. </param>
        </member>
        <member name="M:Cv.cv.CvWarpPerspective(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvMat@,System.Int32,CxCore.CvScalar)">
            <summary>
            Applies perspective transformation to the image
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="map_matrix">3�3 transformation matrix. </param>
            <param name="flags">A combination of interpolation method and the following optional flags: fillval matrix map_matrix </param>
            <param name="fillval">A value used to fill outliers. </param>
        </member>
        <member name="M:Cv.cv.CvWarpPerspective(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvMat@,System.Int32)">
            <summary>
            Applies perspective transformation to the image
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="map_matrix">3�3 transformation matrix. </param>
            <param name="flags">A combination of interpolation method and the following optional flags: fillval matrix map_matrix </param>
        </member>
        <member name="M:Cv.cv.CvWarpPerspective(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvMat@)">
            <summary>
            Applies perspective transformation to the image
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="map_matrix">3�3 transformation matrix. </param>
        </member>
        <member name="M:Cv.cv.CvWarpPerspective(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvMat@,CxCore.CvScalar)">
            <summary>
            Applies perspective transformation to the image
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="map_matrix">3�3 transformation matrix. </param>
            <param name="fillval">A value used to fill outliers. </param>
        </member>
        <member name="M:Cv.cv.CvGetPerspectiveTransform(System.IntPtr,System.IntPtr,CxCore.CvMat@)">
            <summary>
            Calculates perspective transform from 4 corresponding points
            </summary>
            <param name="src">Coordinates of 4 quadrangle vertices in the source image. </param>
            <param name="dst">Coordinates of the 4 corresponding quadrangle vertices in the destination image. </param>
            <param name="map_matrix">Pointer to the destination 3�3 matrix. </param>
        </member>
        <member name="M:Cv.cv.CvRemap(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@,System.Int32,CxCore.CvScalar)">
            <summary>
            Applies generic geometrical transformation to the image
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="mapx">The map of x-coordinates (32fC1 image). </param>
            <param name="mapy">The map of y-coordinates (32fC1 image). </param>
            <param name="flags">A combination of interpolation method and the following optional flag(s): fillval </param>
            <param name="fillval">A value used to fill outliers. </param>
        </member>
        <member name="M:Cv.cv.CvRemap(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@,System.Int32)">
            <summary>
            Applies generic geometrical transformation to the image
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="mapx">The map of x-coordinates (32fC1 image). </param>
            <param name="mapy">The map of y-coordinates (32fC1 image). </param>
            <param name="flags">A combination of interpolation method and the following optional flag(s): fillval </param>
        </member>
        <member name="M:Cv.cv.CvRemap(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Applies generic geometrical transformation to the image
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="mapx">The map of x-coordinates (32fC1 image). </param>
            <param name="mapy">The map of y-coordinates (32fC1 image). </param>
        </member>
        <member name="M:Cv.cv.CvRemap(CxCore.CvMat@,CxCore.CvMat@,CxCore.IplImage@,CxCore.IplImage@,System.Int32,CxCore.CvScalar)">
            <summary>
            Applies generic geometrical transformation to the image
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="mapx">The map of x-coordinates (32fC1 image). </param>
            <param name="mapy">The map of y-coordinates (32fC1 image). </param>
            <param name="flags">A combination of interpolation method and the following optional flag(s): fillval </param>
            <param name="fillval">A value used to fill outliers. </param>
        </member>
        <member name="M:Cv.cv.CvRemap(CxCore.CvMat@,CxCore.CvMat@,CxCore.IplImage@,CxCore.IplImage@,System.Int32)">
            <summary>
            Applies generic geometrical transformation to the image
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="mapx">The map of x-coordinates (32fC1 image). </param>
            <param name="mapy">The map of y-coordinates (32fC1 image). </param>
            <param name="flags">A combination of interpolation method and the following optional flag(s): fillval </param>
        </member>
        <member name="M:Cv.cv.CvRemap(CxCore.CvMat@,CxCore.CvMat@,CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Applies generic geometrical transformation to the image
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="mapx">The map of x-coordinates (32fC1 image). </param>
            <param name="mapy">The map of y-coordinates (32fC1 image). </param>
        </member>
        <member name="M:Cv.cv.CvRemap(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.IplImage@,CxCore.IplImage@,System.Int32,CxCore.CvScalar)">
            <summary>
            Applies generic geometrical transformation to the image
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="mapx">The map of x-coordinates (32fC1 image). </param>
            <param name="mapy">The map of y-coordinates (32fC1 image). </param>
            <param name="flags">A combination of interpolation method and the following optional flag(s): fillval </param>
            <param name="fillval">A value used to fill outliers. </param>
        </member>
        <member name="M:Cv.cv.CvRemap(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.IplImage@,CxCore.IplImage@,System.Int32)">
            <summary>
            Applies generic geometrical transformation to the image
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="mapx">The map of x-coordinates (32fC1 image). </param>
            <param name="mapy">The map of y-coordinates (32fC1 image). </param>
            <param name="flags">A combination of interpolation method and the following optional flag(s): fillval </param>
        </member>
        <member name="M:Cv.cv.CvRemap(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Applies generic geometrical transformation to the image
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="mapx">The map of x-coordinates (32fC1 image). </param>
            <param name="mapy">The map of y-coordinates (32fC1 image). </param>
        </member>
        <member name="M:Cv.cv.CvLogPolar(CxCore.IplImage@,CxCore.IplImage@,CxCore.CvPoint2D32f,System.Double,System.Int32)">
            <summary>
            Remaps image to log-polar space
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="center">The transformation center, where the output precision is maximal. </param>
            <param name="M">Magnitude scale parameter. See below. </param>
            <param name="flags">A combination of interpolation method and the following optional flags: matrix map_matrix </param>
        </member>
        <member name="M:Cv.cv.CvLogPolar(CxCore.IplImage@,CxCore.IplImage@,CxCore.CvPoint2D32f,System.Double)">
            <summary>
            Remaps image to log-polar space
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="center">The transformation center, where the output precision is maximal. </param>
            <param name="M">Magnitude scale parameter. See below. </param>
        </member>
        <member name="M:Cv.cv.CvLogPolar(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvPoint2D32f,System.Double,System.Int32)">
            <summary>
            Remaps image to log-polar space
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="center">The transformation center, where the output precision is maximal. </param>
            <param name="M">Magnitude scale parameter. See below. </param>
            <param name="flags">A combination of interpolation method and the following optional flags: matrix map_matrix </param>
        </member>
        <member name="M:Cv.cv.CvLogPolar(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvPoint2D32f,System.Double)">
            <summary>
            Remaps image to log-polar space
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="center">The transformation center, where the output precision is maximal. </param>
            <param name="M">Magnitude scale parameter. See below. </param>
        </member>
        <member name="M:Cv.cv.CvLogPolar(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvPoint2D32f,System.Double,System.Int32)">
            <summary>
            Remaps image to log-polar space
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="center">The transformation center, where the output precision is maximal. </param>
            <param name="M">Magnitude scale parameter. See below. </param>
            <param name="flags">A combination of interpolation method and the following optional flags: matrix map_matrix </param>
        </member>
        <member name="M:Cv.cv.CvLogPolar(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvPoint2D32f,System.Double)">
            <summary>
            Remaps image to log-polar space
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="center">The transformation center, where the output precision is maximal. </param>
            <param name="M">Magnitude scale parameter. See below. </param>
        </member>
        <member name="M:Cv.cv.CvCreateStructuringElementEx(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32[])">
            <summary>
            Creates structuring element
            </summary>
            <param name="cols">Number of columns in the structuring element. </param>
            <param name="rows">Number of rows in the structuring element. </param>
            <param name="anchor_x">Relative horizontal offset of the anchor point. </param>
            <param name="anchor_y">Relative vertical offset of the anchor point. </param>
            <param name="shape">Shape of the structuring element; may have the following values: CV_SHAPE_RECT CV_SHAPE_CROSS CV_SHAPE_ELLIPSE CV_SHAPE_CUSTOM values </param>
            <param name="values">Pointer to the structuring element data, a plane array, representingrow-by-row scanning of the element matrix. Non-zero values indicate points thatbelong to the element. If the pointer is NULL CV_SHAPE_CUSTOM </param>
        </member>
        <member name="M:Cv.cv.CvCreateStructuringElementEx(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates structuring element
            </summary>
            <param name="cols">Number of columns in the structuring element. </param>
            <param name="rows">Number of rows in the structuring element. </param>
            <param name="anchor_x">Relative horizontal offset of the anchor point. </param>
            <param name="anchor_y">Relative vertical offset of the anchor point. </param>
            <param name="shape">Shape of the structuring element; may have the following values: CV_SHAPE_RECT CV_SHAPE_CROSS CV_SHAPE_ELLIPSE CV_SHAPE_CUSTOM values </param>
        </member>
        <member name="M:Cv.cv.CvReleaseStructuringElement(CxCore.IplConvKernel@)">
            <summary>
            Deletes structuring element
            </summary>
            <param name="element">Pointer to the deleted structuring element. </param>
        </member>
        <member name="M:Cv.cv.CvErode(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplConvKernel@,System.Int32)">
            <summary>
            Erodes image by using arbitrary structuring element
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="element">Structuring element used for erosion. If it is NULL </param>
            <param name="iterations">Number of times erosion is applied. </param>
        </member>
        <member name="M:Cv.cv.CvErode(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplConvKernel@)">
            <summary>
            Erodes image by using arbitrary structuring element
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="element">Structuring element used for erosion. If it is NULL </param>
        </member>
        <member name="M:Cv.cv.CvErode(CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Erodes image by using arbitrary structuring element
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
        </member>
        <member name="M:Cv.cv.CvErode(CxCore.IplImage@,CxCore.IplImage@,System.Int32)">
            <summary>
            Erodes image by using arbitrary structuring element
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="iterations">Number of times erosion is applied. </param>
        </member>
        <member name="M:Cv.cv.CvErode(CxCore.CvMat@,CxCore.CvMat@,CxCore.IplConvKernel@,System.Int32)">
            <summary>
            Erodes image by using arbitrary structuring element
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="element">Structuring element used for erosion. If it is NULL </param>
            <param name="iterations">Number of times erosion is applied. </param>
        </member>
        <member name="M:Cv.cv.CvErode(CxCore.CvMat@,CxCore.CvMat@,CxCore.IplConvKernel@)">
            <summary>
            Erodes image by using arbitrary structuring element
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="element">Structuring element used for erosion. If it is NULL </param>
        </member>
        <member name="M:Cv.cv.CvErode(CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Erodes image by using arbitrary structuring element
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
        </member>
        <member name="M:Cv.cv.CvErode(CxCore.CvMat@,CxCore.CvMat@,System.Int32)">
            <summary>
            Erodes image by using arbitrary structuring element
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="iterations">Number of times erosion is applied. </param>
        </member>
        <member name="M:Cv.cv.CvErode(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.IplConvKernel@,System.Int32)">
            <summary>
            Erodes image by using arbitrary structuring element
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="element">Structuring element used for erosion. If it is NULL </param>
            <param name="iterations">Number of times erosion is applied. </param>
        </member>
        <member name="M:Cv.cv.CvErode(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.IplConvKernel@)">
            <summary>
            Erodes image by using arbitrary structuring element
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="element">Structuring element used for erosion. If it is NULL </param>
        </member>
        <member name="M:Cv.cv.CvErode(CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Erodes image by using arbitrary structuring element
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
        </member>
        <member name="M:Cv.cv.CvErode(CxCore.CvSeq@,CxCore.CvSeq@,System.Int32)">
            <summary>
            Erodes image by using arbitrary structuring element
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="iterations">Number of times erosion is applied. </param>
        </member>
        <member name="M:Cv.cv.CvDilate(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplConvKernel@,System.Int32)">
            <summary>
            Dilates image by using arbitrary structuring element
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="element">Structuring element used for erosion. If it is NULL </param>
            <param name="iterations">Number of times erosion is applied. </param>
        </member>
        <member name="M:Cv.cv.CvDilate(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplConvKernel@)">
            <summary>
            Dilates image by using arbitrary structuring element
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="element">Structuring element used for erosion. If it is NULL </param>
        </member>
        <member name="M:Cv.cv.CvDilate(CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Dilates image by using arbitrary structuring element
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
        </member>
        <member name="M:Cv.cv.CvDilate(CxCore.IplImage@,CxCore.IplImage@,System.Int32)">
            <summary>
            Dilates image by using arbitrary structuring element
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="iterations">Number of times erosion is applied. </param>
        </member>
        <member name="M:Cv.cv.CvDilate(CxCore.CvMat@,CxCore.CvMat@,CxCore.IplConvKernel@,System.Int32)">
            <summary>
            Dilates image by using arbitrary structuring element
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="element">Structuring element used for erosion. If it is NULL </param>
            <param name="iterations">Number of times erosion is applied. </param>
        </member>
        <member name="M:Cv.cv.CvDilate(CxCore.CvMat@,CxCore.CvMat@,CxCore.IplConvKernel@)">
            <summary>
            Dilates image by using arbitrary structuring element
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="element">Structuring element used for erosion. If it is NULL </param>
        </member>
        <member name="M:Cv.cv.CvDilate(CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Dilates image by using arbitrary structuring element
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
        </member>
        <member name="M:Cv.cv.CvDilate(CxCore.CvMat@,CxCore.CvMat@,System.Int32)">
            <summary>
            Dilates image by using arbitrary structuring element
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="iterations">Number of times erosion is applied. </param>
        </member>
        <member name="M:Cv.cv.CvDilate(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.IplConvKernel@,System.Int32)">
            <summary>
            Dilates image by using arbitrary structuring element
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="element">Structuring element used for erosion. If it is NULL </param>
            <param name="iterations">Number of times erosion is applied. </param>
        </member>
        <member name="M:Cv.cv.CvDilate(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.IplConvKernel@)">
            <summary>
            Dilates image by using arbitrary structuring element
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="element">Structuring element used for erosion. If it is NULL </param>
        </member>
        <member name="M:Cv.cv.CvDilate(CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Dilates image by using arbitrary structuring element
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
        </member>
        <member name="M:Cv.cv.CvDilate(CxCore.CvSeq@,CxCore.CvSeq@,System.Int32)">
            <summary>
            Dilates image by using arbitrary structuring element
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="iterations">Number of times erosion is applied. </param>
        </member>
        <member name="M:Cv.cv.CvMorphologyEx(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@,CxCore.IplConvKernel@,System.Int32,System.Int32)">
            <summary>
            Performs advanced morphological transformations
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="temp">Temporary image, required in some cases. </param>
            <param name="element">Structuring element. </param>
            <param name="operation">Type of morphological operation, one of: CV_MOP_OPEN CV_MOP_CLOSE CV_MOP_GRADIENT CV_MOP_TOPHAT CV_MOP_BLACKHAT </param>
            <param name="iterations">Number of times erosion and dilation are applied. </param>
        </member>
        <member name="M:Cv.cv.CvMorphologyEx(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@,CxCore.IplConvKernel@,System.Int32)">
            <summary>
            Performs advanced morphological transformations
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="temp">Temporary image, required in some cases. </param>
            <param name="element">Structuring element. </param>
            <param name="operation">Type of morphological operation, one of: CV_MOP_OPEN CV_MOP_CLOSE CV_MOP_GRADIENT CV_MOP_TOPHAT CV_MOP_BLACKHAT </param>
        </member>
        <member name="M:Cv.cv.CvMorphologyEx(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,CxCore.IplConvKernel@,System.Int32,System.Int32)">
            <summary>
            Performs advanced morphological transformations
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="temp">Temporary image, required in some cases. </param>
            <param name="element">Structuring element. </param>
            <param name="operation">Type of morphological operation, one of: CV_MOP_OPEN CV_MOP_CLOSE CV_MOP_GRADIENT CV_MOP_TOPHAT CV_MOP_BLACKHAT </param>
            <param name="iterations">Number of times erosion and dilation are applied. </param>
        </member>
        <member name="M:Cv.cv.CvMorphologyEx(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,CxCore.IplConvKernel@,System.Int32)">
            <summary>
            Performs advanced morphological transformations
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="temp">Temporary image, required in some cases. </param>
            <param name="element">Structuring element. </param>
            <param name="operation">Type of morphological operation, one of: CV_MOP_OPEN CV_MOP_CLOSE CV_MOP_GRADIENT CV_MOP_TOPHAT CV_MOP_BLACKHAT </param>
        </member>
        <member name="M:Cv.cv.CvMorphologyEx(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@,CxCore.IplConvKernel@,System.Int32,System.Int32)">
            <summary>
            Performs advanced morphological transformations
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="temp">Temporary image, required in some cases. </param>
            <param name="element">Structuring element. </param>
            <param name="operation">Type of morphological operation, one of: CV_MOP_OPEN CV_MOP_CLOSE CV_MOP_GRADIENT CV_MOP_TOPHAT CV_MOP_BLACKHAT </param>
            <param name="iterations">Number of times erosion and dilation are applied. </param>
        </member>
        <member name="M:Cv.cv.CvMorphologyEx(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@,CxCore.IplConvKernel@,System.Int32)">
            <summary>
            Performs advanced morphological transformations
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="temp">Temporary image, required in some cases. </param>
            <param name="element">Structuring element. </param>
            <param name="operation">Type of morphological operation, one of: CV_MOP_OPEN CV_MOP_CLOSE CV_MOP_GRADIENT CV_MOP_TOPHAT CV_MOP_BLACKHAT </param>
        </member>
        <member name="M:Cv.cv.CvSmooth(CxCore.IplImage@,CxCore.IplImage@,System.Int32,System.Int32,System.Int32,System.Double,System.Double)">
            <summary>
            Smooths the image in one of several ways
            </summary>
            <param name="src">The source image. </param>
            <param name="dst">The destination image. </param>
            <param name="smoothtype">Type of the smoothing: param1 param2 param1 param2 param1 param2 param1 param2 param1 param1 param1 param2 </param>
            <param name="param1">The first parameter of smoothing operation. </param>
            <param name="param2">The second parameter of smoothing operation. In case of simple scaled/non-scaled and              Gaussian blur if param2 param1 </param>
            <param name="param3">In case of Gaussian kernel this parameter may specify Gaussian sigma (standard deviation).              If it is zero, it is calculated from the kernel size: sigma = (n/2 - 1)*0.3 + 0.8, where n=param1 for horizontal kernel,                                                 n=param2 for vertical kernel. param3 param1 param2 </param>
            <param name="param4">In case of non-square Gaussian kernel the parameter may be used to specify a different              (from param3 </param>
        </member>
        <member name="M:Cv.cv.CvSmooth(CxCore.IplImage@,CxCore.IplImage@,System.Int32,System.Int32,System.Int32,System.Double)">
            <summary>
            Smooths the image in one of several ways
            </summary>
            <param name="src">The source image. </param>
            <param name="dst">The destination image. </param>
            <param name="smoothtype">Type of the smoothing: param1 param2 param1 param2 param1 param2 param1 param2 param1 param1 param1 param2 </param>
            <param name="param1">The first parameter of smoothing operation. </param>
            <param name="param2">The second parameter of smoothing operation. In case of simple scaled/non-scaled and              Gaussian blur if param2 param1 </param>
            <param name="param3">In case of Gaussian kernel this parameter may specify Gaussian sigma (standard deviation).              If it is zero, it is calculated from the kernel size: sigma = (n/2 - 1)*0.3 + 0.8, where n=param1 for horizontal kernel,                                                 n=param2 for vertical kernel. param3 param1 param2 </param>
        </member>
        <member name="M:Cv.cv.CvSmooth(CxCore.IplImage@,CxCore.IplImage@,System.Int32,System.Int32,System.Int32)">
            <summary>
            Smooths the image in one of several ways
            </summary>
            <param name="src">The source image. </param>
            <param name="dst">The destination image. </param>
            <param name="smoothtype">Type of the smoothing: param1 param2 param1 param2 param1 param2 param1 param2 param1 param1 param1 param2 </param>
            <param name="param1">The first parameter of smoothing operation. </param>
            <param name="param2">The second parameter of smoothing operation. In case of simple scaled/non-scaled and              Gaussian blur if param2 param1 </param>
        </member>
        <member name="M:Cv.cv.CvSmooth(CxCore.IplImage@,CxCore.IplImage@,System.Int32,System.Int32)">
            <summary>
            Smooths the image in one of several ways
            </summary>
            <param name="src">The source image. </param>
            <param name="dst">The destination image. </param>
            <param name="smoothtype">Type of the smoothing: param1 param2 param1 param2 param1 param2 param1 param2 param1 param1 param1 param2 </param>
            <param name="param1">The first parameter of smoothing operation. </param>
        </member>
        <member name="M:Cv.cv.CvSmooth(CxCore.IplImage@,CxCore.IplImage@,System.Int32)">
            <summary>
            Smooths the image in one of several ways
            </summary>
            <param name="src">The source image. </param>
            <param name="dst">The destination image. </param>
            <param name="smoothtype">Type of the smoothing: param1 param2 param1 param2 param1 param2 param1 param2 param1 param1 param1 param2 </param>
        </member>
        <member name="M:Cv.cv.CvSmooth(CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Smooths the image in one of several ways
            </summary>
            <param name="src">The source image. </param>
            <param name="dst">The destination image. </param>
        </member>
        <member name="M:Cv.cv.CvSmooth(CxCore.CvMat@,CxCore.CvMat@,System.Int32,System.Int32,System.Int32,System.Double,System.Double)">
            <summary>
            Smooths the image in one of several ways
            </summary>
            <param name="src">The source image. </param>
            <param name="dst">The destination image. </param>
            <param name="smoothtype">Type of the smoothing: param1 param2 param1 param2 param1 param2 param1 param2 param1 param1 param1 param2 </param>
            <param name="param1">The first parameter of smoothing operation. </param>
            <param name="param2">The second parameter of smoothing operation. In case of simple scaled/non-scaled and              Gaussian blur if param2 param1 </param>
            <param name="param3">In case of Gaussian kernel this parameter may specify Gaussian sigma (standard deviation).              If it is zero, it is calculated from the kernel size: sigma = (n/2 - 1)*0.3 + 0.8, where n=param1 for horizontal kernel,                                                 n=param2 for vertical kernel. param3 param1 param2 </param>
            <param name="param4">In case of non-square Gaussian kernel the parameter may be used to specify a different              (from param3 </param>
        </member>
        <member name="M:Cv.cv.CvSmooth(CxCore.CvMat@,CxCore.CvMat@,System.Int32,System.Int32,System.Int32,System.Double)">
            <summary>
            Smooths the image in one of several ways
            </summary>
            <param name="src">The source image. </param>
            <param name="dst">The destination image. </param>
            <param name="smoothtype">Type of the smoothing: param1 param2 param1 param2 param1 param2 param1 param2 param1 param1 param1 param2 </param>
            <param name="param1">The first parameter of smoothing operation. </param>
            <param name="param2">The second parameter of smoothing operation. In case of simple scaled/non-scaled and              Gaussian blur if param2 param1 </param>
            <param name="param3">In case of Gaussian kernel this parameter may specify Gaussian sigma (standard deviation).              If it is zero, it is calculated from the kernel size: sigma = (n/2 - 1)*0.3 + 0.8, where n=param1 for horizontal kernel,                                                 n=param2 for vertical kernel. param3 param1 param2 </param>
        </member>
        <member name="M:Cv.cv.CvSmooth(CxCore.CvMat@,CxCore.CvMat@,System.Int32,System.Int32,System.Int32)">
            <summary>
            Smooths the image in one of several ways
            </summary>
            <param name="src">The source image. </param>
            <param name="dst">The destination image. </param>
            <param name="smoothtype">Type of the smoothing: param1 param2 param1 param2 param1 param2 param1 param2 param1 param1 param1 param2 </param>
            <param name="param1">The first parameter of smoothing operation. </param>
            <param name="param2">The second parameter of smoothing operation. In case of simple scaled/non-scaled and              Gaussian blur if param2 param1 </param>
        </member>
        <member name="M:Cv.cv.CvSmooth(CxCore.CvMat@,CxCore.CvMat@,System.Int32,System.Int32)">
            <summary>
            Smooths the image in one of several ways
            </summary>
            <param name="src">The source image. </param>
            <param name="dst">The destination image. </param>
            <param name="smoothtype">Type of the smoothing: param1 param2 param1 param2 param1 param2 param1 param2 param1 param1 param1 param2 </param>
            <param name="param1">The first parameter of smoothing operation. </param>
        </member>
        <member name="M:Cv.cv.CvSmooth(CxCore.CvMat@,CxCore.CvMat@,System.Int32)">
            <summary>
            Smooths the image in one of several ways
            </summary>
            <param name="src">The source image. </param>
            <param name="dst">The destination image. </param>
            <param name="smoothtype">Type of the smoothing: param1 param2 param1 param2 param1 param2 param1 param2 param1 param1 param1 param2 </param>
        </member>
        <member name="M:Cv.cv.CvSmooth(CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Smooths the image in one of several ways
            </summary>
            <param name="src">The source image. </param>
            <param name="dst">The destination image. </param>
        </member>
        <member name="M:Cv.cv.CvSmooth(CxCore.CvSeq@,CxCore.CvSeq@,System.Int32,System.Int32,System.Int32,System.Double,System.Double)">
            <summary>
            Smooths the image in one of several ways
            </summary>
            <param name="src">The source image. </param>
            <param name="dst">The destination image. </param>
            <param name="smoothtype">Type of the smoothing: param1 param2 param1 param2 param1 param2 param1 param2 param1 param1 param1 param2 </param>
            <param name="param1">The first parameter of smoothing operation. </param>
            <param name="param2">The second parameter of smoothing operation. In case of simple scaled/non-scaled and              Gaussian blur if param2 param1 </param>
            <param name="param3">In case of Gaussian kernel this parameter may specify Gaussian sigma (standard deviation).              If it is zero, it is calculated from the kernel size: sigma = (n/2 - 1)*0.3 + 0.8, where n=param1 for horizontal kernel,                                                 n=param2 for vertical kernel. param3 param1 param2 </param>
            <param name="param4">In case of non-square Gaussian kernel the parameter may be used to specify a different              (from param3 </param>
        </member>
        <member name="M:Cv.cv.CvSmooth(CxCore.CvSeq@,CxCore.CvSeq@,System.Int32,System.Int32,System.Int32,System.Double)">
            <summary>
            Smooths the image in one of several ways
            </summary>
            <param name="src">The source image. </param>
            <param name="dst">The destination image. </param>
            <param name="smoothtype">Type of the smoothing: param1 param2 param1 param2 param1 param2 param1 param2 param1 param1 param1 param2 </param>
            <param name="param1">The first parameter of smoothing operation. </param>
            <param name="param2">The second parameter of smoothing operation. In case of simple scaled/non-scaled and              Gaussian blur if param2 param1 </param>
            <param name="param3">In case of Gaussian kernel this parameter may specify Gaussian sigma (standard deviation).              If it is zero, it is calculated from the kernel size: sigma = (n/2 - 1)*0.3 + 0.8, where n=param1 for horizontal kernel,                                                 n=param2 for vertical kernel. param3 param1 param2 </param>
        </member>
        <member name="M:Cv.cv.CvSmooth(CxCore.CvSeq@,CxCore.CvSeq@,System.Int32,System.Int32,System.Int32)">
            <summary>
            Smooths the image in one of several ways
            </summary>
            <param name="src">The source image. </param>
            <param name="dst">The destination image. </param>
            <param name="smoothtype">Type of the smoothing: param1 param2 param1 param2 param1 param2 param1 param2 param1 param1 param1 param2 </param>
            <param name="param1">The first parameter of smoothing operation. </param>
            <param name="param2">The second parameter of smoothing operation. In case of simple scaled/non-scaled and              Gaussian blur if param2 param1 </param>
        </member>
        <member name="M:Cv.cv.CvSmooth(CxCore.CvSeq@,CxCore.CvSeq@,System.Int32,System.Int32)">
            <summary>
            Smooths the image in one of several ways
            </summary>
            <param name="src">The source image. </param>
            <param name="dst">The destination image. </param>
            <param name="smoothtype">Type of the smoothing: param1 param2 param1 param2 param1 param2 param1 param2 param1 param1 param1 param2 </param>
            <param name="param1">The first parameter of smoothing operation. </param>
        </member>
        <member name="M:Cv.cv.CvSmooth(CxCore.CvSeq@,CxCore.CvSeq@,System.Int32)">
            <summary>
            Smooths the image in one of several ways
            </summary>
            <param name="src">The source image. </param>
            <param name="dst">The destination image. </param>
            <param name="smoothtype">Type of the smoothing: param1 param2 param1 param2 param1 param2 param1 param2 param1 param1 param1 param2 </param>
        </member>
        <member name="M:Cv.cv.CvSmooth(CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Smooths the image in one of several ways
            </summary>
            <param name="src">The source image. </param>
            <param name="dst">The destination image. </param>
        </member>
        <member name="M:Cv.cv.CvFilter2D(CxCore.IplImage@,CxCore.IplImage@,CxCore.CvMat@,CxCore.CvPoint)">
            <summary>
            Convolves image with the kernel
            </summary>
            <param name="src">The source image. </param>
            <param name="dst">The destination image. </param>
            <param name="kernel">Convolution kernel, single-channel floating point matrix. If you want to apply              different kernels to different channels, split the image using </param>
            <param name="anchor">The anchor of the kernel that indicates the relative position of a filtered pointwithin the kernel. The anchor shoud lie within the kernel. The special default value (-1,-1) meansthat it is at the kernel center. </param>
        </member>
        <member name="M:Cv.cv.CvFilter2D(CxCore.IplImage@,CxCore.IplImage@,CxCore.CvMat@)">
            <summary>
            Convolves image with the kernel
            </summary>
            <param name="src">The source image. </param>
            <param name="dst">The destination image. </param>
            <param name="kernel">Convolution kernel, single-channel floating point matrix. If you want to apply              different kernels to different channels, split the image using </param>
        </member>
        <member name="M:Cv.cv.CvFilter2D(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,CxCore.CvPoint)">
            <summary>
            Convolves image with the kernel
            </summary>
            <param name="src">The source image. </param>
            <param name="dst">The destination image. </param>
            <param name="kernel">Convolution kernel, single-channel floating point matrix. If you want to apply              different kernels to different channels, split the image using </param>
            <param name="anchor">The anchor of the kernel that indicates the relative position of a filtered pointwithin the kernel. The anchor shoud lie within the kernel. The special default value (-1,-1) meansthat it is at the kernel center. </param>
        </member>
        <member name="M:Cv.cv.CvFilter2D(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Convolves image with the kernel
            </summary>
            <param name="src">The source image. </param>
            <param name="dst">The destination image. </param>
            <param name="kernel">Convolution kernel, single-channel floating point matrix. If you want to apply              different kernels to different channels, split the image using </param>
        </member>
        <member name="M:Cv.cv.CvFilter2D(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvMat@,CxCore.CvPoint)">
            <summary>
            Convolves image with the kernel
            </summary>
            <param name="src">The source image. </param>
            <param name="dst">The destination image. </param>
            <param name="kernel">Convolution kernel, single-channel floating point matrix. If you want to apply              different kernels to different channels, split the image using </param>
            <param name="anchor">The anchor of the kernel that indicates the relative position of a filtered pointwithin the kernel. The anchor shoud lie within the kernel. The special default value (-1,-1) meansthat it is at the kernel center. </param>
        </member>
        <member name="M:Cv.cv.CvFilter2D(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvMat@)">
            <summary>
            Convolves image with the kernel
            </summary>
            <param name="src">The source image. </param>
            <param name="dst">The destination image. </param>
            <param name="kernel">Convolution kernel, single-channel floating point matrix. If you want to apply              different kernels to different channels, split the image using </param>
        </member>
        <member name="M:Cv.cv.CvCopyMakeBorder(CxCore.IplImage@,CxCore.IplImage@,CxCore.CvPoint,System.Int32,CxCore.CvScalar)">
            <summary>
            Copies image and makes border around it
            </summary>
            <param name="src">The source image. </param>
            <param name="dst">The destination image. </param>
            <param name="offset">Coordinates of the top-left corner (or bottom-left in case of images with bottom-left origin)              of the destination image rectangle where the source image (or its ROI) is copied.              Size of the rectanlge matches the source image size/ROI size. </param>
            <param name="bordertype">Type of the border to create around the copied source image rectangle: IPL_BORDER_CONSTANT IPL_BORDER_REPLICATE (The other two border types from IPL, IPL_BORDER_REFLECT IPL_BORDER_WRAP </param>
            <param name="value">Value of the border pixels if bordertype=IPL_BORDER_CONSTANT </param>
        </member>
        <member name="M:Cv.cv.CvCopyMakeBorder(CxCore.IplImage@,CxCore.IplImage@,CxCore.CvPoint,System.Int32)">
            <summary>
            Copies image and makes border around it
            </summary>
            <param name="src">The source image. </param>
            <param name="dst">The destination image. </param>
            <param name="offset">Coordinates of the top-left corner (or bottom-left in case of images with bottom-left origin)              of the destination image rectangle where the source image (or its ROI) is copied.              Size of the rectanlge matches the source image size/ROI size. </param>
            <param name="bordertype">Type of the border to create around the copied source image rectangle: IPL_BORDER_CONSTANT IPL_BORDER_REPLICATE (The other two border types from IPL, IPL_BORDER_REFLECT IPL_BORDER_WRAP </param>
        </member>
        <member name="M:Cv.cv.CvCopyMakeBorder(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvPoint,System.Int32,CxCore.CvScalar)">
            <summary>
            Copies image and makes border around it
            </summary>
            <param name="src">The source image. </param>
            <param name="dst">The destination image. </param>
            <param name="offset">Coordinates of the top-left corner (or bottom-left in case of images with bottom-left origin)              of the destination image rectangle where the source image (or its ROI) is copied.              Size of the rectanlge matches the source image size/ROI size. </param>
            <param name="bordertype">Type of the border to create around the copied source image rectangle: IPL_BORDER_CONSTANT IPL_BORDER_REPLICATE (The other two border types from IPL, IPL_BORDER_REFLECT IPL_BORDER_WRAP </param>
            <param name="value">Value of the border pixels if bordertype=IPL_BORDER_CONSTANT </param>
        </member>
        <member name="M:Cv.cv.CvCopyMakeBorder(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvPoint,System.Int32)">
            <summary>
            Copies image and makes border around it
            </summary>
            <param name="src">The source image. </param>
            <param name="dst">The destination image. </param>
            <param name="offset">Coordinates of the top-left corner (or bottom-left in case of images with bottom-left origin)              of the destination image rectangle where the source image (or its ROI) is copied.              Size of the rectanlge matches the source image size/ROI size. </param>
            <param name="bordertype">Type of the border to create around the copied source image rectangle: IPL_BORDER_CONSTANT IPL_BORDER_REPLICATE (The other two border types from IPL, IPL_BORDER_REFLECT IPL_BORDER_WRAP </param>
        </member>
        <member name="M:Cv.cv.CvCopyMakeBorder(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvPoint,System.Int32,CxCore.CvScalar)">
            <summary>
            Copies image and makes border around it
            </summary>
            <param name="src">The source image. </param>
            <param name="dst">The destination image. </param>
            <param name="offset">Coordinates of the top-left corner (or bottom-left in case of images with bottom-left origin)              of the destination image rectangle where the source image (or its ROI) is copied.              Size of the rectanlge matches the source image size/ROI size. </param>
            <param name="bordertype">Type of the border to create around the copied source image rectangle: IPL_BORDER_CONSTANT IPL_BORDER_REPLICATE (The other two border types from IPL, IPL_BORDER_REFLECT IPL_BORDER_WRAP </param>
            <param name="value">Value of the border pixels if bordertype=IPL_BORDER_CONSTANT </param>
        </member>
        <member name="M:Cv.cv.CvCopyMakeBorder(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvPoint,System.Int32)">
            <summary>
            Copies image and makes border around it
            </summary>
            <param name="src">The source image. </param>
            <param name="dst">The destination image. </param>
            <param name="offset">Coordinates of the top-left corner (or bottom-left in case of images with bottom-left origin)              of the destination image rectangle where the source image (or its ROI) is copied.              Size of the rectanlge matches the source image size/ROI size. </param>
            <param name="bordertype">Type of the border to create around the copied source image rectangle: IPL_BORDER_CONSTANT IPL_BORDER_REPLICATE (The other two border types from IPL, IPL_BORDER_REFLECT IPL_BORDER_WRAP </param>
        </member>
        <member name="M:Cv.cv.CvIntegral(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Calculates integral images
            </summary>
            <param name="image">The source image, W H </param>
            <param name="sum">The integral image, W+1 H+1 </param>
            <param name="sqsum">The integral image for squared pixel values, W+1 H+1 </param>
            <param name="tilted_sum">The integral for the image rotated by 45 degrees, W+1 H+1 sum </param>
        </member>
        <member name="M:Cv.cv.CvIntegral(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Calculates integral images
            </summary>
            <param name="image">The source image, W H </param>
            <param name="sum">The integral image, W+1 H+1 </param>
            <param name="sqsum">The integral image for squared pixel values, W+1 H+1 </param>
        </member>
        <member name="M:Cv.cv.CvIntegral(CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Calculates integral images
            </summary>
            <param name="image">The source image, W H </param>
            <param name="sum">The integral image, W+1 H+1 </param>
        </member>
        <member name="M:Cv.cv.CvIntegral(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Calculates integral images
            </summary>
            <param name="image">The source image, W H </param>
            <param name="sum">The integral image, W+1 H+1 </param>
            <param name="sqsum">The integral image for squared pixel values, W+1 H+1 </param>
            <param name="tilted_sum">The integral for the image rotated by 45 degrees, W+1 H+1 sum </param>
        </member>
        <member name="M:Cv.cv.CvIntegral(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Calculates integral images
            </summary>
            <param name="image">The source image, W H </param>
            <param name="sum">The integral image, W+1 H+1 </param>
            <param name="sqsum">The integral image for squared pixel values, W+1 H+1 </param>
        </member>
        <member name="M:Cv.cv.CvIntegral(CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Calculates integral images
            </summary>
            <param name="image">The source image, W H </param>
            <param name="sum">The integral image, W+1 H+1 </param>
        </member>
        <member name="M:Cv.cv.CvIntegral(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Calculates integral images
            </summary>
            <param name="image">The source image, W H </param>
            <param name="sum">The integral image, W+1 H+1 </param>
            <param name="sqsum">The integral image for squared pixel values, W+1 H+1 </param>
            <param name="tilted_sum">The integral for the image rotated by 45 degrees, W+1 H+1 sum </param>
        </member>
        <member name="M:Cv.cv.CvIntegral(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Calculates integral images
            </summary>
            <param name="image">The source image, W H </param>
            <param name="sum">The integral image, W+1 H+1 </param>
            <param name="sqsum">The integral image for squared pixel values, W+1 H+1 </param>
        </member>
        <member name="M:Cv.cv.CvIntegral(CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Calculates integral images
            </summary>
            <param name="image">The source image, W H </param>
            <param name="sum">The integral image, W+1 H+1 </param>
        </member>
        <member name="M:Cv.cv.CvCvtColor(CxCore.IplImage@,CxCore.IplImage@,System.Int32)">
            <summary>
            Converts image from one color space to another
            </summary>
            <param name="src">The source 8-bit (8u), 16-bit (16u) or single-precision floating-point (32f) image. </param>
            <param name="dst">The destination image of the same data type as the source one.           The number of channels may be different. </param>
            <param name="code">Color conversion operation that can be specifed usingCV_src_color_space2 dst_color_space constants (see below). </param>
        </member>
        <member name="M:Cv.cv.CvCvtColor(CxCore.CvMat@,CxCore.CvMat@,System.Int32)">
            <summary>
            Converts image from one color space to another
            </summary>
            <param name="src">The source 8-bit (8u), 16-bit (16u) or single-precision floating-point (32f) image. </param>
            <param name="dst">The destination image of the same data type as the source one.           The number of channels may be different. </param>
            <param name="code">Color conversion operation that can be specifed usingCV_src_color_space 2 dst_color_space constants (see below). </param>
        </member>
        <member name="M:Cv.cv.CvCvtColor(CxCore.CvSeq@,CxCore.CvSeq@,System.Int32)">
            <summary>
            Converts image from one color space to another
            </summary>
            <param name="src">The source 8-bit (8u), 16-bit (16u) or single-precision floating-point (32f) image. </param>
            <param name="dst">The destination image of the same data type as the source one.           The number of channels may be different. </param>
            <param name="code">Color conversion operation that can be specifed usingCV_ src_color_space 2  dst_color_space constants (see below). </param>
        </member>
        <member name="M:Cv.cv.CvThreshold(CxCore.IplImage@,CxCore.IplImage@,System.Double,System.Double,System.Int32)">
            <summary>
            Applies fixed-level threshold to array elements
            </summary>
            <param name="src">Source array (single-channel, 8-bit of 32-bit floating point). </param>
            <param name="dst">Destination array; must be either the same type as src </param>
            <param name="threshold">Threshold value. </param>
            <param name="max_value">Maximum value to use with CV_THRESH_BINARY CV_THRESH_BINARY_INV </param>
            <param name="threshold_type">Thresholding type (see the discussion) </param>
        </member>
        <member name="M:Cv.cv.CvThreshold(CxCore.CvMat@,CxCore.CvMat@,System.Double,System.Double,System.Int32)">
            <summary>
            Applies fixed-level threshold to array elements
            </summary>
            <param name="src">Source array (single-channel, 8-bit of 32-bit floating point). </param>
            <param name="dst">Destination array; must be either the same type as src </param>
            <param name="threshold">Threshold value. </param>
            <param name="max_value">Maximum value to use with CV_THRESH_BINARY CV_THRESH_BINARY_INV </param>
            <param name="threshold_type">Thresholding type (see the discussion) </param>
        </member>
        <member name="M:Cv.cv.CvThreshold(CxCore.CvSeq@,CxCore.CvSeq@,System.Double,System.Double,System.Int32)">
            <summary>
            Applies fixed-level threshold to array elements
            </summary>
            <param name="src">Source array (single-channel, 8-bit of 32-bit floating point). </param>
            <param name="dst">Destination array; must be either the same type as src </param>
            <param name="threshold">Threshold value. </param>
            <param name="max_value">Maximum value to use with CV_THRESH_BINARY CV_THRESH_BINARY_INV </param>
            <param name="threshold_type">Thresholding type (see the discussion) </param>
        </member>
        <member name="M:Cv.cv.CvAdaptiveThreshold(CxCore.IplImage@,CxCore.IplImage@,System.Double,System.Int32,System.Int32,System.Int32,System.Double)">
            <summary>
            Applies adaptive threshold to array
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="max_value">Maximum value that is used with CV_THRESH_BINARY CV_THRESH_BINARY_INV </param>
            <param name="adaptive_method">Adaptive thresholding algorithm to use: CV_ADAPTIVE_THRESH_MEAN_C CV_ADAPTIVE_THRESH_GAUSSIAN_C </param>
            <param name="threshold_type">Thresholding type; must be one of CV_THRESH_BINARY, CV_THRESH_BINARY_INV </param>
            <param name="block_size">The size of a pixel neighborhood that is used to calculate a threshold value for the pixel:3, 5, 7, ... </param>
            <param name="param1">The method-dependent parameter.For the methods CV_ADAPTIVE_THRESH_MEAN_C CV_ADAPTIVE_THRESH_GAUSSIAN_C </param>
        </member>
        <member name="M:Cv.cv.CvAdaptiveThreshold(CxCore.IplImage@,CxCore.IplImage@,System.Double,System.Int32,System.Int32,System.Int32)">
            <summary>
            Applies adaptive threshold to array
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="max_value">Maximum value that is used with CV_THRESH_BINARY CV_THRESH_BINARY_INV </param>
            <param name="adaptive_method">Adaptive thresholding algorithm to use: CV_ADAPTIVE_THRESH_MEAN_C CV_ADAPTIVE_THRESH_GAUSSIAN_C </param>
            <param name="threshold_type">Thresholding type; must be one of CV_THRESH_BINARY, CV_THRESH_BINARY_INV </param>
            <param name="block_size">The size of a pixel neighborhood that is used to calculate a threshold value for the pixel:3, 5, 7, ... </param>
        </member>
        <member name="M:Cv.cv.CvAdaptiveThreshold(CxCore.IplImage@,CxCore.IplImage@,System.Double,System.Int32,System.Int32)">
            <summary>
            Applies adaptive threshold to array
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="max_value">Maximum value that is used with CV_THRESH_BINARY CV_THRESH_BINARY_INV </param>
            <param name="adaptive_method">Adaptive thresholding algorithm to use: CV_ADAPTIVE_THRESH_MEAN_C CV_ADAPTIVE_THRESH_GAUSSIAN_C </param>
            <param name="threshold_type">Thresholding type; must be one of CV_THRESH_BINARY, CV_THRESH_BINARY_INV </param>
        </member>
        <member name="M:Cv.cv.CvAdaptiveThreshold(CxCore.IplImage@,CxCore.IplImage@,System.Double,System.Int32)">
            <summary>
            Applies adaptive threshold to array
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="max_value">Maximum value that is used with CV_THRESH_BINARY CV_THRESH_BINARY_INV </param>
            <param name="adaptive_method">Adaptive thresholding algorithm to use: CV_ADAPTIVE_THRESH_MEAN_C CV_ADAPTIVE_THRESH_GAUSSIAN_C </param>
        </member>
        <member name="M:Cv.cv.CvAdaptiveThreshold(CxCore.IplImage@,CxCore.IplImage@,System.Double)">
            <summary>
            Applies adaptive threshold to array
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="max_value">Maximum value that is used with CV_THRESH_BINARY CV_THRESH_BINARY_INV </param>
        </member>
        <member name="M:Cv.cv.CvAdaptiveThreshold(CxCore.CvMat@,CxCore.CvMat@,System.Double,System.Int32,System.Int32,System.Int32,System.Double)">
            <summary>
            Applies adaptive threshold to array
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="max_value">Maximum value that is used with CV_THRESH_BINARY CV_THRESH_BINARY_INV </param>
            <param name="adaptive_method">Adaptive thresholding algorithm to use: CV_ADAPTIVE_THRESH_MEAN_C CV_ADAPTIVE_THRESH_GAUSSIAN_C </param>
            <param name="threshold_type">Thresholding type; must be one of CV_THRESH_BINARY, CV_THRESH_BINARY_INV </param>
            <param name="block_size">The size of a pixel neighborhood that is used to calculate a threshold value for the pixel:3, 5, 7, ... </param>
            <param name="param1">The method-dependent parameter.For the methods CV_ADAPTIVE_THRESH_MEAN_C CV_ADAPTIVE_THRESH_GAUSSIAN_C </param>
        </member>
        <member name="M:Cv.cv.CvAdaptiveThreshold(CxCore.CvMat@,CxCore.CvMat@,System.Double,System.Int32,System.Int32,System.Int32)">
            <summary>
            Applies adaptive threshold to array
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="max_value">Maximum value that is used with CV_THRESH_BINARY CV_THRESH_BINARY_INV </param>
            <param name="adaptive_method">Adaptive thresholding algorithm to use: CV_ADAPTIVE_THRESH_MEAN_C CV_ADAPTIVE_THRESH_GAUSSIAN_C </param>
            <param name="threshold_type">Thresholding type; must be one of CV_THRESH_BINARY, CV_THRESH_BINARY_INV </param>
            <param name="block_size">The size of a pixel neighborhood that is used to calculate a threshold value for the pixel:3, 5, 7, ... </param>
        </member>
        <member name="M:Cv.cv.CvAdaptiveThreshold(CxCore.CvMat@,CxCore.CvMat@,System.Double,System.Int32,System.Int32)">
            <summary>
            Applies adaptive threshold to array
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="max_value">Maximum value that is used with CV_THRESH_BINARY CV_THRESH_BINARY_INV </param>
            <param name="adaptive_method">Adaptive thresholding algorithm to use: CV_ADAPTIVE_THRESH_MEAN_C CV_ADAPTIVE_THRESH_GAUSSIAN_C </param>
            <param name="threshold_type">Thresholding type; must be one of CV_THRESH_BINARY, CV_THRESH_BINARY_INV </param>
        </member>
        <member name="M:Cv.cv.CvAdaptiveThreshold(CxCore.CvMat@,CxCore.CvMat@,System.Double,System.Int32)">
            <summary>
            Applies adaptive threshold to array
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="max_value">Maximum value that is used with CV_THRESH_BINARY CV_THRESH_BINARY_INV </param>
            <param name="adaptive_method">Adaptive thresholding algorithm to use: CV_ADAPTIVE_THRESH_MEAN_C CV_ADAPTIVE_THRESH_GAUSSIAN_C </param>
        </member>
        <member name="M:Cv.cv.CvAdaptiveThreshold(CxCore.CvMat@,CxCore.CvMat@,System.Double)">
            <summary>
            Applies adaptive threshold to array
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="max_value">Maximum value that is used with CV_THRESH_BINARY CV_THRESH_BINARY_INV </param>
        </member>
        <member name="M:Cv.cv.CvAdaptiveThreshold(CxCore.CvSeq@,CxCore.CvSeq@,System.Double,System.Int32,System.Int32,System.Int32,System.Double)">
            <summary>
            Applies adaptive threshold to array
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="max_value">Maximum value that is used with CV_THRESH_BINARY CV_THRESH_BINARY_INV </param>
            <param name="adaptive_method">Adaptive thresholding algorithm to use: CV_ADAPTIVE_THRESH_MEAN_C CV_ADAPTIVE_THRESH_GAUSSIAN_C </param>
            <param name="threshold_type">Thresholding type; must be one of CV_THRESH_BINARY, CV_THRESH_BINARY_INV </param>
            <param name="block_size">The size of a pixel neighborhood that is used to calculate a threshold value for the pixel:3, 5, 7, ... </param>
            <param name="param1">The method-dependent parameter.For the methods CV_ADAPTIVE_THRESH_MEAN_C CV_ADAPTIVE_THRESH_GAUSSIAN_C </param>
        </member>
        <member name="M:Cv.cv.CvAdaptiveThreshold(CxCore.CvSeq@,CxCore.CvSeq@,System.Double,System.Int32,System.Int32,System.Int32)">
            <summary>
            Applies adaptive threshold to array
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="max_value">Maximum value that is used with CV_THRESH_BINARY CV_THRESH_BINARY_INV </param>
            <param name="adaptive_method">Adaptive thresholding algorithm to use: CV_ADAPTIVE_THRESH_MEAN_C CV_ADAPTIVE_THRESH_GAUSSIAN_C </param>
            <param name="threshold_type">Thresholding type; must be one of CV_THRESH_BINARY, CV_THRESH_BINARY_INV </param>
            <param name="block_size">The size of a pixel neighborhood that is used to calculate a threshold value for the pixel:3, 5, 7, ... </param>
        </member>
        <member name="M:Cv.cv.CvAdaptiveThreshold(CxCore.CvSeq@,CxCore.CvSeq@,System.Double,System.Int32,System.Int32)">
            <summary>
            Applies adaptive threshold to array
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="max_value">Maximum value that is used with CV_THRESH_BINARY CV_THRESH_BINARY_INV </param>
            <param name="adaptive_method">Adaptive thresholding algorithm to use: CV_ADAPTIVE_THRESH_MEAN_C CV_ADAPTIVE_THRESH_GAUSSIAN_C </param>
            <param name="threshold_type">Thresholding type; must be one of CV_THRESH_BINARY, CV_THRESH_BINARY_INV </param>
        </member>
        <member name="M:Cv.cv.CvAdaptiveThreshold(CxCore.CvSeq@,CxCore.CvSeq@,System.Double,System.Int32)">
            <summary>
            Applies adaptive threshold to array
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="max_value">Maximum value that is used with CV_THRESH_BINARY CV_THRESH_BINARY_INV </param>
            <param name="adaptive_method">Adaptive thresholding algorithm to use: CV_ADAPTIVE_THRESH_MEAN_C CV_ADAPTIVE_THRESH_GAUSSIAN_C </param>
        </member>
        <member name="M:Cv.cv.CvAdaptiveThreshold(CxCore.CvSeq@,CxCore.CvSeq@,System.Double)">
            <summary>
            Applies adaptive threshold to array
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. </param>
            <param name="max_value">Maximum value that is used with CV_THRESH_BINARY CV_THRESH_BINARY_INV </param>
        </member>
        <member name="M:Cv.cv.CvPyrDown(CxCore.IplImage@,CxCore.IplImage@,System.Int32)">
            <summary>
            Downsamples image
            </summary>
            <param name="src">The source image. </param>
            <param name="dst">The destination image, should have 2x smaller width and height than the source. </param>
            <param name="filter">Type of the filter used for convolution; only CV_GAUSSIAN_5x5 </param>
        </member>
        <member name="M:Cv.cv.CvPyrDown(CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Downsamples image
            </summary>
            <param name="src">The source image. </param>
            <param name="dst">The destination image, should have 2x smaller width and height than the source. </param>
        </member>
        <member name="M:Cv.cv.CvPyrDown(CxCore.CvMat@,CxCore.CvMat@,System.Int32)">
            <summary>
            Downsamples image
            </summary>
            <param name="src">The source image. </param>
            <param name="dst">The destination image, should have 2x smaller width and height than the source. </param>
            <param name="filter">Type of the filter used for convolution; only CV_GAUSSIAN_5x5 </param>
        </member>
        <member name="M:Cv.cv.CvPyrDown(CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Downsamples image
            </summary>
            <param name="src">The source image. </param>
            <param name="dst">The destination image, should have 2x smaller width and height than the source. </param>
        </member>
        <member name="M:Cv.cv.CvPyrDown(CxCore.CvSeq@,CxCore.CvSeq@,System.Int32)">
            <summary>
            Downsamples image
            </summary>
            <param name="src">The source image. </param>
            <param name="dst">The destination image, should have 2x smaller width and height than the source. </param>
            <param name="filter">Type of the filter used for convolution; only CV_GAUSSIAN_5x5 </param>
        </member>
        <member name="M:Cv.cv.CvPyrDown(CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Downsamples image
            </summary>
            <param name="src">The source image. </param>
            <param name="dst">The destination image, should have 2x smaller width and height than the source. </param>
        </member>
        <member name="M:Cv.cv.CvPyrUp(CxCore.IplImage@,CxCore.IplImage@,System.Int32)">
            <summary>
            Upsamples image
            </summary>
            <param name="src">The source image. </param>
            <param name="dst">The destination image, should have 2x smaller width and height than the source. </param>
            <param name="filter">Type of the filter used for convolution; only CV_GAUSSIAN_5x5 </param>
        </member>
        <member name="M:Cv.cv.CvPyrUp(CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Upsamples image
            </summary>
            <param name="src">The source image. </param>
            <param name="dst">The destination image, should have 2x smaller width and height than the source. </param>
        </member>
        <member name="M:Cv.cv.CvPyrUp(CxCore.CvMat@,CxCore.CvMat@,System.Int32)">
            <summary>
            Upsamples image
            </summary>
            <param name="src">The source image. </param>
            <param name="dst">The destination image, should have 2x smaller width and height than the source. </param>
            <param name="filter">Type of the filter used for convolution; only CV_GAUSSIAN_5x5 </param>
        </member>
        <member name="M:Cv.cv.CvPyrUp(CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Upsamples image
            </summary>
            <param name="src">The source image. </param>
            <param name="dst">The destination image, should have 2x smaller width and height than the source. </param>
        </member>
        <member name="M:Cv.cv.CvPyrUp(CxCore.CvSeq@,CxCore.CvSeq@,System.Int32)">
            <summary>
            Upsamples image
            </summary>
            <param name="src">The source image. </param>
            <param name="dst">The destination image, should have 2x smaller width and height than the source. </param>
            <param name="filter">Type of the filter used for convolution; only CV_GAUSSIAN_5x5 </param>
        </member>
        <member name="M:Cv.cv.CvPyrUp(CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Upsamples image
            </summary>
            <param name="src">The source image. </param>
            <param name="dst">The destination image, should have 2x smaller width and height than the source. </param>
        </member>
        <member name="M:Cv.cv.CvFloodFill(CxCore.IplImage@,CxCore.CvPoint,CxCore.CvScalar,CxCore.CvScalar,CxCore.CvScalar,Cv.CvConnectedComp@,System.Int32,CxCore.IplImage@)">
            <summary>
            Fills a connected component with given color
            </summary>
            <param name="image">Input 1- or 3-channel, 8-bit or floating-point image.             It is modified by the function unless CV_FLOODFILL_MASK_ONLY flag is set (see below). </param>
            <param name="seed_point">The starting point. </param>
            <param name="new_val">New value of repainted domain pixels. </param>
            <param name="lo_diff">Maximal lower brightness/color difference between the currently observed pixel and one of itsneighbor belong to the component or seed pixel to add the pixel to component.In case of 8-bit color images it is packed value. </param>
            <param name="up_diff">Maximal upper brightness/color difference between the currently observed pixel and one of itsneighbor belong to the component or seed pixel to add the pixel to component.In case of 8-bit color images it is packed value. </param>
            <param name="comp">Pointer to structure the function fills with the information about therepainted domain. </param>
            <param name="flags">The operation flags. Lower bits contain connectivity value, 4 (by default) or 8,used within the function. Connectivity determines which neighbors of a pixel are considered.Upper bits can be 0 or combination of the following flags: new_val </param>
            <param name="mask">Operation mask, should be singe-channel 8-bit image, 2 pixels wider and 2 pixels taller than image mask mask (x,y) image (x+1,y+1) </param>
        </member>
        <member name="M:Cv.cv.CvFloodFill(CxCore.IplImage@,CxCore.CvPoint,CxCore.CvScalar,CxCore.CvScalar,CxCore.CvScalar,Cv.CvConnectedComp@,System.Int32)">
            <summary>
            Fills a connected component with given color
            </summary>
            <param name="image">Input 1- or 3-channel, 8-bit or floating-point image.             It is modified by the function unless CV_FLOODFILL_MASK_ONLY flag is set (see below). </param>
            <param name="seed_point">The starting point. </param>
            <param name="new_val">New value of repainted domain pixels. </param>
            <param name="lo_diff">Maximal lower brightness/color difference between the currently observed pixel and one of itsneighbor belong to the component or seed pixel to add the pixel to component.In case of 8-bit color images it is packed value. </param>
            <param name="up_diff">Maximal upper brightness/color difference between the currently observed pixel and one of itsneighbor belong to the component or seed pixel to add the pixel to component.In case of 8-bit color images it is packed value. </param>
            <param name="comp">Pointer to structure the function fills with the information about therepainted domain. </param>
            <param name="flags">The operation flags. Lower bits contain connectivity value, 4 (by default) or 8,used within the function. Connectivity determines which neighbors of a pixel are considered.Upper bits can be 0 or combination of the following flags: new_val </param>
        </member>
        <member name="M:Cv.cv.CvFloodFill(CxCore.IplImage@,CxCore.CvPoint,CxCore.CvScalar,CxCore.CvScalar,CxCore.CvScalar,Cv.CvConnectedComp@)">
            <summary>
            Fills a connected component with given color
            </summary>
            <param name="image">Input 1- or 3-channel, 8-bit or floating-point image.             It is modified by the function unless CV_FLOODFILL_MASK_ONLY flag is set (see below). </param>
            <param name="seed_point">The starting point. </param>
            <param name="new_val">New value of repainted domain pixels. </param>
            <param name="lo_diff">Maximal lower brightness/color difference between the currently observed pixel and one of itsneighbor belong to the component or seed pixel to add the pixel to component.In case of 8-bit color images it is packed value. </param>
            <param name="up_diff">Maximal upper brightness/color difference between the currently observed pixel and one of itsneighbor belong to the component or seed pixel to add the pixel to component.In case of 8-bit color images it is packed value. </param>
            <param name="comp">Pointer to structure the function fills with the information about therepainted domain. </param>
        </member>
        <member name="M:Cv.cv.CvFloodFill(CxCore.IplImage@,CxCore.CvPoint,CxCore.CvScalar,CxCore.CvScalar,CxCore.CvScalar)">
            <summary>
            Fills a connected component with given color
            </summary>
            <param name="image">Input 1- or 3-channel, 8-bit or floating-point image.             It is modified by the function unless CV_FLOODFILL_MASK_ONLY flag is set (see below). </param>
            <param name="seed_point">The starting point. </param>
            <param name="new_val">New value of repainted domain pixels. </param>
            <param name="lo_diff">Maximal lower brightness/color difference between the currently observed pixel and one of itsneighbor belong to the component or seed pixel to add the pixel to component.In case of 8-bit color images it is packed value. </param>
            <param name="up_diff">Maximal upper brightness/color difference between the currently observed pixel and one of itsneighbor belong to the component or seed pixel to add the pixel to component.In case of 8-bit color images it is packed value. </param>
        </member>
        <member name="M:Cv.cv.CvFloodFill(CxCore.IplImage@,CxCore.CvPoint,CxCore.CvScalar,CxCore.CvScalar)">
            <summary>
            Fills a connected component with given color
            </summary>
            <param name="image">Input 1- or 3-channel, 8-bit or floating-point image.             It is modified by the function unless CV_FLOODFILL_MASK_ONLY flag is set (see below). </param>
            <param name="seed_point">The starting point. </param>
            <param name="new_val">New value of repainted domain pixels. </param>
            <param name="lo_diff">Maximal lower brightness/color difference between the currently observed pixel and one of itsneighbor belong to the component or seed pixel to add the pixel to component.In case of 8-bit color images it is packed value. </param>
        </member>
        <member name="M:Cv.cv.CvFloodFill(CxCore.IplImage@,CxCore.CvPoint,CxCore.CvScalar)">
            <summary>
            Fills a connected component with given color
            </summary>
            <param name="image">Input 1- or 3-channel, 8-bit or floating-point image.             It is modified by the function unless CV_FLOODFILL_MASK_ONLY flag is set (see below). </param>
            <param name="seed_point">The starting point. </param>
            <param name="new_val">New value of repainted domain pixels. </param>
        </member>
        <member name="M:Cv.cv.CvFloodFill(CxCore.IplImage@,CxCore.CvPoint,CxCore.CvScalar,CxCore.CvScalar,CxCore.CvScalar,System.Int32,CxCore.IplImage@)">
            <summary>
            Fills a connected component with given color
            </summary>
            <param name="image">Input 1- or 3-channel, 8-bit or floating-point image.             It is modified by the function unless CV_FLOODFILL_MASK_ONLY flag is set (see below). </param>
            <param name="seed_point">The starting point. </param>
            <param name="new_val">New value of repainted domain pixels. </param>
            <param name="lo_diff">Maximal lower brightness/color difference between the currently observed pixel and one of itsneighbor belong to the component or seed pixel to add the pixel to component.In case of 8-bit color images it is packed value. </param>
            <param name="up_diff">Maximal upper brightness/color difference between the currently observed pixel and one of itsneighbor belong to the component or seed pixel to add the pixel to component.In case of 8-bit color images it is packed value. </param>
            <param name="flags">The operation flags. Lower bits contain connectivity value, 4 (by default) or 8,used within the function. Connectivity determines which neighbors of a pixel are considered.Upper bits can be 0 or combination of the following flags: new_val </param>
            <param name="mask">Operation mask, should be singe-channel 8-bit image, 2 pixels wider and 2 pixels taller than image mask mask (x,y) image (x+1,y+1) </param>
        </member>
        <member name="M:Cv.cv.CvFloodFill(CxCore.IplImage@,CxCore.CvPoint,CxCore.CvScalar,CxCore.CvScalar,CxCore.CvScalar,System.Int32)">
            <summary>
            Fills a connected component with given color
            </summary>
            <param name="image">Input 1- or 3-channel, 8-bit or floating-point image.             It is modified by the function unless CV_FLOODFILL_MASK_ONLY flag is set (see below). </param>
            <param name="seed_point">The starting point. </param>
            <param name="new_val">New value of repainted domain pixels. </param>
            <param name="lo_diff">Maximal lower brightness/color difference between the currently observed pixel and one of itsneighbor belong to the component or seed pixel to add the pixel to component.In case of 8-bit color images it is packed value. </param>
            <param name="up_diff">Maximal upper brightness/color difference between the currently observed pixel and one of itsneighbor belong to the component or seed pixel to add the pixel to component.In case of 8-bit color images it is packed value. </param>
            <param name="flags">The operation flags. Lower bits contain connectivity value, 4 (by default) or 8,used within the function. Connectivity determines which neighbors of a pixel are considered.Upper bits can be 0 or combination of the following flags: new_val </param>
        </member>
        <member name="M:Cv.cv.CvFloodFill(CxCore.CvMat@,CxCore.CvPoint,CxCore.CvScalar,CxCore.CvScalar,CxCore.CvScalar,Cv.CvConnectedComp@,System.Int32,CxCore.CvMat@)">
            <summary>
            Fills a connected component with given color
            </summary>
            <param name="image">Input 1- or 3-channel, 8-bit or floating-point image.             It is modified by the function unless CV_FLOODFILL_MASK_ONLY flag is set (see below). </param>
            <param name="seed_point">The starting point. </param>
            <param name="new_val">New value of repainted domain pixels. </param>
            <param name="lo_diff">Maximal lower brightness/color difference between the currently observed pixel and one of itsneighbor belong to the component or seed pixel to add the pixel to component.In case of 8-bit color images it is packed value. </param>
            <param name="up_diff">Maximal upper brightness/color difference between the currently observed pixel and one of itsneighbor belong to the component or seed pixel to add the pixel to component.In case of 8-bit color images it is packed value. </param>
            <param name="comp">Pointer to structure the function fills with the information about therepainted domain. </param>
            <param name="flags">The operation flags. Lower bits contain connectivity value, 4 (by default) or 8,used within the function. Connectivity determines which neighbors of a pixel are considered.Upper bits can be 0 or combination of the following flags: new_val </param>
            <param name="mask">Operation mask, should be singe-channel 8-bit image, 2 pixels wider and 2 pixels taller than image mask mask (x,y) image (x+1,y+1) </param>
        </member>
        <member name="M:Cv.cv.CvFloodFill(CxCore.CvMat@,CxCore.CvPoint,CxCore.CvScalar,CxCore.CvScalar,CxCore.CvScalar,Cv.CvConnectedComp@,System.Int32)">
            <summary>
            Fills a connected component with given color
            </summary>
            <param name="image">Input 1- or 3-channel, 8-bit or floating-point image.             It is modified by the function unless CV_FLOODFILL_MASK_ONLY flag is set (see below). </param>
            <param name="seed_point">The starting point. </param>
            <param name="new_val">New value of repainted domain pixels. </param>
            <param name="lo_diff">Maximal lower brightness/color difference between the currently observed pixel and one of itsneighbor belong to the component or seed pixel to add the pixel to component.In case of 8-bit color images it is packed value. </param>
            <param name="up_diff">Maximal upper brightness/color difference between the currently observed pixel and one of itsneighbor belong to the component or seed pixel to add the pixel to component.In case of 8-bit color images it is packed value. </param>
            <param name="comp">Pointer to structure the function fills with the information about therepainted domain. </param>
            <param name="flags">The operation flags. Lower bits contain connectivity value, 4 (by default) or 8,used within the function. Connectivity determines which neighbors of a pixel are considered.Upper bits can be 0 or combination of the following flags: new_val </param>
        </member>
        <member name="M:Cv.cv.CvFloodFill(CxCore.CvMat@,CxCore.CvPoint,CxCore.CvScalar,CxCore.CvScalar,CxCore.CvScalar,Cv.CvConnectedComp@)">
            <summary>
            Fills a connected component with given color
            </summary>
            <param name="image">Input 1- or 3-channel, 8-bit or floating-point image.             It is modified by the function unless CV_FLOODFILL_MASK_ONLY flag is set (see below). </param>
            <param name="seed_point">The starting point. </param>
            <param name="new_val">New value of repainted domain pixels. </param>
            <param name="lo_diff">Maximal lower brightness/color difference between the currently observed pixel and one of itsneighbor belong to the component or seed pixel to add the pixel to component.In case of 8-bit color images it is packed value. </param>
            <param name="up_diff">Maximal upper brightness/color difference between the currently observed pixel and one of itsneighbor belong to the component or seed pixel to add the pixel to component.In case of 8-bit color images it is packed value. </param>
            <param name="comp">Pointer to structure the function fills with the information about therepainted domain. </param>
        </member>
        <member name="M:Cv.cv.CvFloodFill(CxCore.CvMat@,CxCore.CvPoint,CxCore.CvScalar,CxCore.CvScalar,CxCore.CvScalar)">
            <summary>
            Fills a connected component with given color
            </summary>
            <param name="image">Input 1- or 3-channel, 8-bit or floating-point image.             It is modified by the function unless CV_FLOODFILL_MASK_ONLY flag is set (see below). </param>
            <param name="seed_point">The starting point. </param>
            <param name="new_val">New value of repainted domain pixels. </param>
            <param name="lo_diff">Maximal lower brightness/color difference between the currently observed pixel and one of itsneighbor belong to the component or seed pixel to add the pixel to component.In case of 8-bit color images it is packed value. </param>
            <param name="up_diff">Maximal upper brightness/color difference between the currently observed pixel and one of itsneighbor belong to the component or seed pixel to add the pixel to component.In case of 8-bit color images it is packed value. </param>
        </member>
        <member name="M:Cv.cv.CvFloodFill(CxCore.CvMat@,CxCore.CvPoint,CxCore.CvScalar,CxCore.CvScalar)">
            <summary>
            Fills a connected component with given color
            </summary>
            <param name="image">Input 1- or 3-channel, 8-bit or floating-point image.             It is modified by the function unless CV_FLOODFILL_MASK_ONLY flag is set (see below). </param>
            <param name="seed_point">The starting point. </param>
            <param name="new_val">New value of repainted domain pixels. </param>
            <param name="lo_diff">Maximal lower brightness/color difference between the currently observed pixel and one of itsneighbor belong to the component or seed pixel to add the pixel to component.In case of 8-bit color images it is packed value. </param>
        </member>
        <member name="M:Cv.cv.CvFloodFill(CxCore.CvMat@,CxCore.CvPoint,CxCore.CvScalar)">
            <summary>
            Fills a connected component with given color
            </summary>
            <param name="image">Input 1- or 3-channel, 8-bit or floating-point image.             It is modified by the function unless CV_FLOODFILL_MASK_ONLY flag is set (see below). </param>
            <param name="seed_point">The starting point. </param>
            <param name="new_val">New value of repainted domain pixels. </param>
        </member>
        <member name="M:Cv.cv.CvFloodFill(CxCore.CvMat@,CxCore.CvPoint,CxCore.CvScalar,CxCore.CvScalar,CxCore.CvScalar,System.Int32,CxCore.CvMat@)">
            <summary>
            Fills a connected component with given color
            </summary>
            <param name="image">Input 1- or 3-channel, 8-bit or floating-point image.             It is modified by the function unless CV_FLOODFILL_MASK_ONLY flag is set (see below). </param>
            <param name="seed_point">The starting point. </param>
            <param name="new_val">New value of repainted domain pixels. </param>
            <param name="lo_diff">Maximal lower brightness/color difference between the currently observed pixel and one of itsneighbor belong to the component or seed pixel to add the pixel to component.In case of 8-bit color images it is packed value. </param>
            <param name="up_diff">Maximal upper brightness/color difference between the currently observed pixel and one of itsneighbor belong to the component or seed pixel to add the pixel to component.In case of 8-bit color images it is packed value. </param>
            <param name="flags">The operation flags. Lower bits contain connectivity value, 4 (by default) or 8,used within the function. Connectivity determines which neighbors of a pixel are considered.Upper bits can be 0 or combination of the following flags: new_val </param>
            <param name="mask">Operation mask, should be singe-channel 8-bit image, 2 pixels wider and 2 pixels taller than image mask mask (x,y) image (x+1,y+1) </param>
        </member>
        <member name="M:Cv.cv.CvFloodFill(CxCore.CvMat@,CxCore.CvPoint,CxCore.CvScalar,CxCore.CvScalar,CxCore.CvScalar,System.Int32)">
            <summary>
            Fills a connected component with given color
            </summary>
            <param name="image">Input 1- or 3-channel, 8-bit or floating-point image.             It is modified by the function unless CV_FLOODFILL_MASK_ONLY flag is set (see below). </param>
            <param name="seed_point">The starting point. </param>
            <param name="new_val">New value of repainted domain pixels. </param>
            <param name="lo_diff">Maximal lower brightness/color difference between the currently observed pixel and one of itsneighbor belong to the component or seed pixel to add the pixel to component.In case of 8-bit color images it is packed value. </param>
            <param name="up_diff">Maximal upper brightness/color difference between the currently observed pixel and one of itsneighbor belong to the component or seed pixel to add the pixel to component.In case of 8-bit color images it is packed value. </param>
            <param name="flags">The operation flags. Lower bits contain connectivity value, 4 (by default) or 8,used within the function. Connectivity determines which neighbors of a pixel are considered.Upper bits can be 0 or combination of the following flags: new_val </param>
        </member>
        <member name="M:Cv.cv.CvFloodFill(CxCore.CvSeq@,CxCore.CvPoint,CxCore.CvScalar,CxCore.CvScalar,CxCore.CvScalar,Cv.CvConnectedComp@,System.Int32,CxCore.CvSeq@)">
            <summary>
            Fills a connected component with given color
            </summary>
            <param name="image">Input 1- or 3-channel, 8-bit or floating-point image.             It is modified by the function unless CV_FLOODFILL_MASK_ONLY flag is set (see below). </param>
            <param name="seed_point">The starting point. </param>
            <param name="new_val">New value of repainted domain pixels. </param>
            <param name="lo_diff">Maximal lower brightness/color difference between the currently observed pixel and one of itsneighbor belong to the component or seed pixel to add the pixel to component.In case of 8-bit color images it is packed value. </param>
            <param name="up_diff">Maximal upper brightness/color difference between the currently observed pixel and one of itsneighbor belong to the component or seed pixel to add the pixel to component.In case of 8-bit color images it is packed value. </param>
            <param name="comp">Pointer to structure the function fills with the information about therepainted domain. </param>
            <param name="flags">The operation flags. Lower bits contain connectivity value, 4 (by default) or 8,used within the function. Connectivity determines which neighbors of a pixel are considered.Upper bits can be 0 or combination of the following flags: new_val </param>
            <param name="mask">Operation mask, should be singe-channel 8-bit image, 2 pixels wider and 2 pixels taller than image mask mask (x,y) image (x+1,y+1) </param>
        </member>
        <member name="M:Cv.cv.CvFloodFill(CxCore.CvSeq@,CxCore.CvPoint,CxCore.CvScalar,CxCore.CvScalar,CxCore.CvScalar,Cv.CvConnectedComp@,System.Int32)">
            <summary>
            Fills a connected component with given color
            </summary>
            <param name="image">Input 1- or 3-channel, 8-bit or floating-point image.             It is modified by the function unless CV_FLOODFILL_MASK_ONLY flag is set (see below). </param>
            <param name="seed_point">The starting point. </param>
            <param name="new_val">New value of repainted domain pixels. </param>
            <param name="lo_diff">Maximal lower brightness/color difference between the currently observed pixel and one of itsneighbor belong to the component or seed pixel to add the pixel to component.In case of 8-bit color images it is packed value. </param>
            <param name="up_diff">Maximal upper brightness/color difference between the currently observed pixel and one of itsneighbor belong to the component or seed pixel to add the pixel to component.In case of 8-bit color images it is packed value. </param>
            <param name="comp">Pointer to structure the function fills with the information about therepainted domain. </param>
            <param name="flags">The operation flags. Lower bits contain connectivity value, 4 (by default) or 8,used within the function. Connectivity determines which neighbors of a pixel are considered.Upper bits can be 0 or combination of the following flags: new_val </param>
        </member>
        <member name="M:Cv.cv.CvFloodFill(CxCore.CvSeq@,CxCore.CvPoint,CxCore.CvScalar,CxCore.CvScalar,CxCore.CvScalar,Cv.CvConnectedComp@)">
            <summary>
            Fills a connected component with given color
            </summary>
            <param name="image">Input 1- or 3-channel, 8-bit or floating-point image.             It is modified by the function unless CV_FLOODFILL_MASK_ONLY flag is set (see below). </param>
            <param name="seed_point">The starting point. </param>
            <param name="new_val">New value of repainted domain pixels. </param>
            <param name="lo_diff">Maximal lower brightness/color difference between the currently observed pixel and one of itsneighbor belong to the component or seed pixel to add the pixel to component.In case of 8-bit color images it is packed value. </param>
            <param name="up_diff">Maximal upper brightness/color difference between the currently observed pixel and one of itsneighbor belong to the component or seed pixel to add the pixel to component.In case of 8-bit color images it is packed value. </param>
            <param name="comp">Pointer to structure the function fills with the information about therepainted domain. </param>
        </member>
        <member name="M:Cv.cv.CvFloodFill(CxCore.CvSeq@,CxCore.CvPoint,CxCore.CvScalar,CxCore.CvScalar,CxCore.CvScalar)">
            <summary>
            Fills a connected component with given color
            </summary>
            <param name="image">Input 1- or 3-channel, 8-bit or floating-point image.             It is modified by the function unless CV_FLOODFILL_MASK_ONLY flag is set (see below). </param>
            <param name="seed_point">The starting point. </param>
            <param name="new_val">New value of repainted domain pixels. </param>
            <param name="lo_diff">Maximal lower brightness/color difference between the currently observed pixel and one of itsneighbor belong to the component or seed pixel to add the pixel to component.In case of 8-bit color images it is packed value. </param>
            <param name="up_diff">Maximal upper brightness/color difference between the currently observed pixel and one of itsneighbor belong to the component or seed pixel to add the pixel to component.In case of 8-bit color images it is packed value. </param>
        </member>
        <member name="M:Cv.cv.CvFloodFill(CxCore.CvSeq@,CxCore.CvPoint,CxCore.CvScalar,CxCore.CvScalar)">
            <summary>
            Fills a connected component with given color
            </summary>
            <param name="image">Input 1- or 3-channel, 8-bit or floating-point image.             It is modified by the function unless CV_FLOODFILL_MASK_ONLY flag is set (see below). </param>
            <param name="seed_point">The starting point. </param>
            <param name="new_val">New value of repainted domain pixels. </param>
            <param name="lo_diff">Maximal lower brightness/color difference between the currently observed pixel and one of itsneighbor belong to the component or seed pixel to add the pixel to component.In case of 8-bit color images it is packed value. </param>
        </member>
        <member name="M:Cv.cv.CvFloodFill(CxCore.CvSeq@,CxCore.CvPoint,CxCore.CvScalar)">
            <summary>
            Fills a connected component with given color
            </summary>
            <param name="image">Input 1- or 3-channel, 8-bit or floating-point image.             It is modified by the function unless CV_FLOODFILL_MASK_ONLY flag is set (see below). </param>
            <param name="seed_point">The starting point. </param>
            <param name="new_val">New value of repainted domain pixels. </param>
        </member>
        <member name="M:Cv.cv.CvFloodFill(CxCore.CvSeq@,CxCore.CvPoint,CxCore.CvScalar,CxCore.CvScalar,CxCore.CvScalar,System.Int32,CxCore.CvSeq@)">
            <summary>
            Fills a connected component with given color
            </summary>
            <param name="image">Input 1- or 3-channel, 8-bit or floating-point image.             It is modified by the function unless CV_FLOODFILL_MASK_ONLY flag is set (see below). </param>
            <param name="seed_point">The starting point. </param>
            <param name="new_val">New value of repainted domain pixels. </param>
            <param name="lo_diff">Maximal lower brightness/color difference between the currently observed pixel and one of itsneighbor belong to the component or seed pixel to add the pixel to component.In case of 8-bit color images it is packed value. </param>
            <param name="up_diff">Maximal upper brightness/color difference between the currently observed pixel and one of itsneighbor belong to the component or seed pixel to add the pixel to component.In case of 8-bit color images it is packed value. </param>
            <param name="flags">The operation flags. Lower bits contain connectivity value, 4 (by default) or 8,used within the function. Connectivity determines which neighbors of a pixel are considered.Upper bits can be 0 or combination of the following flags: new_val </param>
            <param name="mask">Operation mask, should be singe-channel 8-bit image, 2 pixels wider and 2 pixels taller than image mask mask (x,y) image (x+1,y+1) </param>
        </member>
        <member name="M:Cv.cv.CvFloodFill(CxCore.CvSeq@,CxCore.CvPoint,CxCore.CvScalar,CxCore.CvScalar,CxCore.CvScalar,System.Int32)">
            <summary>
            Fills a connected component with given color
            </summary>
            <param name="image">Input 1- or 3-channel, 8-bit or floating-point image.             It is modified by the function unless CV_FLOODFILL_MASK_ONLY flag is set (see below). </param>
            <param name="seed_point">The starting point. </param>
            <param name="new_val">New value of repainted domain pixels. </param>
            <param name="lo_diff">Maximal lower brightness/color difference between the currently observed pixel and one of itsneighbor belong to the component or seed pixel to add the pixel to component.In case of 8-bit color images it is packed value. </param>
            <param name="up_diff">Maximal upper brightness/color difference between the currently observed pixel and one of itsneighbor belong to the component or seed pixel to add the pixel to component.In case of 8-bit color images it is packed value. </param>
            <param name="flags">The operation flags. Lower bits contain connectivity value, 4 (by default) or 8,used within the function. Connectivity determines which neighbors of a pixel are considered.Upper bits can be 0 or combination of the following flags: new_val </param>
        </member>
        <member name="M:Cv.cv.CvFindContours(CxCore.IplImage@,CxCore.CvMemStorage@,System.IntPtr@,System.Int32,System.Int32,System.Int32,CxCore.CvPoint)">
            <summary>
            Finds contours in binary image
            </summary>
            <param name="image">The source 8-bit single channel image. Non-zero pixels are treated as1?s, zero pixels remain 0?s - that is image treated as binary </param>
            <param name="storage">Container of the retrieved contours. </param>
            <param name="first_contour">Output parameter, will contain the pointer to the first outer contour. </param>
            <param name="header_size">Size of the sequence header, >=sizeof( method </param>
            <param name="mode">Retrieval mode. CV_RETR_EXTERNAL CV_RETR_LIST CV_RETR_CCOMP CV_RETR_TREE </param>
            <param name="method">Approximation method (for all the modes, except CV_RETR_RUNS CV_CHAIN_CODE CV_CHAIN_APPROX_NONE CV_CHAIN_APPROX_SIMPLE CV_CHAIN_APPROX_TC89_L1, CV_LINK_RUNS CV_RETR_LIST </param>
            <param name="offset">Offset, by which every contour point is shifted. This is useful if the contours are extracted fromthe image ROI and then they should be analyzed in the whole image context. </param>
        </member>
        <member name="M:Cv.cv.CvFindContours(CxCore.IplImage@,CxCore.CvMemStorage@,System.IntPtr@,System.Int32,System.Int32,System.Int32)">
            <summary>
            Finds contours in binary image
            </summary>
            <param name="image">The source 8-bit single channel image. Non-zero pixels are treated as1?s, zero pixels remain 0?s - that is image treated as binary </param>
            <param name="storage">Container of the retrieved contours. </param>
            <param name="first_contour">Output parameter, will contain the pointer to the first outer contour. </param>
            <param name="header_size">Size of the sequence header, >=sizeof( method </param>
            <param name="mode">Retrieval mode. CV_RETR_EXTERNAL CV_RETR_LIST CV_RETR_CCOMP CV_RETR_TREE </param>
            <param name="method">Approximation method (for all the modes, except CV_RETR_RUNS CV_CHAIN_CODE CV_CHAIN_APPROX_NONE CV_CHAIN_APPROX_SIMPLE CV_CHAIN_APPROX_TC89_L1, CV_LINK_RUNS CV_RETR_LIST </param>
        </member>
        <member name="M:Cv.cv.CvFindContours(CxCore.IplImage@,CxCore.CvMemStorage@,System.IntPtr@,System.Int32,System.Int32)">
            <summary>
            Finds contours in binary image
            </summary>
            <param name="image">The source 8-bit single channel image. Non-zero pixels are treated as1?s, zero pixels remain 0?s - that is image treated as binary </param>
            <param name="storage">Container of the retrieved contours. </param>
            <param name="first_contour">Output parameter, will contain the pointer to the first outer contour. </param>
            <param name="header_size">Size of the sequence header, >=sizeof( method </param>
            <param name="mode">Retrieval mode. CV_RETR_EXTERNAL CV_RETR_LIST CV_RETR_CCOMP CV_RETR_TREE </param>
        </member>
        <member name="M:Cv.cv.CvFindContours(CxCore.IplImage@,CxCore.CvMemStorage@,System.IntPtr@,System.Int32)">
            <summary>
            Finds contours in binary image
            </summary>
            <param name="image">The source 8-bit single channel image. Non-zero pixels are treated as1?s, zero pixels remain 0?s - that is image treated as binary </param>
            <param name="storage">Container of the retrieved contours. </param>
            <param name="first_contour">Output parameter, will contain the pointer to the first outer contour. </param>
            <param name="header_size">Size of the sequence header, >=sizeof( method </param>
        </member>
        <member name="M:Cv.cv.CvFindContours(CxCore.IplImage@,CxCore.CvMemStorage@,System.IntPtr@)">
            <summary>
            Finds contours in binary image
            </summary>
            <param name="image">The source 8-bit single channel image. Non-zero pixels are treated as1?s, zero pixels remain 0?s - that is image treated as binary </param>
            <param name="storage">Container of the retrieved contours. </param>
            <param name="first_contour">Output parameter, will contain the pointer to the first outer contour. </param>
        </member>
        <member name="M:Cv.cv.CvFindContours(CxCore.CvMat@,CxCore.CvMemStorage@,System.IntPtr@,System.Int32,System.Int32,System.Int32,CxCore.CvPoint)">
            <summary>
            Finds contours in binary image
            </summary>
            <param name="image">The source 8-bit single channel image. Non-zero pixels are treated as1?s, zero pixels remain 0?s - that is image treated as binary </param>
            <param name="storage">Container of the retrieved contours. </param>
            <param name="first_contour">Output parameter, will contain the pointer to the first outer contour. </param>
            <param name="header_size">Size of the sequence header, >=sizeof( method </param>
            <param name="mode">Retrieval mode. CV_RETR_EXTERNAL CV_RETR_LIST CV_RETR_CCOMP CV_RETR_TREE </param>
            <param name="method">Approximation method (for all the modes, except CV_RETR_RUNS CV_CHAIN_CODE CV_CHAIN_APPROX_NONE CV_CHAIN_APPROX_SIMPLE CV_CHAIN_APPROX_TC89_L1, CV_LINK_RUNS CV_RETR_LIST </param>
            <param name="offset">Offset, by which every contour point is shifted. This is useful if the contours are extracted fromthe image ROI and then they should be analyzed in the whole image context. </param>
        </member>
        <member name="M:Cv.cv.CvFindContours(CxCore.CvMat@,CxCore.CvMemStorage@,System.IntPtr@,System.Int32,System.Int32,System.Int32)">
            <summary>
            Finds contours in binary image
            </summary>
            <param name="image">The source 8-bit single channel image. Non-zero pixels are treated as1?s, zero pixels remain 0?s - that is image treated as binary </param>
            <param name="storage">Container of the retrieved contours. </param>
            <param name="first_contour">Output parameter, will contain the pointer to the first outer contour. </param>
            <param name="header_size">Size of the sequence header, >=sizeof( method </param>
            <param name="mode">Retrieval mode. CV_RETR_EXTERNAL CV_RETR_LIST CV_RETR_CCOMP CV_RETR_TREE </param>
            <param name="method">Approximation method (for all the modes, except CV_RETR_RUNS CV_CHAIN_CODE CV_CHAIN_APPROX_NONE CV_CHAIN_APPROX_SIMPLE CV_CHAIN_APPROX_TC89_L1, CV_LINK_RUNS CV_RETR_LIST </param>
        </member>
        <member name="M:Cv.cv.CvFindContours(CxCore.CvMat@,CxCore.CvMemStorage@,System.IntPtr@,System.Int32,System.Int32)">
            <summary>
            Finds contours in binary image
            </summary>
            <param name="image">The source 8-bit single channel image. Non-zero pixels are treated as1?s, zero pixels remain 0?s - that is image treated as binary </param>
            <param name="storage">Container of the retrieved contours. </param>
            <param name="first_contour">Output parameter, will contain the pointer to the first outer contour. </param>
            <param name="header_size">Size of the sequence header, >=sizeof( method </param>
            <param name="mode">Retrieval mode. CV_RETR_EXTERNAL CV_RETR_LIST CV_RETR_CCOMP CV_RETR_TREE </param>
        </member>
        <member name="M:Cv.cv.CvFindContours(CxCore.CvMat@,CxCore.CvMemStorage@,System.IntPtr@,System.Int32)">
            <summary>
            Finds contours in binary image
            </summary>
            <param name="image">The source 8-bit single channel image. Non-zero pixels are treated as1?s, zero pixels remain 0?s - that is image treated as binary </param>
            <param name="storage">Container of the retrieved contours. </param>
            <param name="first_contour">Output parameter, will contain the pointer to the first outer contour. </param>
            <param name="header_size">Size of the sequence header, >=sizeof( method </param>
        </member>
        <member name="M:Cv.cv.CvFindContours(CxCore.CvMat@,CxCore.CvMemStorage@,System.IntPtr@)">
            <summary>
            Finds contours in binary image
            </summary>
            <param name="image">The source 8-bit single channel image. Non-zero pixels are treated as1?s, zero pixels remain 0?s - that is image treated as binary </param>
            <param name="storage">Container of the retrieved contours. </param>
            <param name="first_contour">Output parameter, will contain the pointer to the first outer contour. </param>
        </member>
        <member name="M:Cv.cv.CvFindContours(CxCore.CvSeq@,CxCore.CvMemStorage@,System.IntPtr@,System.Int32,System.Int32,System.Int32,CxCore.CvPoint)">
            <summary>
            Finds contours in binary image
            </summary>
            <param name="image">The source 8-bit single channel image. Non-zero pixels are treated as1?s, zero pixels remain 0?s - that is image treated as binary </param>
            <param name="storage">Container of the retrieved contours. </param>
            <param name="first_contour">Output parameter, will contain the pointer to the first outer contour. </param>
            <param name="header_size">Size of the sequence header, >=sizeof( method </param>
            <param name="mode">Retrieval mode. CV_RETR_EXTERNAL CV_RETR_LIST CV_RETR_CCOMP CV_RETR_TREE </param>
            <param name="method">Approximation method (for all the modes, except CV_RETR_RUNS CV_CHAIN_CODE CV_CHAIN_APPROX_NONE CV_CHAIN_APPROX_SIMPLE CV_CHAIN_APPROX_TC89_L1, CV_LINK_RUNS CV_RETR_LIST </param>
            <param name="offset">Offset, by which every contour point is shifted. This is useful if the contours are extracted fromthe image ROI and then they should be analyzed in the whole image context. </param>
        </member>
        <member name="M:Cv.cv.CvFindContours(CxCore.CvSeq@,CxCore.CvMemStorage@,System.IntPtr@,System.Int32,System.Int32,System.Int32)">
            <summary>
            Finds contours in binary image
            </summary>
            <param name="image">The source 8-bit single channel image. Non-zero pixels are treated as1?s, zero pixels remain 0?s - that is image treated as binary </param>
            <param name="storage">Container of the retrieved contours. </param>
            <param name="first_contour">Output parameter, will contain the pointer to the first outer contour. </param>
            <param name="header_size">Size of the sequence header, >=sizeof( method </param>
            <param name="mode">Retrieval mode. CV_RETR_EXTERNAL CV_RETR_LIST CV_RETR_CCOMP CV_RETR_TREE </param>
            <param name="method">Approximation method (for all the modes, except CV_RETR_RUNS CV_CHAIN_CODE CV_CHAIN_APPROX_NONE CV_CHAIN_APPROX_SIMPLE CV_CHAIN_APPROX_TC89_L1, CV_LINK_RUNS CV_RETR_LIST </param>
        </member>
        <member name="M:Cv.cv.CvFindContours(CxCore.CvSeq@,CxCore.CvMemStorage@,System.IntPtr@,System.Int32,System.Int32)">
            <summary>
            Finds contours in binary image
            </summary>
            <param name="image">The source 8-bit single channel image. Non-zero pixels are treated as1?s, zero pixels remain 0?s - that is image treated as binary </param>
            <param name="storage">Container of the retrieved contours. </param>
            <param name="first_contour">Output parameter, will contain the pointer to the first outer contour. </param>
            <param name="header_size">Size of the sequence header, >=sizeof( method </param>
            <param name="mode">Retrieval mode. CV_RETR_EXTERNAL CV_RETR_LIST CV_RETR_CCOMP CV_RETR_TREE </param>
        </member>
        <member name="M:Cv.cv.CvFindContours(CxCore.CvSeq@,CxCore.CvMemStorage@,System.IntPtr@,System.Int32)">
            <summary>
            Finds contours in binary image
            </summary>
            <param name="image">The source 8-bit single channel image. Non-zero pixels are treated as1?s, zero pixels remain 0?s - that is image treated as binary </param>
            <param name="storage">Container of the retrieved contours. </param>
            <param name="first_contour">Output parameter, will contain the pointer to the first outer contour. </param>
            <param name="header_size">Size of the sequence header, >=sizeof( method </param>
        </member>
        <member name="M:Cv.cv.CvFindContours(CxCore.CvSeq@,CxCore.CvMemStorage@,System.IntPtr@)">
            <summary>
            Finds contours in binary image
            </summary>
            <param name="image">The source 8-bit single channel image. Non-zero pixels are treated as1?s, zero pixels remain 0?s - that is image treated as binary </param>
            <param name="storage">Container of the retrieved contours. </param>
            <param name="first_contour">Output parameter, will contain the pointer to the first outer contour. </param>
        </member>
        <member name="M:Cv.cv.CvStartFindContours(CxCore.IplImage@,CxCore.CvMemStorage@,System.Int32,System.Int32)">
            <summary>
            Initializes contour scanning process
            </summary>
            <param name="image">The source 8-bit single channel binary image. </param>
            <param name="storage">Container of the retrieved contours. </param>
            <param name="mode">Retrieval mode; see </param>
            <param name="method">Approximation method. It has the same meaning as in </param>
        </member>
        <member name="M:Cv.cv.CvStartFindContours(CxCore.IplImage@,CxCore.CvMemStorage@,System.Int32)">
            <summary>
            Initializes contour scanning process
            </summary>
            <param name="image">The source 8-bit single channel binary image. </param>
            <param name="storage">Container of the retrieved contours. </param>
            <param name="mode">Retrieval mode; see </param>
        </member>
        <member name="M:Cv.cv.CvStartFindContours(CxCore.IplImage@,CxCore.CvMemStorage@)">
            <summary>
            Initializes contour scanning process
            </summary>
            <param name="image">The source 8-bit single channel binary image. </param>
            <param name="storage">Container of the retrieved contours. </param>
        </member>
        <member name="M:Cv.cv.CvStartFindContours(CxCore.IplImage@)">
            <summary>
            Initializes contour scanning process
            </summary>
            <param name="image">The source 8-bit single channel binary image. </param>
        </member>
        <member name="M:Cv.cv.CvStartFindContours(CxCore.CvMat@,CxCore.CvMemStorage@,System.Int32,System.Int32)">
            <summary>
            Initializes contour scanning process
            </summary>
            <param name="image">The source 8-bit single channel binary image. </param>
            <param name="storage">Container of the retrieved contours. </param>
            <param name="mode">Retrieval mode; see </param>
            <param name="method">Approximation method. It has the same meaning as in </param>
        </member>
        <member name="M:Cv.cv.CvStartFindContours(CxCore.CvMat@,CxCore.CvMemStorage@,System.Int32)">
            <summary>
            Initializes contour scanning process
            </summary>
            <param name="image">The source 8-bit single channel binary image. </param>
            <param name="storage">Container of the retrieved contours. </param>
            <param name="mode">Retrieval mode; see </param>
        </member>
        <member name="M:Cv.cv.CvStartFindContours(CxCore.CvMat@,CxCore.CvMemStorage@)">
            <summary>
            Initializes contour scanning process
            </summary>
            <param name="image">The source 8-bit single channel binary image. </param>
            <param name="storage">Container of the retrieved contours. </param>
        </member>
        <member name="M:Cv.cv.CvStartFindContours(CxCore.CvMat@)">
            <summary>
            Initializes contour scanning process
            </summary>
            <param name="image">The source 8-bit single channel binary image. </param>
        </member>
        <member name="M:Cv.cv.CvStartFindContours(CxCore.CvSeq@,CxCore.CvMemStorage@,System.Int32,System.Int32)">
            <summary>
            Initializes contour scanning process
            </summary>
            <param name="image">The source 8-bit single channel binary image. </param>
            <param name="storage">Container of the retrieved contours. </param>
            <param name="mode">Retrieval mode; see </param>
            <param name="method">Approximation method. It has the same meaning as in </param>
        </member>
        <member name="M:Cv.cv.CvStartFindContours(CxCore.CvSeq@,CxCore.CvMemStorage@,System.Int32)">
            <summary>
            Initializes contour scanning process
            </summary>
            <param name="image">The source 8-bit single channel binary image. </param>
            <param name="storage">Container of the retrieved contours. </param>
            <param name="mode">Retrieval mode; see </param>
        </member>
        <member name="M:Cv.cv.CvStartFindContours(CxCore.CvSeq@,CxCore.CvMemStorage@)">
            <summary>
            Initializes contour scanning process
            </summary>
            <param name="image">The source 8-bit single channel binary image. </param>
            <param name="storage">Container of the retrieved contours. </param>
        </member>
        <member name="M:Cv.cv.CvStartFindContours(CxCore.CvSeq@)">
            <summary>
            Initializes contour scanning process
            </summary>
            <param name="image">The source 8-bit single channel binary image. </param>
        </member>
        <member name="M:Cv.cv.CvFindNextContour(Cv.CvContourScanner)">
            <summary>
            Finds next contour in the image
            </summary>
            <param name="scanner">Contour scanner initialized by The function cvStartFindContours </param>
        </member>
        <member name="M:Cv.cv.CvSubstituteContour(Cv.CvContourScanner,CxCore.CvSeq@)">
            <summary>
            Replaces retrieved contour
            </summary>
            <param name="scanner">Contour scanner initialized by the function cvStartFindContours . </param>
            <param name="new_contour">Substituting contour. </param>
        </member>
        <member name="M:Cv.cv.CvEndFindContours(Cv.CvContourScanner@)">
            <summary>
            Finishes scanning process
            </summary>
            <param name="scanner">Pointer to the contour scanner. </param>
        </member>
        <member name="M:Cv.cv.CvPyrSegmentation(CxCore.IplImage@,CxCore.IplImage@,CxCore.CvMemStorage@,CxCore.CvSeq@,System.Int32,System.Double,System.Double)">
            <summary>
            Does image segmentation by pyramids
            </summary>
            <param name="src">The source image. </param>
            <param name="dst">The destination image. </param>
            <param name="storage">Storage; stores the resulting sequence of connected components. </param>
            <param name="comp">Pointer to the output sequence of the segmented components. </param>
            <param name="level">Maximum level of the pyramid for the segmentation. </param>
            <param name="threshold1">Error threshold for establishing the links. </param>
            <param name="threshold2">Error threshold for the segments clustering. </param>
        </member>
        <member name="M:Cv.cv.CvPyrMeanShiftFiltering(CxCore.IplImage@,CxCore.IplImage@,System.Double,System.Double,System.Int32)">
            <summary>
            Does meanshift image segmentation
            </summary>
            <param name="src">The source 8-bit 3-channel image. </param>
            <param name="dst">The destination image of the same format and the same size as the source. </param>
            <param name="sp">The spatial window radius. </param>
            <param name="sr">The color window radius. </param>
            <param name="max_level">Maximum level of the pyramid for the segmentation. </param>
        </member>
        <member name="M:Cv.cv.CvPyrMeanShiftFiltering(CxCore.IplImage@,CxCore.IplImage@,System.Double,System.Double)">
            <summary>
            Does meanshift image segmentation
            </summary>
            <param name="src">The source 8-bit 3-channel image. </param>
            <param name="dst">The destination image of the same format and the same size as the source. </param>
            <param name="sp">The spatial window radius. </param>
            <param name="sr">The color window radius. </param>
        </member>
        <member name="M:Cv.cv.CvPyrMeanShiftFiltering(CxCore.IplImage@,CxCore.IplImage@,System.Double,System.Int32)">
            <summary>
            Does meanshift image segmentation
            </summary>
            <param name="src">The source 8-bit 3-channel image. </param>
            <param name="dst">The destination image of the same format and the same size as the source. </param>
            <param name="sp">The spatial window radius. </param>
            <param name="max_level">Maximum level of the pyramid for the segmentation. </param>
        </member>
        <member name="M:Cv.cv.CvPyrMeanShiftFiltering(CxCore.CvMat@,CxCore.CvMat@,System.Double,System.Double,System.Int32)">
            <summary>
            Does meanshift image segmentation
            </summary>
            <param name="src">The source 8-bit 3-channel image. </param>
            <param name="dst">The destination image of the same format and the same size as the source. </param>
            <param name="sp">The spatial window radius. </param>
            <param name="sr">The color window radius. </param>
            <param name="max_level">Maximum level of the pyramid for the segmentation. </param>
        </member>
        <member name="M:Cv.cv.CvPyrMeanShiftFiltering(CxCore.CvMat@,CxCore.CvMat@,System.Double,System.Double)">
            <summary>
            Does meanshift image segmentation
            </summary>
            <param name="src">The source 8-bit 3-channel image. </param>
            <param name="dst">The destination image of the same format and the same size as the source. </param>
            <param name="sp">The spatial window radius. </param>
            <param name="sr">The color window radius. </param>
        </member>
        <member name="M:Cv.cv.CvPyrMeanShiftFiltering(CxCore.CvMat@,CxCore.CvMat@,System.Double,System.Int32)">
            <summary>
            Does meanshift image segmentation
            </summary>
            <param name="src">The source 8-bit 3-channel image. </param>
            <param name="dst">The destination image of the same format and the same size as the source. </param>
            <param name="sp">The spatial window radius. </param>
            <param name="max_level">Maximum level of the pyramid for the segmentation. </param>
        </member>
        <member name="M:Cv.cv.CvPyrMeanShiftFiltering(CxCore.CvSeq@,CxCore.CvSeq@,System.Double,System.Double,System.Int32)">
            <summary>
            Does meanshift image segmentation
            </summary>
            <param name="src">The source 8-bit 3-channel image. </param>
            <param name="dst">The destination image of the same format and the same size as the source. </param>
            <param name="sp">The spatial window radius. </param>
            <param name="sr">The color window radius. </param>
            <param name="max_level">Maximum level of the pyramid for the segmentation. </param>
        </member>
        <member name="M:Cv.cv.CvPyrMeanShiftFiltering(CxCore.CvSeq@,CxCore.CvSeq@,System.Double,System.Double)">
            <summary>
            Does meanshift image segmentation
            </summary>
            <param name="src">The source 8-bit 3-channel image. </param>
            <param name="dst">The destination image of the same format and the same size as the source. </param>
            <param name="sp">The spatial window radius. </param>
            <param name="sr">The color window radius. </param>
        </member>
        <member name="M:Cv.cv.CvPyrMeanShiftFiltering(CxCore.CvSeq@,CxCore.CvSeq@,System.Double,System.Int32)">
            <summary>
            Does meanshift image segmentation
            </summary>
            <param name="src">The source 8-bit 3-channel image. </param>
            <param name="dst">The destination image of the same format and the same size as the source. </param>
            <param name="sp">The spatial window radius. </param>
            <param name="max_level">Maximum level of the pyramid for the segmentation. </param>
        </member>
        <member name="M:Cv.cv.CvWatershed(CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Does watershed segmentation
            </summary>
            <param name="image">The input 8-bit 3-channel image. </param>
            <param name="markers">The input/output 32-bit single-channel image (map) of markers. </param>
        </member>
        <member name="M:Cv.cv.CvWatershed(CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Does watershed segmentation
            </summary>
            <param name="image">The input 8-bit 3-channel image. </param>
            <param name="markers">The input/output 32-bit single-channel image (map) of markers. </param>
        </member>
        <member name="M:Cv.cv.CvWatershed(CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Does watershed segmentation
            </summary>
            <param name="image">The input 8-bit 3-channel image. </param>
            <param name="markers">The input/output 32-bit single-channel image (map) of markers. </param>
        </member>
        <member name="M:Cv.cv.CvMoments(CxCore.IplImage@,Cv.CvMoments@,System.Int32)">
            <summary>
            Calculates all moments up to third order of a polygon or rasterized shape
            </summary>
            <param name="arr">Image (1-channel or 3-channel with COI set)           or polygon (CvSeq of points or a vector of points). </param>
            <param name="moments">Pointer to returned moment state structure. </param>
            <param name="binary">(For images only) If the flag is non-zero, all the zero pixel values are treated aszeroes, all the others are treated as 1?s. </param>
        </member>
        <member name="M:Cv.cv.CvMoments(CxCore.IplImage@,Cv.CvMoments@)">
            <summary>
            Calculates all moments up to third order of a polygon or rasterized shape
            </summary>
            <param name="arr">Image (1-channel or 3-channel with COI set)           or polygon (CvSeq of points or a vector of points). </param>
            <param name="moments">Pointer to returned moment state structure. </param>
        </member>
        <member name="M:Cv.cv.CvMoments(CxCore.CvMat@,Cv.CvMoments@,System.Int32)">
            <summary>
            Calculates all moments up to third order of a polygon or rasterized shape
            </summary>
            <param name="arr">Image (1-channel or 3-channel with COI set)           or polygon (CvSeq of points or a vector of points). </param>
            <param name="moments">Pointer to returned moment state structure. </param>
            <param name="binary">(For images only) If the flag is non-zero, all the zero pixel values are treated aszeroes, all the others are treated as 1?s. </param>
        </member>
        <member name="M:Cv.cv.CvMoments(CxCore.CvMat@,Cv.CvMoments@)">
            <summary>
            Calculates all moments up to third order of a polygon or rasterized shape
            </summary>
            <param name="arr">Image (1-channel or 3-channel with COI set)           or polygon (CvSeq of points or a vector of points). </param>
            <param name="moments">Pointer to returned moment state structure. </param>
        </member>
        <member name="M:Cv.cv.CvMoments(CxCore.CvSeq@,Cv.CvMoments@,System.Int32)">
            <summary>
            Calculates all moments up to third order of a polygon or rasterized shape
            </summary>
            <param name="arr">Image (1-channel or 3-channel with COI set)           or polygon (CvSeq of points or a vector of points). </param>
            <param name="moments">Pointer to returned moment state structure. </param>
            <param name="binary">(For images only) If the flag is non-zero, all the zero pixel values are treated aszeroes, all the others are treated as 1?s. </param>
        </member>
        <member name="M:Cv.cv.CvMoments(CxCore.CvSeq@,Cv.CvMoments@)">
            <summary>
            Calculates all moments up to third order of a polygon or rasterized shape
            </summary>
            <param name="arr">Image (1-channel or 3-channel with COI set)           or polygon (CvSeq of points or a vector of points). </param>
            <param name="moments">Pointer to returned moment state structure. </param>
        </member>
        <member name="M:Cv.cv.CvGetSpatialMoment(Cv.CvMoments@,System.Int32,System.Int32)">
            <summary>
            Retrieves spatial moment from moment state structure
            </summary>
            <param name="moments">The moment state, calculated by </param>
            <param name="x_order">x order of the retrieved moment, x_order </param>
            <param name="y_order">y order of the retrieved moment, y_order x_order y_order </param>
        </member>
        <member name="M:Cv.cv.CvGetCentralMoment(Cv.CvMoments@,System.Int32,System.Int32)">
            <summary>
            Retrieves central moment from moment state structure
            </summary>
            <param name="moments">Pointer to the moment state structure. </param>
            <param name="x_order">x order of the retrieved moment, x_order </param>
            <param name="y_order">y order of the retrieved moment, y_order x_order y_order </param>
        </member>
        <member name="M:Cv.cv.CvGetNormalizedCentralMoment(Cv.CvMoments@,System.Int32,System.Int32)">
            <summary>
            Retrieves normalized central moment from moment state structure
            </summary>
            <param name="moments">Pointer to the moment state structure. </param>
            <param name="x_order">x order of the retrieved moment, x_order </param>
            <param name="y_order">y order of the retrieved moment, y_order x_order y_order </param>
        </member>
        <member name="M:Cv.cv.CvGetHuMoments(Cv.CvMoments@,Cv.CvHuMoments@)">
            <summary>
            Calculates seven Hu invariants
            </summary>
            <param name="moments">Pointer to the moment state structure. </param>
            <param name="hu_moments">Pointer to Hu moments structure. </param>
        </member>
        <member name="M:Cv.cv.CvHoughLines2(CxCore.IplImage@,System.IntPtr,System.Int32,System.Double,System.Double,System.Int32,System.Double,System.Double)">
            <summary>
            Finds lines in binary image using Hough transform
            </summary>
            <param name="image">The input 8-bit single-channel binary image. In case of probabilistic method the image is             modified by the function. </param>
            <param name="line_storage">The storage for the lines detected. It can be a memory storage (in this casea sequence of lines is created in the storage and returned by the function) or single row/single columnmatrix (CvMat*) of a particular type (see below) to which the lines' parameters are written.The matrix header is modified by the function so its cols rows line_storage </param>
            <param name="method">The Hough transform variant, one of: CV_HOUGH_STANDARD CV_HOUGH_PROBABILISTIC CV_HOUGH_MULTI_SCALE </param>
            <param name="rho">Distance resolution in pixel-related units. </param>
            <param name="theta">Angle resolution measured in radians. </param>
            <param name="threshold">Threshold parameter. A line is returned by the function if the correspondingaccumulator value is greater than threshold </param>
            <param name="param1">The first method-dependent parameter: rho rho rho param1 </param>
            <param name="param2">The second method-dependent parameter: theta theta theta param2 </param>
        </member>
        <member name="M:Cv.cv.CvHoughLines2(CxCore.IplImage@,System.IntPtr,System.Int32,System.Double,System.Double,System.Int32,System.Double)">
            <summary>
            Finds lines in binary image using Hough transform
            </summary>
            <param name="image">The input 8-bit single-channel binary image. In case of probabilistic method the image is             modified by the function. </param>
            <param name="line_storage">The storage for the lines detected. It can be a memory storage (in this casea sequence of lines is created in the storage and returned by the function) or single row/single columnmatrix (CvMat*) of a particular type (see below) to which the lines' parameters are written.The matrix header is modified by the function so its cols rows line_storage </param>
            <param name="method">The Hough transform variant, one of: CV_HOUGH_STANDARD CV_HOUGH_PROBABILISTIC CV_HOUGH_MULTI_SCALE </param>
            <param name="rho">Distance resolution in pixel-related units. </param>
            <param name="theta">Angle resolution measured in radians. </param>
            <param name="threshold">Threshold parameter. A line is returned by the function if the correspondingaccumulator value is greater than threshold </param>
            <param name="param1">The first method-dependent parameter: rho rho rho param1 </param>
        </member>
        <member name="M:Cv.cv.CvHoughLines2(CxCore.IplImage@,System.IntPtr,System.Int32,System.Double,System.Double,System.Int32)">
            <summary>
            Finds lines in binary image using Hough transform
            </summary>
            <param name="image">The input 8-bit single-channel binary image. In case of probabilistic method the image is             modified by the function. </param>
            <param name="line_storage">The storage for the lines detected. It can be a memory storage (in this casea sequence of lines is created in the storage and returned by the function) or single row/single columnmatrix (CvMat*) of a particular type (see below) to which the lines' parameters are written.The matrix header is modified by the function so its cols rows line_storage </param>
            <param name="method">The Hough transform variant, one of: CV_HOUGH_STANDARD CV_HOUGH_PROBABILISTIC CV_HOUGH_MULTI_SCALE </param>
            <param name="rho">Distance resolution in pixel-related units. </param>
            <param name="theta">Angle resolution measured in radians. </param>
            <param name="threshold">Threshold parameter. A line is returned by the function if the correspondingaccumulator value is greater than threshold </param>
        </member>
        <member name="M:Cv.cv.CvHoughLines2(CxCore.CvMat@,System.IntPtr,System.Int32,System.Double,System.Double,System.Int32,System.Double,System.Double)">
            <summary>
            Finds lines in binary image using Hough transform
            </summary>
            <param name="image">The input 8-bit single-channel binary image. In case of probabilistic method the image is             modified by the function. </param>
            <param name="line_storage">The storage for the lines detected. It can be a memory storage (in this casea sequence of lines is created in the storage and returned by the function) or single row/single columnmatrix (CvMat*) of a particular type (see below) to which the lines' parameters are written.The matrix header is modified by the function so its cols rows line_storage </param>
            <param name="method">The Hough transform variant, one of: CV_HOUGH_STANDARD CV_HOUGH_PROBABILISTIC CV_HOUGH_MULTI_SCALE </param>
            <param name="rho">Distance resolution in pixel-related units. </param>
            <param name="theta">Angle resolution measured in radians. </param>
            <param name="threshold">Threshold parameter. A line is returned by the function if the correspondingaccumulator value is greater than threshold </param>
            <param name="param1">The first method-dependent parameter: rho rho rho param1 </param>
            <param name="param2">The second method-dependent parameter: theta theta theta param2 </param>
        </member>
        <member name="M:Cv.cv.CvHoughLines2(CxCore.CvMat@,System.IntPtr,System.Int32,System.Double,System.Double,System.Int32,System.Double)">
            <summary>
            Finds lines in binary image using Hough transform
            </summary>
            <param name="image">The input 8-bit single-channel binary image. In case of probabilistic method the image is             modified by the function. </param>
            <param name="line_storage">The storage for the lines detected. It can be a memory storage (in this casea sequence of lines is created in the storage and returned by the function) or single row/single columnmatrix (CvMat*) of a particular type (see below) to which the lines' parameters are written.The matrix header is modified by the function so its cols rows line_storage </param>
            <param name="method">The Hough transform variant, one of: CV_HOUGH_STANDARD CV_HOUGH_PROBABILISTIC CV_HOUGH_MULTI_SCALE </param>
            <param name="rho">Distance resolution in pixel-related units. </param>
            <param name="theta">Angle resolution measured in radians. </param>
            <param name="threshold">Threshold parameter. A line is returned by the function if the correspondingaccumulator value is greater than threshold </param>
            <param name="param1">The first method-dependent parameter: rho rho rho param1 </param>
        </member>
        <member name="M:Cv.cv.CvHoughLines2(CxCore.CvMat@,System.IntPtr,System.Int32,System.Double,System.Double,System.Int32)">
            <summary>
            Finds lines in binary image using Hough transform
            </summary>
            <param name="image">The input 8-bit single-channel binary image. In case of probabilistic method the image is             modified by the function. </param>
            <param name="line_storage">The storage for the lines detected. It can be a memory storage (in this casea sequence of lines is created in the storage and returned by the function) or single row/single columnmatrix (CvMat*) of a particular type (see below) to which the lines' parameters are written.The matrix header is modified by the function so its cols rows line_storage </param>
            <param name="method">The Hough transform variant, one of: CV_HOUGH_STANDARD CV_HOUGH_PROBABILISTIC CV_HOUGH_MULTI_SCALE </param>
            <param name="rho">Distance resolution in pixel-related units. </param>
            <param name="theta">Angle resolution measured in radians. </param>
            <param name="threshold">Threshold parameter. A line is returned by the function if the correspondingaccumulator value is greater than threshold </param>
        </member>
        <member name="M:Cv.cv.CvHoughLines2(CxCore.CvSeq@,System.IntPtr,System.Int32,System.Double,System.Double,System.Int32,System.Double,System.Double)">
            <summary>
            Finds lines in binary image using Hough transform
            </summary>
            <param name="image">The input 8-bit single-channel binary image. In case of probabilistic method the image is             modified by the function. </param>
            <param name="line_storage">The storage for the lines detected. It can be a memory storage (in this casea sequence of lines is created in the storage and returned by the function) or single row/single columnmatrix (CvMat*) of a particular type (see below) to which the lines' parameters are written.The matrix header is modified by the function so its cols rows line_storage </param>
            <param name="method">The Hough transform variant, one of: CV_HOUGH_STANDARD CV_HOUGH_PROBABILISTIC CV_HOUGH_MULTI_SCALE </param>
            <param name="rho">Distance resolution in pixel-related units. </param>
            <param name="theta">Angle resolution measured in radians. </param>
            <param name="threshold">Threshold parameter. A line is returned by the function if the correspondingaccumulator value is greater than threshold </param>
            <param name="param1">The first method-dependent parameter: rho rho rho param1 </param>
            <param name="param2">The second method-dependent parameter: theta theta theta param2 </param>
        </member>
        <member name="M:Cv.cv.CvHoughLines2(CxCore.CvSeq@,System.IntPtr,System.Int32,System.Double,System.Double,System.Int32,System.Double)">
            <summary>
            Finds lines in binary image using Hough transform
            </summary>
            <param name="image">The input 8-bit single-channel binary image. In case of probabilistic method the image is             modified by the function. </param>
            <param name="line_storage">The storage for the lines detected. It can be a memory storage (in this casea sequence of lines is created in the storage and returned by the function) or single row/single columnmatrix (CvMat*) of a particular type (see below) to which the lines' parameters are written.The matrix header is modified by the function so its cols rows line_storage </param>
            <param name="method">The Hough transform variant, one of: CV_HOUGH_STANDARD CV_HOUGH_PROBABILISTIC CV_HOUGH_MULTI_SCALE </param>
            <param name="rho">Distance resolution in pixel-related units. </param>
            <param name="theta">Angle resolution measured in radians. </param>
            <param name="threshold">Threshold parameter. A line is returned by the function if the correspondingaccumulator value is greater than threshold </param>
            <param name="param1">The first method-dependent parameter: rho rho rho param1 </param>
        </member>
        <member name="M:Cv.cv.CvHoughLines2(CxCore.CvSeq@,System.IntPtr,System.Int32,System.Double,System.Double,System.Int32)">
            <summary>
            Finds lines in binary image using Hough transform
            </summary>
            <param name="image">The input 8-bit single-channel binary image. In case of probabilistic method the image is             modified by the function. </param>
            <param name="line_storage">The storage for the lines detected. It can be a memory storage (in this casea sequence of lines is created in the storage and returned by the function) or single row/single columnmatrix (CvMat*) of a particular type (see below) to which the lines' parameters are written.The matrix header is modified by the function so its cols rows line_storage </param>
            <param name="method">The Hough transform variant, one of: CV_HOUGH_STANDARD CV_HOUGH_PROBABILISTIC CV_HOUGH_MULTI_SCALE </param>
            <param name="rho">Distance resolution in pixel-related units. </param>
            <param name="theta">Angle resolution measured in radians. </param>
            <param name="threshold">Threshold parameter. A line is returned by the function if the correspondingaccumulator value is greater than threshold </param>
        </member>
        <member name="M:Cv.cv.CvHoughCircles(CxCore.IplImage@,System.IntPtr,System.Int32,System.Double,System.Double,System.Double,System.Double,System.Int32,System.Int32)">
            <summary>
            Finds circles in grayscale image using Hough transform
            </summary>
            <param name="image">The input 8-bit single-channel grayscale image. </param>
            <param name="circle_storage">The storage for the circles detected. It can be a memory storage (in this casea sequence of circles is created in the storage and returned by the function) or single row/single columnmatrix (CvMat*) of type CV_32FC3, to which the circles' parameters are written.The matrix header is modified by the function so its cols rows circle_storage </param>
            <param name="method">Currently, the only implemented method is CV_HOUGH_GRADIENT </param>
            <param name="dp">Resolution of the accumulator used to detect centers of the circles. For example, if it is 1,the accumulator will have the same resolution as the input image, if it is 2 - accumulator will have twicesmaller width and height, etc. </param>
            <param name="min_dist">Minimum distance between centers of the detected circles. If the parameter is too small, multipleneighbor circles may be falsely detected in addition to a true one. If it is too large, some circles may be missed. </param>
            <param name="param1">The first method-specific parameter. In case of CV_HOUGH_GRADIENT </param>
            <param name="param2">The second method-specific parameter. In case of CV_HOUGH_GRADIENT </param>
            <param name="min_radius">Minimal radius of the circles to search for. </param>
            <param name="max_radius">Maximal radius of the circles to search for. By default the maximal radius is set to max(image_width, image_height) </param>
        </member>
        <member name="M:Cv.cv.CvHoughCircles(CxCore.IplImage@,System.IntPtr,System.Int32,System.Double,System.Double,System.Double,System.Double,System.Int32)">
            <summary>
            Finds circles in grayscale image using Hough transform
            </summary>
            <param name="image">The input 8-bit single-channel grayscale image. </param>
            <param name="circle_storage">The storage for the circles detected. It can be a memory storage (in this casea sequence of circles is created in the storage and returned by the function) or single row/single columnmatrix (CvMat*) of type CV_32FC3, to which the circles' parameters are written.The matrix header is modified by the function so its cols rows circle_storage </param>
            <param name="method">Currently, the only implemented method is CV_HOUGH_GRADIENT </param>
            <param name="dp">Resolution of the accumulator used to detect centers of the circles. For example, if it is 1,the accumulator will have the same resolution as the input image, if it is 2 - accumulator will have twicesmaller width and height, etc. </param>
            <param name="min_dist">Minimum distance between centers of the detected circles. If the parameter is too small, multipleneighbor circles may be falsely detected in addition to a true one. If it is too large, some circles may be missed. </param>
            <param name="param1">The first method-specific parameter. In case of CV_HOUGH_GRADIENT </param>
            <param name="param2">The second method-specific parameter. In case of CV_HOUGH_GRADIENT </param>
            <param name="min_radius">Minimal radius of the circles to search for. </param>
        </member>
        <member name="M:Cv.cv.CvHoughCircles(CxCore.IplImage@,System.IntPtr,System.Int32,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Finds circles in grayscale image using Hough transform
            </summary>
            <param name="image">The input 8-bit single-channel grayscale image. </param>
            <param name="circle_storage">The storage for the circles detected. It can be a memory storage (in this casea sequence of circles is created in the storage and returned by the function) or single row/single columnmatrix (CvMat*) of type CV_32FC3, to which the circles' parameters are written.The matrix header is modified by the function so its cols rows circle_storage </param>
            <param name="method">Currently, the only implemented method is CV_HOUGH_GRADIENT </param>
            <param name="dp">Resolution of the accumulator used to detect centers of the circles. For example, if it is 1,the accumulator will have the same resolution as the input image, if it is 2 - accumulator will have twicesmaller width and height, etc. </param>
            <param name="min_dist">Minimum distance between centers of the detected circles. If the parameter is too small, multipleneighbor circles may be falsely detected in addition to a true one. If it is too large, some circles may be missed. </param>
            <param name="param1">The first method-specific parameter. In case of CV_HOUGH_GRADIENT </param>
            <param name="param2">The second method-specific parameter. In case of CV_HOUGH_GRADIENT </param>
        </member>
        <member name="M:Cv.cv.CvHoughCircles(CxCore.IplImage@,System.IntPtr,System.Int32,System.Double,System.Double,System.Double)">
            <summary>
            Finds circles in grayscale image using Hough transform
            </summary>
            <param name="image">The input 8-bit single-channel grayscale image. </param>
            <param name="circle_storage">The storage for the circles detected. It can be a memory storage (in this casea sequence of circles is created in the storage and returned by the function) or single row/single columnmatrix (CvMat*) of type CV_32FC3, to which the circles' parameters are written.The matrix header is modified by the function so its cols rows circle_storage </param>
            <param name="method">Currently, the only implemented method is CV_HOUGH_GRADIENT </param>
            <param name="dp">Resolution of the accumulator used to detect centers of the circles. For example, if it is 1,the accumulator will have the same resolution as the input image, if it is 2 - accumulator will have twicesmaller width and height, etc. </param>
            <param name="min_dist">Minimum distance between centers of the detected circles. If the parameter is too small, multipleneighbor circles may be falsely detected in addition to a true one. If it is too large, some circles may be missed. </param>
            <param name="param1">The first method-specific parameter. In case of CV_HOUGH_GRADIENT </param>
        </member>
        <member name="M:Cv.cv.CvHoughCircles(CxCore.IplImage@,System.IntPtr,System.Int32,System.Double,System.Double)">
            <summary>
            Finds circles in grayscale image using Hough transform
            </summary>
            <param name="image">The input 8-bit single-channel grayscale image. </param>
            <param name="circle_storage">The storage for the circles detected. It can be a memory storage (in this casea sequence of circles is created in the storage and returned by the function) or single row/single columnmatrix (CvMat*) of type CV_32FC3, to which the circles' parameters are written.The matrix header is modified by the function so its cols rows circle_storage </param>
            <param name="method">Currently, the only implemented method is CV_HOUGH_GRADIENT </param>
            <param name="dp">Resolution of the accumulator used to detect centers of the circles. For example, if it is 1,the accumulator will have the same resolution as the input image, if it is 2 - accumulator will have twicesmaller width and height, etc. </param>
            <param name="min_dist">Minimum distance between centers of the detected circles. If the parameter is too small, multipleneighbor circles may be falsely detected in addition to a true one. If it is too large, some circles may be missed. </param>
        </member>
        <member name="M:Cv.cv.CvHoughCircles(CxCore.CvMat@,System.IntPtr,System.Int32,System.Double,System.Double,System.Double,System.Double,System.Int32,System.Int32)">
            <summary>
            Finds circles in grayscale image using Hough transform
            </summary>
            <param name="image">The input 8-bit single-channel grayscale image. </param>
            <param name="circle_storage">The storage for the circles detected. It can be a memory storage (in this casea sequence of circles is created in the storage and returned by the function) or single row/single columnmatrix (CvMat*) of type CV_32FC3, to which the circles' parameters are written.The matrix header is modified by the function so its cols rows circle_storage </param>
            <param name="method">Currently, the only implemented method is CV_HOUGH_GRADIENT </param>
            <param name="dp">Resolution of the accumulator used to detect centers of the circles. For example, if it is 1,the accumulator will have the same resolution as the input image, if it is 2 - accumulator will have twicesmaller width and height, etc. </param>
            <param name="min_dist">Minimum distance between centers of the detected circles. If the parameter is too small, multipleneighbor circles may be falsely detected in addition to a true one. If it is too large, some circles may be missed. </param>
            <param name="param1">The first method-specific parameter. In case of CV_HOUGH_GRADIENT </param>
            <param name="param2">The second method-specific parameter. In case of CV_HOUGH_GRADIENT </param>
            <param name="min_radius">Minimal radius of the circles to search for. </param>
            <param name="max_radius">Maximal radius of the circles to search for. By default the maximal radius is set to max(image_width, image_height) </param>
        </member>
        <member name="M:Cv.cv.CvHoughCircles(CxCore.CvMat@,System.IntPtr,System.Int32,System.Double,System.Double,System.Double,System.Double,System.Int32)">
            <summary>
            Finds circles in grayscale image using Hough transform
            </summary>
            <param name="image">The input 8-bit single-channel grayscale image. </param>
            <param name="circle_storage">The storage for the circles detected. It can be a memory storage (in this casea sequence of circles is created in the storage and returned by the function) or single row/single columnmatrix (CvMat*) of type CV_32FC3, to which the circles' parameters are written.The matrix header is modified by the function so its cols rows circle_storage </param>
            <param name="method">Currently, the only implemented method is CV_HOUGH_GRADIENT </param>
            <param name="dp">Resolution of the accumulator used to detect centers of the circles. For example, if it is 1,the accumulator will have the same resolution as the input image, if it is 2 - accumulator will have twicesmaller width and height, etc. </param>
            <param name="min_dist">Minimum distance between centers of the detected circles. If the parameter is too small, multipleneighbor circles may be falsely detected in addition to a true one. If it is too large, some circles may be missed. </param>
            <param name="param1">The first method-specific parameter. In case of CV_HOUGH_GRADIENT </param>
            <param name="param2">The second method-specific parameter. In case of CV_HOUGH_GRADIENT </param>
            <param name="min_radius">Minimal radius of the circles to search for. </param>
        </member>
        <member name="M:Cv.cv.CvHoughCircles(CxCore.CvMat@,System.IntPtr,System.Int32,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Finds circles in grayscale image using Hough transform
            </summary>
            <param name="image">The input 8-bit single-channel grayscale image. </param>
            <param name="circle_storage">The storage for the circles detected. It can be a memory storage (in this casea sequence of circles is created in the storage and returned by the function) or single row/single columnmatrix (CvMat*) of type CV_32FC3, to which the circles' parameters are written.The matrix header is modified by the function so its cols rows circle_storage </param>
            <param name="method">Currently, the only implemented method is CV_HOUGH_GRADIENT </param>
            <param name="dp">Resolution of the accumulator used to detect centers of the circles. For example, if it is 1,the accumulator will have the same resolution as the input image, if it is 2 - accumulator will have twicesmaller width and height, etc. </param>
            <param name="min_dist">Minimum distance between centers of the detected circles. If the parameter is too small, multipleneighbor circles may be falsely detected in addition to a true one. If it is too large, some circles may be missed. </param>
            <param name="param1">The first method-specific parameter. In case of CV_HOUGH_GRADIENT </param>
            <param name="param2">The second method-specific parameter. In case of CV_HOUGH_GRADIENT </param>
        </member>
        <member name="M:Cv.cv.CvHoughCircles(CxCore.CvMat@,System.IntPtr,System.Int32,System.Double,System.Double,System.Double)">
            <summary>
            Finds circles in grayscale image using Hough transform
            </summary>
            <param name="image">The input 8-bit single-channel grayscale image. </param>
            <param name="circle_storage">The storage for the circles detected. It can be a memory storage (in this casea sequence of circles is created in the storage and returned by the function) or single row/single columnmatrix (CvMat*) of type CV_32FC3, to which the circles' parameters are written.The matrix header is modified by the function so its cols rows circle_storage </param>
            <param name="method">Currently, the only implemented method is CV_HOUGH_GRADIENT </param>
            <param name="dp">Resolution of the accumulator used to detect centers of the circles. For example, if it is 1,the accumulator will have the same resolution as the input image, if it is 2 - accumulator will have twicesmaller width and height, etc. </param>
            <param name="min_dist">Minimum distance between centers of the detected circles. If the parameter is too small, multipleneighbor circles may be falsely detected in addition to a true one. If it is too large, some circles may be missed. </param>
            <param name="param1">The first method-specific parameter. In case of CV_HOUGH_GRADIENT </param>
        </member>
        <member name="M:Cv.cv.CvHoughCircles(CxCore.CvMat@,System.IntPtr,System.Int32,System.Double,System.Double)">
            <summary>
            Finds circles in grayscale image using Hough transform
            </summary>
            <param name="image">The input 8-bit single-channel grayscale image. </param>
            <param name="circle_storage">The storage for the circles detected. It can be a memory storage (in this casea sequence of circles is created in the storage and returned by the function) or single row/single columnmatrix (CvMat*) of type CV_32FC3, to which the circles' parameters are written.The matrix header is modified by the function so its cols rows circle_storage </param>
            <param name="method">Currently, the only implemented method is CV_HOUGH_GRADIENT </param>
            <param name="dp">Resolution of the accumulator used to detect centers of the circles. For example, if it is 1,the accumulator will have the same resolution as the input image, if it is 2 - accumulator will have twicesmaller width and height, etc. </param>
            <param name="min_dist">Minimum distance between centers of the detected circles. If the parameter is too small, multipleneighbor circles may be falsely detected in addition to a true one. If it is too large, some circles may be missed. </param>
        </member>
        <member name="M:Cv.cv.CvHoughCircles(CxCore.CvSeq@,System.IntPtr,System.Int32,System.Double,System.Double,System.Double,System.Double,System.Int32,System.Int32)">
            <summary>
            Finds circles in grayscale image using Hough transform
            </summary>
            <param name="image">The input 8-bit single-channel grayscale image. </param>
            <param name="circle_storage">The storage for the circles detected. It can be a memory storage (in this casea sequence of circles is created in the storage and returned by the function) or single row/single columnmatrix (CvMat*) of type CV_32FC3, to which the circles' parameters are written.The matrix header is modified by the function so its cols rows circle_storage </param>
            <param name="method">Currently, the only implemented method is CV_HOUGH_GRADIENT </param>
            <param name="dp">Resolution of the accumulator used to detect centers of the circles. For example, if it is 1,the accumulator will have the same resolution as the input image, if it is 2 - accumulator will have twicesmaller width and height, etc. </param>
            <param name="min_dist">Minimum distance between centers of the detected circles. If the parameter is too small, multipleneighbor circles may be falsely detected in addition to a true one. If it is too large, some circles may be missed. </param>
            <param name="param1">The first method-specific parameter. In case of CV_HOUGH_GRADIENT </param>
            <param name="param2">The second method-specific parameter. In case of CV_HOUGH_GRADIENT </param>
            <param name="min_radius">Minimal radius of the circles to search for. </param>
            <param name="max_radius">Maximal radius of the circles to search for. By default the maximal radius is set to max(image_width, image_height) </param>
        </member>
        <member name="M:Cv.cv.CvHoughCircles(CxCore.CvSeq@,System.IntPtr,System.Int32,System.Double,System.Double,System.Double,System.Double,System.Int32)">
            <summary>
            Finds circles in grayscale image using Hough transform
            </summary>
            <param name="image">The input 8-bit single-channel grayscale image. </param>
            <param name="circle_storage">The storage for the circles detected. It can be a memory storage (in this casea sequence of circles is created in the storage and returned by the function) or single row/single columnmatrix (CvMat*) of type CV_32FC3, to which the circles' parameters are written.The matrix header is modified by the function so its cols rows circle_storage </param>
            <param name="method">Currently, the only implemented method is CV_HOUGH_GRADIENT </param>
            <param name="dp">Resolution of the accumulator used to detect centers of the circles. For example, if it is 1,the accumulator will have the same resolution as the input image, if it is 2 - accumulator will have twicesmaller width and height, etc. </param>
            <param name="min_dist">Minimum distance between centers of the detected circles. If the parameter is too small, multipleneighbor circles may be falsely detected in addition to a true one. If it is too large, some circles may be missed. </param>
            <param name="param1">The first method-specific parameter. In case of CV_HOUGH_GRADIENT </param>
            <param name="param2">The second method-specific parameter. In case of CV_HOUGH_GRADIENT </param>
            <param name="min_radius">Minimal radius of the circles to search for. </param>
        </member>
        <member name="M:Cv.cv.CvHoughCircles(CxCore.CvSeq@,System.IntPtr,System.Int32,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Finds circles in grayscale image using Hough transform
            </summary>
            <param name="image">The input 8-bit single-channel grayscale image. </param>
            <param name="circle_storage">The storage for the circles detected. It can be a memory storage (in this casea sequence of circles is created in the storage and returned by the function) or single row/single columnmatrix (CvMat*) of type CV_32FC3, to which the circles' parameters are written.The matrix header is modified by the function so its cols rows circle_storage </param>
            <param name="method">Currently, the only implemented method is CV_HOUGH_GRADIENT </param>
            <param name="dp">Resolution of the accumulator used to detect centers of the circles. For example, if it is 1,the accumulator will have the same resolution as the input image, if it is 2 - accumulator will have twicesmaller width and height, etc. </param>
            <param name="min_dist">Minimum distance between centers of the detected circles. If the parameter is too small, multipleneighbor circles may be falsely detected in addition to a true one. If it is too large, some circles may be missed. </param>
            <param name="param1">The first method-specific parameter. In case of CV_HOUGH_GRADIENT </param>
            <param name="param2">The second method-specific parameter. In case of CV_HOUGH_GRADIENT </param>
        </member>
        <member name="M:Cv.cv.CvHoughCircles(CxCore.CvSeq@,System.IntPtr,System.Int32,System.Double,System.Double,System.Double)">
            <summary>
            Finds circles in grayscale image using Hough transform
            </summary>
            <param name="image">The input 8-bit single-channel grayscale image. </param>
            <param name="circle_storage">The storage for the circles detected. It can be a memory storage (in this casea sequence of circles is created in the storage and returned by the function) or single row/single columnmatrix (CvMat*) of type CV_32FC3, to which the circles' parameters are written.The matrix header is modified by the function so its cols rows circle_storage </param>
            <param name="method">Currently, the only implemented method is CV_HOUGH_GRADIENT </param>
            <param name="dp">Resolution of the accumulator used to detect centers of the circles. For example, if it is 1,the accumulator will have the same resolution as the input image, if it is 2 - accumulator will have twicesmaller width and height, etc. </param>
            <param name="min_dist">Minimum distance between centers of the detected circles. If the parameter is too small, multipleneighbor circles may be falsely detected in addition to a true one. If it is too large, some circles may be missed. </param>
            <param name="param1">The first method-specific parameter. In case of CV_HOUGH_GRADIENT </param>
        </member>
        <member name="M:Cv.cv.CvHoughCircles(CxCore.CvSeq@,System.IntPtr,System.Int32,System.Double,System.Double)">
            <summary>
            Finds circles in grayscale image using Hough transform
            </summary>
            <param name="image">The input 8-bit single-channel grayscale image. </param>
            <param name="circle_storage">The storage for the circles detected. It can be a memory storage (in this casea sequence of circles is created in the storage and returned by the function) or single row/single columnmatrix (CvMat*) of type CV_32FC3, to which the circles' parameters are written.The matrix header is modified by the function so its cols rows circle_storage </param>
            <param name="method">Currently, the only implemented method is CV_HOUGH_GRADIENT </param>
            <param name="dp">Resolution of the accumulator used to detect centers of the circles. For example, if it is 1,the accumulator will have the same resolution as the input image, if it is 2 - accumulator will have twicesmaller width and height, etc. </param>
            <param name="min_dist">Minimum distance between centers of the detected circles. If the parameter is too small, multipleneighbor circles may be falsely detected in addition to a true one. If it is too large, some circles may be missed. </param>
        </member>
        <member name="M:Cv.cv.CvDistTransform(CxCore.IplImage@,CxCore.IplImage@,System.Int32,System.Int32,System.Single[],CxCore.IplImage@)">
            <summary>
            Calculates distance to closest zero pixel for all non-zero pixels of sourceimage
            </summary>
            <param name="src">Source 8-bit single-channel (binary) image. </param>
            <param name="dst">Output image with calculated distances (32-bit floating-point, single-channel). </param>
            <param name="distance_type">Type of distance; can be CV_DIST_L1, CV_DIST_L2, CV_DIST_C CV_DIST_USER </param>
            <param name="mask_size">Size of distance transform mask; can be 3, 5 or 0. In case of CV_DIST_L1 CV_DIST_C mask_size </param>
            <param name="mask">User-defined mask in case of user-defined distance, it consists of 2 numbers(horizontal/vertical shift cost, diagonal shift cost) in case of 3�3 mask and3 numbers (horizontal/vertical shift cost, diagonal shift cost, knight?s move cost)in case of 5�5 mask. </param>
            <param name="labels">The optional output 2d array of labels of integer type              and the same size as src dst mask_size </param>
        </member>
        <member name="M:Cv.cv.CvDistTransform(CxCore.IplImage@,CxCore.IplImage@,System.Int32,System.Int32,System.Single)">
            <summary>
            Calculates distance to closest zero pixel for all non-zero pixels of sourceimage
            </summary>
            <param name="src">Source 8-bit single-channel (binary) image. </param>
            <param name="dst">Output image with calculated distances (32-bit floating-point, single-channel). </param>
            <param name="distance_type">Type of distance; can be CV_DIST_L1, CV_DIST_L2, CV_DIST_C CV_DIST_USER </param>
            <param name="mask_size">Size of distance transform mask; can be 3, 5 or 0. In case of CV_DIST_L1 CV_DIST_C mask_size </param>
            <param name="mask">User-defined mask in case of user-defined distance, it consists of 2 numbers(horizontal/vertical shift cost, diagonal shift cost) in case of 3�3 mask and3 numbers (horizontal/vertical shift cost, diagonal shift cost, knight?s move cost)in case of 5�5 mask. </param>
        </member>
        <member name="M:Cv.cv.CvDistTransform(CxCore.IplImage@,CxCore.IplImage@,System.Int32,System.Int32)">
            <summary>
            Calculates distance to closest zero pixel for all non-zero pixels of sourceimage
            </summary>
            <param name="src">Source 8-bit single-channel (binary) image. </param>
            <param name="dst">Output image with calculated distances (32-bit floating-point, single-channel). </param>
            <param name="distance_type">Type of distance; can be CV_DIST_L1, CV_DIST_L2, CV_DIST_C CV_DIST_USER </param>
            <param name="mask_size">Size of distance transform mask; can be 3, 5 or 0. In case of CV_DIST_L1 CV_DIST_C mask_size </param>
        </member>
        <member name="M:Cv.cv.CvDistTransform(CxCore.IplImage@,CxCore.IplImage@,System.Int32)">
            <summary>
            Calculates distance to closest zero pixel for all non-zero pixels of sourceimage
            </summary>
            <param name="src">Source 8-bit single-channel (binary) image. </param>
            <param name="dst">Output image with calculated distances (32-bit floating-point, single-channel). </param>
            <param name="distance_type">Type of distance; can be CV_DIST_L1, CV_DIST_L2, CV_DIST_C CV_DIST_USER </param>
        </member>
        <member name="M:Cv.cv.CvDistTransform(CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Calculates distance to closest zero pixel for all non-zero pixels of sourceimage
            </summary>
            <param name="src">Source 8-bit single-channel (binary) image. </param>
            <param name="dst">Output image with calculated distances (32-bit floating-point, single-channel). </param>
        </member>
        <member name="M:Cv.cv.CvDistTransform(CxCore.IplImage@,CxCore.IplImage@,System.Int32,System.Int32,CxCore.IplImage@)">
            <summary>
            Calculates distance to closest zero pixel for all non-zero pixels of sourceimage
            </summary>
            <param name="src">Source 8-bit single-channel (binary) image. </param>
            <param name="dst">Output image with calculated distances (32-bit floating-point, single-channel). </param>
            <param name="distance_type">Type of distance; can be CV_DIST_L1, CV_DIST_L2, CV_DIST_C CV_DIST_USER </param>
            <param name="mask_size">Size of distance transform mask; can be 3, 5 or 0. In case of CV_DIST_L1 CV_DIST_C mask_size </param>
            <param name="labels">The optional output 2d array of labels of integer type              and the same size as src dst mask_size </param>
        </member>
        <member name="M:Cv.cv.CvDistTransform(CxCore.CvMat@,CxCore.CvMat@,System.Int32,System.Int32,System.Single[],CxCore.CvMat@)">
            <summary>
            Calculates distance to closest zero pixel for all non-zero pixels of sourceimage
            </summary>
            <param name="src">Source 8-bit single-channel (binary) image. </param>
            <param name="dst">Output image with calculated distances (32-bit floating-point, single-channel). </param>
            <param name="distance_type">Type of distance; can be CV_DIST_L1, CV_DIST_L2, CV_DIST_C CV_DIST_USER </param>
            <param name="mask_size">Size of distance transform mask; can be 3, 5 or 0. In case of CV_DIST_L1 CV_DIST_C mask_size </param>
            <param name="mask">User-defined mask in case of user-defined distance, it consists of 2 numbers(horizontal/vertical shift cost, diagonal shift cost) in case of 3�3 mask and3 numbers (horizontal/vertical shift cost, diagonal shift cost, knight?s move cost)in case of 5�5 mask. </param>
            <param name="labels">The optional output 2d array of labels of integer type              and the same size as src dst mask_size </param>
        </member>
        <member name="M:Cv.cv.CvDistTransform(CxCore.CvMat@,CxCore.CvMat@,System.Int32,System.Int32,System.Single)">
            <summary>
            Calculates distance to closest zero pixel for all non-zero pixels of sourceimage
            </summary>
            <param name="src">Source 8-bit single-channel (binary) image. </param>
            <param name="dst">Output image with calculated distances (32-bit floating-point, single-channel). </param>
            <param name="distance_type">Type of distance; can be CV_DIST_L1, CV_DIST_L2, CV_DIST_C CV_DIST_USER </param>
            <param name="mask_size">Size of distance transform mask; can be 3, 5 or 0. In case of CV_DIST_L1 CV_DIST_C mask_size </param>
            <param name="mask">User-defined mask in case of user-defined distance, it consists of 2 numbers(horizontal/vertical shift cost, diagonal shift cost) in case of 3�3 mask and3 numbers (horizontal/vertical shift cost, diagonal shift cost, knight?s move cost)in case of 5�5 mask. </param>
        </member>
        <member name="M:Cv.cv.CvDistTransform(CxCore.CvMat@,CxCore.CvMat@,System.Int32,System.Int32)">
            <summary>
            Calculates distance to closest zero pixel for all non-zero pixels of sourceimage
            </summary>
            <param name="src">Source 8-bit single-channel (binary) image. </param>
            <param name="dst">Output image with calculated distances (32-bit floating-point, single-channel). </param>
            <param name="distance_type">Type of distance; can be CV_DIST_L1, CV_DIST_L2, CV_DIST_C CV_DIST_USER </param>
            <param name="mask_size">Size of distance transform mask; can be 3, 5 or 0. In case of CV_DIST_L1 CV_DIST_C mask_size </param>
        </member>
        <member name="M:Cv.cv.CvDistTransform(CxCore.CvMat@,CxCore.CvMat@,System.Int32)">
            <summary>
            Calculates distance to closest zero pixel for all non-zero pixels of sourceimage
            </summary>
            <param name="src">Source 8-bit single-channel (binary) image. </param>
            <param name="dst">Output image with calculated distances (32-bit floating-point, single-channel). </param>
            <param name="distance_type">Type of distance; can be CV_DIST_L1, CV_DIST_L2, CV_DIST_C CV_DIST_USER </param>
        </member>
        <member name="M:Cv.cv.CvDistTransform(CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Calculates distance to closest zero pixel for all non-zero pixels of sourceimage
            </summary>
            <param name="src">Source 8-bit single-channel (binary) image. </param>
            <param name="dst">Output image with calculated distances (32-bit floating-point, single-channel). </param>
        </member>
        <member name="M:Cv.cv.CvDistTransform(CxCore.CvMat@,CxCore.CvMat@,System.Int32,System.Int32,CxCore.CvMat@)">
            <summary>
            Calculates distance to closest zero pixel for all non-zero pixels of sourceimage
            </summary>
            <param name="src">Source 8-bit single-channel (binary) image. </param>
            <param name="dst">Output image with calculated distances (32-bit floating-point, single-channel). </param>
            <param name="distance_type">Type of distance; can be CV_DIST_L1, CV_DIST_L2, CV_DIST_C CV_DIST_USER </param>
            <param name="mask_size">Size of distance transform mask; can be 3, 5 or 0. In case of CV_DIST_L1 CV_DIST_C mask_size </param>
            <param name="labels">The optional output 2d array of labels of integer type              and the same size as src dst mask_size </param>
        </member>
        <member name="M:Cv.cv.CvDistTransform(CxCore.CvSeq@,CxCore.CvSeq@,System.Int32,System.Int32,System.Single[],CxCore.CvSeq@)">
            <summary>
            Calculates distance to closest zero pixel for all non-zero pixels of sourceimage
            </summary>
            <param name="src">Source 8-bit single-channel (binary) image. </param>
            <param name="dst">Output image with calculated distances (32-bit floating-point, single-channel). </param>
            <param name="distance_type">Type of distance; can be CV_DIST_L1, CV_DIST_L2, CV_DIST_C CV_DIST_USER </param>
            <param name="mask_size">Size of distance transform mask; can be 3, 5 or 0. In case of CV_DIST_L1 CV_DIST_C mask_size </param>
            <param name="mask">User-defined mask in case of user-defined distance, it consists of 2 numbers(horizontal/vertical shift cost, diagonal shift cost) in case of 3�3 mask and3 numbers (horizontal/vertical shift cost, diagonal shift cost, knight?s move cost)in case of 5�5 mask. </param>
            <param name="labels">The optional output 2d array of labels of integer type              and the same size as src dst mask_size </param>
        </member>
        <member name="M:Cv.cv.CvDistTransform(CxCore.CvSeq@,CxCore.CvSeq@,System.Int32,System.Int32,System.Single)">
            <summary>
            Calculates distance to closest zero pixel for all non-zero pixels of sourceimage
            </summary>
            <param name="src">Source 8-bit single-channel (binary) image. </param>
            <param name="dst">Output image with calculated distances (32-bit floating-point, single-channel). </param>
            <param name="distance_type">Type of distance; can be CV_DIST_L1, CV_DIST_L2, CV_DIST_C CV_DIST_USER </param>
            <param name="mask_size">Size of distance transform mask; can be 3, 5 or 0. In case of CV_DIST_L1 CV_DIST_C mask_size </param>
            <param name="mask">User-defined mask in case of user-defined distance, it consists of 2 numbers(horizontal/vertical shift cost, diagonal shift cost) in case of 3�3 mask and3 numbers (horizontal/vertical shift cost, diagonal shift cost, knight?s move cost)in case of 5�5 mask. </param>
        </member>
        <member name="M:Cv.cv.CvDistTransform(CxCore.CvSeq@,CxCore.CvSeq@,System.Int32,System.Int32)">
            <summary>
            Calculates distance to closest zero pixel for all non-zero pixels of sourceimage
            </summary>
            <param name="src">Source 8-bit single-channel (binary) image. </param>
            <param name="dst">Output image with calculated distances (32-bit floating-point, single-channel). </param>
            <param name="distance_type">Type of distance; can be CV_DIST_L1, CV_DIST_L2, CV_DIST_C CV_DIST_USER </param>
            <param name="mask_size">Size of distance transform mask; can be 3, 5 or 0. In case of CV_DIST_L1 CV_DIST_C mask_size </param>
        </member>
        <member name="M:Cv.cv.CvDistTransform(CxCore.CvSeq@,CxCore.CvSeq@,System.Int32)">
            <summary>
            Calculates distance to closest zero pixel for all non-zero pixels of sourceimage
            </summary>
            <param name="src">Source 8-bit single-channel (binary) image. </param>
            <param name="dst">Output image with calculated distances (32-bit floating-point, single-channel). </param>
            <param name="distance_type">Type of distance; can be CV_DIST_L1, CV_DIST_L2, CV_DIST_C CV_DIST_USER </param>
        </member>
        <member name="M:Cv.cv.CvDistTransform(CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Calculates distance to closest zero pixel for all non-zero pixels of sourceimage
            </summary>
            <param name="src">Source 8-bit single-channel (binary) image. </param>
            <param name="dst">Output image with calculated distances (32-bit floating-point, single-channel). </param>
        </member>
        <member name="M:Cv.cv.CvDistTransform(CxCore.CvSeq@,CxCore.CvSeq@,System.Int32,System.Int32,CxCore.CvSeq@)">
            <summary>
            Calculates distance to closest zero pixel for all non-zero pixels of sourceimage
            </summary>
            <param name="src">Source 8-bit single-channel (binary) image. </param>
            <param name="dst">Output image with calculated distances (32-bit floating-point, single-channel). </param>
            <param name="distance_type">Type of distance; can be CV_DIST_L1, CV_DIST_L2, CV_DIST_C CV_DIST_USER </param>
            <param name="mask_size">Size of distance transform mask; can be 3, 5 or 0. In case of CV_DIST_L1 CV_DIST_C mask_size </param>
            <param name="labels">The optional output 2d array of labels of integer type              and the same size as src dst mask_size </param>
        </member>
        <member name="M:Cv.cv.CvInpaint(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@,System.Int32,System.Double)">
            <summary>
            Inpaints the selected region in the image
            </summary>
            <param name="src">The input 8-bit 1-channel or 3-channel image. </param>
            <param name="mask">The inpainting mask, 8-bit 1-channel image.           Non-zero pixels indicate the area that needs to be inpainted. </param>
            <param name="dst">The output image of the same format and the same size as input. </param>
            <param name="flags">The inpainting method, one of the following: CV_INPAINT_NS CV_INPAINT_TELEA </param>
            <param name="inpaintRadius">The radius of circlular neighborhood of each point inpainted that is considered by the algorithm. </param>
        </member>
        <member name="M:Cv.cv.CvInpaint(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,System.Int32,System.Double)">
            <summary>
            Inpaints the selected region in the image
            </summary>
            <param name="src">The input 8-bit 1-channel or 3-channel image. </param>
            <param name="mask">The inpainting mask, 8-bit 1-channel image.           Non-zero pixels indicate the area that needs to be inpainted. </param>
            <param name="dst">The output image of the same format and the same size as input. </param>
            <param name="flags">The inpainting method, one of the following: CV_INPAINT_NS CV_INPAINT_TELEA </param>
            <param name="inpaintRadius">The radius of circlular neighborhood of each point inpainted that is considered by the algorithm. </param>
        </member>
        <member name="M:Cv.cv.CvInpaint(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@,System.Int32,System.Double)">
            <summary>
            Inpaints the selected region in the image
            </summary>
            <param name="src">The input 8-bit 1-channel or 3-channel image. </param>
            <param name="mask">The inpainting mask, 8-bit 1-channel image.           Non-zero pixels indicate the area that needs to be inpainted. </param>
            <param name="dst">The output image of the same format and the same size as input. </param>
            <param name="flags">The inpainting method, one of the following: CV_INPAINT_NS CV_INPAINT_TELEA </param>
            <param name="inpaintRadius">The radius of circlular neighborhood of each point inpainted that is considered by the algorithm. </param>
        </member>
        <member name="M:Cv.cv.CvCreateHist(System.Int32,System.Int32[],System.Int32,System.IntPtr,System.Int32)">
            <summary>
            Creates histogram
            </summary>
            <param name="dims">Number of histogram dimensions. </param>
            <param name="sizes">Array of histogram dimension sizes. </param>
            <param name="type">Histogram representation format: CV_HIST_ARRAY CV_HIST_SPARSE </param>
            <param name="ranges">Array of ranges for histogram bins. Its meaning depends on the uniform </param>
            <param name="uniform">Uniformity flag; if not 0, the histogram has evenly spaced bins andfor every 0=i cDims ranges[i] dims[i] i-th uniform=0 i-th ranges dims[i]+1 lower lower upper i-th j-th </param>
        </member>
        <member name="M:Cv.cv.CvCreateHist(System.Int32,System.Int32,System.Int32,System.IntPtr)">
            <summary>
            Creates histogram
            </summary>
            <param name="dims">Number of histogram dimensions. </param>
            <param name="sizes">Array of histogram dimension sizes. </param>
            <param name="type">Histogram representation format: CV_HIST_ARRAY CV_HIST_SPARSE </param>
            <param name="ranges">Array of ranges for histogram bins. Its meaning depends on the uniform </param>
        </member>
        <member name="M:Cv.cv.CvCreateHist(System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates histogram
            </summary>
            <param name="dims">Number of histogram dimensions. </param>
            <param name="sizes">Array of histogram dimension sizes. </param>
            <param name="type">Histogram representation format: CV_HIST_ARRAY CV_HIST_SPARSE </param>
        </member>
        <member name="M:Cv.cv.CvCreateHist(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates histogram
            </summary>
            <param name="dims">Number of histogram dimensions. </param>
            <param name="sizes">Array of histogram dimension sizes. </param>
            <param name="type">Histogram representation format: CV_HIST_ARRAY CV_HIST_SPARSE </param>
            <param name="uniform">Uniformity flag; if not 0, the histogram has evenly spaced bins andfor every 0 =i cDims ranges[i] dims[i] i-th uniform=0 i-th ranges dims[i]+1 lower lower upper i-th j-th </param>
        </member>
        <member name="M:Cv.cv.CvSetHistBinRanges(CxCore.CvHistogram@,System.IntPtr,System.Int32)">
            <summary>
            Sets bounds of histogram bins
            </summary>
            <param name="hist">Histogram. </param>
            <param name="ranges">Array of bin ranges arrays, see </param>
            <param name="uniform">Uniformity flag, see </param>
        </member>
        <member name="M:Cv.cv.CvSetHistBinRanges(CxCore.CvHistogram@,System.IntPtr)">
            <summary>
            Sets bounds of histogram bins
            </summary>
            <param name="hist">Histogram. </param>
            <param name="ranges">Array of bin ranges arrays, see </param>
        </member>
        <member name="M:Cv.cv.CvSetHistBinRanges(CxCore.CvHistogram@)">
            <summary>
            Sets bounds of histogram bins
            </summary>
            <param name="hist">Histogram. </param>
        </member>
        <member name="M:Cv.cv.CvSetHistBinRanges(CxCore.CvHistogram@,System.Int32)">
            <summary>
            Sets bounds of histogram bins
            </summary>
            <param name="hist">Histogram. </param>
            <param name="uniform">Uniformity flag, see </param>
        </member>
        <member name="M:Cv.cv.CvReleaseHist(CxCore.CvHistogram@)">
            <summary>
            Releases histogram
            </summary>
            <param name="hist">Double pointer to the released histogram. </param>
        </member>
        <member name="M:Cv.cv.CvClearHist(CxCore.CvHistogram@)">
            <summary>
            Clears histogram
            </summary>
            <param name="hist">Histogram. </param>
        </member>
        <member name="M:Cv.cv.CvMakeHistHeaderForArray(System.Int32,System.Int32[],CxCore.CvHistogram@,System.Single[],System.IntPtr,System.Int32)">
            <summary>
            Makes a histogram out of array
            </summary>
            <param name="dims">Number of histogram dimensions. </param>
            <param name="sizes">Array of histogram dimension sizes. </param>
            <param name="hist">The histogram header initialized by the function. </param>
            <param name="data">Array that will be used to store histogram bins. </param>
            <param name="ranges">Histogram bin ranges, see </param>
            <param name="uniform">Uniformity flag, see </param>
        </member>
        <member name="M:Cv.cv.CvMakeHistHeaderForArray(System.Int32,System.Int32,CxCore.CvHistogram@,System.Single,System.IntPtr)">
            <summary>
            Makes a histogram out of array
            </summary>
            <param name="dims">Number of histogram dimensions. </param>
            <param name="sizes">Array of histogram dimension sizes. </param>
            <param name="hist">The histogram header initialized by the function. </param>
            <param name="data">Array that will be used to store histogram bins. </param>
            <param name="ranges">Histogram bin ranges, see </param>
        </member>
        <member name="M:Cv.cv.CvMakeHistHeaderForArray(System.Int32,System.Int32,CxCore.CvHistogram@,System.Single)">
            <summary>
            Makes a histogram out of array
            </summary>
            <param name="dims">Number of histogram dimensions. </param>
            <param name="sizes">Array of histogram dimension sizes. </param>
            <param name="hist">The histogram header initialized by the function. </param>
            <param name="data">Array that will be used to store histogram bins. </param>
        </member>
        <member name="M:Cv.cv.CvMakeHistHeaderForArray(System.Int32,System.Int32,CxCore.CvHistogram@,System.Single,System.Int32)">
            <summary>
            Makes a histogram out of array
            </summary>
            <param name="dims">Number of histogram dimensions. </param>
            <param name="sizes">Array of histogram dimension sizes. </param>
            <param name="hist">The histogram header initialized by the function. </param>
            <param name="data">Array that will be used to store histogram bins. </param>
            <param name="uniform">Uniformity flag, see </param>
        </member>
        <member name="M:Cv.cv.CvGetMinMaxHistValue(CxCore.CvHistogram@,System.Single@,System.Single@,System.Int32[],System.Int32[])">
            <summary>
            Finds minimum and maximum histogram bins
            </summary>
            <param name="hist">Histogram. </param>
            <param name="min_value">Pointer to the minimum value of the histogram </param>
            <param name="max_value">Pointer to the maximum value of the histogram </param>
            <param name="min_idx">Pointer to the array of coordinates for minimum </param>
            <param name="max_idx">Pointer to the array of coordinates for maximum </param>
        </member>
        <member name="M:Cv.cv.CvGetMinMaxHistValue(CxCore.CvHistogram@,System.Single@,System.Single@,System.Int32[])">
            <summary>
            Finds minimum and maximum histogram bins
            </summary>
            <param name="hist">Histogram. </param>
            <param name="min_value">Pointer to the minimum value of the histogram </param>
            <param name="max_value">Pointer to the maximum value of the histogram </param>
            <param name="min_idx">Pointer to the array of coordinates for minimum </param>
        </member>
        <member name="M:Cv.cv.CvGetMinMaxHistValue(CxCore.CvHistogram@,System.Single@,System.Single@)">
            <summary>
            Finds minimum and maximum histogram bins
            </summary>
            <param name="hist">Histogram. </param>
            <param name="min_value">Pointer to the minimum value of the histogram </param>
            <param name="max_value">Pointer to the maximum value of the histogram </param>
        </member>
        <member name="M:Cv.cv.CvNormalizeHist(CxCore.CvHistogram@,System.Double)">
            <summary>
            Normalizes histogram
            </summary>
            <param name="hist">Pointer to the histogram. </param>
            <param name="factor">Normalization factor. </param>
        </member>
        <member name="M:Cv.cv.CvThreshHist(CxCore.CvHistogram@,System.Double)">
            <summary>
            Thresholds histogram
            </summary>
            <param name="hist">Pointer to the histogram. </param>
            <param name="threshold">Threshold level. </param>
        </member>
        <member name="M:Cv.cv.CvCompareHist(CxCore.CvHistogram@,CxCore.CvHistogram@,System.Int32)">
            <summary>
            Compares two dense histograms
            </summary>
            <param name="hist1">The first dense histogram. </param>
            <param name="hist2">The second dense histogram. </param>
            <param name="method">Comparison method, one of: </param>
        </member>
        <member name="M:Cv.cv.CvCopyHist(CxCore.CvHistogram@,CxCore.CvHistogram@)">
            <summary>
            Copies histogram
            </summary>
            <param name="src">Source histogram. </param>
            <param name="dst">Pointer to destination histogram. </param>
        </member>
        <member name="M:Cv.cv.CvCalcHist(System.IntPtr[],CxCore.CvHistogram@,System.Int32,CxCore.IplImage@)">
            <summary>
            Calculates histogram of image(s)
            </summary>
            <param name="images">images</param>
            <param name="hist">Pointer to the histogram. </param>
            <param name="accumulate">Accumulation flag. If it is set, the histogram is not cleared in the beginning.This feature allows user to compute a single histogram from several images, or to update the histogram online. </param>
            <param name="mask">The operation mask, determines what pixels of the source images are counted. </param>
        </member>
        <member name="M:Cv.cv.CvCalcHist(System.IntPtr@,CxCore.CvHistogram@,System.Int32)">
            <summary>
            Calculates histogram of image(s)
            </summary>
            <param name="images">images</param>
            <param name="hist">Pointer to the histogram. </param>
            <param name="accumulate">Accumulation flag. If it is set, the histogram is not cleared in the beginning.This feature allows user to compute a single histogram from several images, or to update the histogram online. </param>
        </member>
        <member name="M:Cv.cv.CvCalcHist(System.IntPtr@,CxCore.CvHistogram@)">
            <summary>
            Calculates histogram of image(s)
            </summary>
            <param name="images">images</param>
            <param name="hist">Pointer to the histogram. </param>
        </member>
        <member name="M:Cv.cv.CvCalcHist(System.IntPtr@,CxCore.CvHistogram@,CxCore.IplImage@)">
            <summary>
            Calculates histogram of image(s)
            </summary>
            <param name="images">images</param>
            <param name="hist">Pointer to the histogram. </param>
            <param name="mask">The operation mask, determines what pixels of the source images are counted. </param>
        </member>
        <member name="M:Cv.cv.CvCalcHist(System.IntPtr[],CxCore.CvHistogram@,System.Int32,CxCore.CvMat@)">
            <summary>
            Calculates histogram of image(s)
            </summary>
            <param name="images">images</param>
            <param name="hist">Pointer to the histogram. </param>
            <param name="accumulate">Accumulation flag. If it is set, the histogram is not cleared in the beginning.This feature allows user to compute a single histogram from several images, or to update the histogram online. </param>
            <param name="mask">The operation mask, determines what pixels of the source images are counted. </param>
        </member>
        <member name="M:Cv.cv.CvCalcHist(System.IntPtr,CxCore.CvHistogram@,CxCore.CvMat@)">
            <summary>
            Calculates histogram of image(s)
            </summary>
            <param name="images">images</param>
            <param name="hist">Pointer to the histogram. </param>
            <param name="mask">The operation mask, determines what pixels of the source images are counted. </param>
        </member>
        <member name="M:Cv.cv.CvCalcHist(System.IntPtr[],CxCore.CvHistogram@,System.Int32,CxCore.CvSeq@)">
            <summary>
            Calculates histogram of image(s)
            </summary>
            <param name="images">images</param>
            <param name="hist">Pointer to the histogram. </param>
            <param name="accumulate">Accumulation flag. If it is set, the histogram is not cleared in the beginning.This feature allows user to compute a single histogram from several images, or to update the histogram online. </param>
            <param name="mask">The operation mask, determines what pixels of the source images are counted. </param>
        </member>
        <member name="M:Cv.cv.CvCalcHist(System.IntPtr@,CxCore.CvHistogram@,CxCore.CvSeq@)">
            <summary>
            Calculates histogram of image(s)
            </summary>
            <param name="images">images</param>
            <param name="hist">Pointer to the histogram. </param>
            <param name="mask">The operation mask, determines what pixels of the source images are counted. </param>
        </member>
        <member name="M:Cv.cv.CvCalcHist(System.IntPtr[],CxCore.CvHistogram@,System.Int32)">
            <summary>
            Calculates histogram of image(s)
            </summary>
            <param name="images">images</param>
            <param name="hist">Pointer to the histogram. </param>
            <param name="accumulate">Accumulation flag. If it is set, the histogram is not cleared in the beginning.This feature allows user to compute a single histogram from several images, or to update the histogram online. </param>
        </member>
        <member name="M:Cv.cv.CvCalcBackProject(CxCore.IplImage@,CxCore.IplImage@,CxCore.CvHistogram@)">
            <summary>
            Calculates back projection
            </summary>
            <param name="image">Source images (though you may pass CvMat** as well), all are of the same size and type </param>
            <param name="back_project">Destination back projection image of the same type as the source images. </param>
            <param name="hist">Histogram. </param>
        </member>
        <member name="M:Cv.cv.CvCalcBackProject(CxCore.IplImage@,CxCore.CvMat@,CxCore.CvHistogram@)">
            <summary>
            Calculates back projection
            </summary>
            <param name="image">Source images (though you may pass CvMat** as well), all are of the same size and type </param>
            <param name="back_project">Destination back projection image of the same type as the source images. </param>
            <param name="hist">Histogram. </param>
        </member>
        <member name="M:Cv.cv.CvCalcBackProject(CxCore.IplImage@,CxCore.CvSeq@,CxCore.CvHistogram@)">
            <summary>
            Calculates back projection
            </summary>
            <param name="image">Source images (though you may pass CvMat** as well), all are of the same size and type </param>
            <param name="back_project">Destination back projection image of the same type as the source images. </param>
            <param name="hist">Histogram. </param>
        </member>
        <member name="M:Cv.cv.CvCalcArrBackProject(CxCore.IplImage@,CxCore.IplImage@,CxCore.CvHistogram@)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="image">image</param>
            <param name="back_project">back_project</param>
            <param name="hist">hist</param>
        </member>
        <member name="M:Cv.cv.CvCalcArrBackProject(CxCore.IplImage@,CxCore.CvMat@,CxCore.CvHistogram@)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="image">image</param>
            <param name="back_project">back_project</param>
            <param name="hist">hist</param>
        </member>
        <member name="M:Cv.cv.CvCalcArrBackProject(CxCore.IplImage@,CxCore.CvSeq@,CxCore.CvHistogram@)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="image">image</param>
            <param name="back_project">back_project</param>
            <param name="hist">hist</param>
        </member>
        <member name="M:Cv.cv.CvCalcBackProjectPatch(CxCore.IplImage@,CxCore.IplImage@,CxCore.CvSize,CxCore.CvHistogram@,System.Int32,System.Single)">
            <summary>
            Locates a template within image by histogram comparison
            </summary>
            <param name="images">Source images (though, you may pass CvMat** as well), all of the same size </param>
            <param name="dst">Destination image. </param>
            <param name="patch_size">Size of patch slid though the source images. </param>
            <param name="hist">Histogram </param>
            <param name="method">Compasion method, passed to </param>
            <param name="factor">Normalization factor for histograms,    will affect normalization scale of destination image, pass 1. if unsure. </param>
        </member>
        <member name="M:Cv.cv.CvCalcBackProjectPatch(CxCore.IplImage@,CxCore.CvMat@,CxCore.CvSize,CxCore.CvHistogram@,System.Int32,System.Single)">
            <summary>
            Locates a template within image by histogram comparison
            </summary>
            <param name="images">Source images (though, you may pass CvMat** as well), all of the same size </param>
            <param name="dst">Destination image. </param>
            <param name="patch_size">Size of patch slid though the source images. </param>
            <param name="hist">Histogram </param>
            <param name="method">Compasion method, passed to </param>
            <param name="factor">Normalization factor for histograms,    will affect normalization scale of destination image, pass 1. if unsure. </param>
        </member>
        <member name="M:Cv.cv.CvCalcBackProjectPatch(CxCore.IplImage@,CxCore.CvSeq@,CxCore.CvSize,CxCore.CvHistogram@,System.Int32,System.Single)">
            <summary>
            Locates a template within image by histogram comparison
            </summary>
            <param name="images">Source images (though, you may pass CvMat** as well), all of the same size </param>
            <param name="dst">Destination image. </param>
            <param name="patch_size">Size of patch slid though the source images. </param>
            <param name="hist">Histogram </param>
            <param name="method">Compasion method, passed to </param>
            <param name="factor">Normalization factor for histograms,    will affect normalization scale of destination image, pass 1. if unsure. </param>
        </member>
        <member name="M:Cv.cv.CvCalcProbDensity(CxCore.CvHistogram@,CxCore.CvHistogram@,CxCore.CvHistogram@,System.Double)">
            <summary>
            Divides one histogram by another
            </summary>
            <param name="hist1">first histogram (the divisor). </param>
            <param name="hist2">second histogram. </param>
            <param name="dst_hist">destination histogram. </param>
            <param name="scale">scale factor for the destination histogram. </param>
        </member>
        <member name="M:Cv.cv.CvCalcProbDensity(CxCore.CvHistogram@,CxCore.CvHistogram@,CxCore.CvHistogram@)">
            <summary>
            Divides one histogram by another
            </summary>
            <param name="hist1">first histogram (the divisor). </param>
            <param name="hist2">second histogram. </param>
            <param name="dst_hist">destination histogram. </param>
        </member>
        <member name="M:Cv.cv.CvEqualizeHist(CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Equalizes histogram of grayscale image
            </summary>
            <param name="src">The input 8-bit single-channel image. </param>
            <param name="dst">The output image of the same size and the same data type as src </param>
        </member>
        <member name="M:Cv.cv.CvEqualizeHist(CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Equalizes histogram of grayscale image
            </summary>
            <param name="src">The input 8-bit single-channel image. </param>
            <param name="dst">The output image of the same size and the same data type as src </param>
        </member>
        <member name="M:Cv.cv.CvEqualizeHist(CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Equalizes histogram of grayscale image
            </summary>
            <param name="src">The input 8-bit single-channel image. </param>
            <param name="dst">The output image of the same size and the same data type as src </param>
        </member>
        <member name="M:Cv.cv.CvMatchTemplate(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@,System.Int32)">
            <summary>
            Compares template against overlapped image regions
            </summary>
            <param name="image">Image where the search is running.           It should be 8-bit or 32-bit floating-point. </param>
            <param name="templ">Searched template; must be not greater than the source image and the same data type as the image. </param>
            <param name="result">A map of comparison results; single-channel 32-bit floating-point. If image W H templ w h result W-w+1 H-h+1 </param>
            <param name="method">Specifies the way the template must be compared with image regions (see below). </param>
        </member>
        <member name="M:Cv.cv.CvMatchTemplate(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,System.Int32)">
            <summary>
            Compares template against overlapped image regions
            </summary>
            <param name="image">Image where the search is running.           It should be 8-bit or 32-bit floating-point. </param>
            <param name="templ">Searched template; must be not greater than the source image and the same data type as the image. </param>
            <param name="result">A map of comparison results; single-channel 32-bit floating-point. If image W H templ w h result W-w+1 H-h+1 </param>
            <param name="method">Specifies the way the template must be compared with image regions (see below). </param>
        </member>
        <member name="M:Cv.cv.CvMatchTemplate(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@,System.Int32)">
            <summary>
            Compares template against overlapped image regions
            </summary>
            <param name="image">Image where the search is running.           It should be 8-bit or 32-bit floating-point. </param>
            <param name="templ">Searched template; must be not greater than the source image and the same data type as the image. </param>
            <param name="result">A map of comparison results; single-channel 32-bit floating-point. If image W H templ w h result W-w+1 H-h+1 </param>
            <param name="method">Specifies the way the template must be compared with image regions (see below). </param>
        </member>
        <member name="M:Cv.cv.CvMatchShapes(System.IntPtr,System.IntPtr,System.Int32,System.Double)">
            <summary>
            Compares two shapes
            </summary>
            <param name="object1">First contour or grayscale image </param>
            <param name="object2">Second contour or grayscale image </param>
            <param name="method">Comparison method, one of CV_CONTOUR_MATCH_I1, CV_CONTOURS_MATCH_I2 or CV_CONTOURS_MATCH_I3. </param>
            <param name="parameter">Method-specific parameter (is not used now). </param>
        </member>
        <member name="M:Cv.cv.CvMatchShapes(System.IntPtr,System.IntPtr,System.Int32)">
            <summary>
            Compares two shapes
            </summary>
            <param name="object1">First contour or grayscale image </param>
            <param name="object2">Second contour or grayscale image </param>
            <param name="method">Comparison method, one of CV_CONTOUR_MATCH_I1, CV_CONTOURS_MATCH_I2 or CV_CONTOURS_MATCH_I3. </param>
        </member>
        <member name="M:Cv.cv.CvCalcEMD2(CxCore.IplImage@,CxCore.IplImage@,System.Int32,System.IntPtr,CxCore.IplImage@,CxCore.IplImage@,System.Single[],System.IntPtr)">
            <summary>
            Computes "minimal work" distance between two weighted point configurations
            </summary>
            <param name="signature1">First signature, size1 dims+1 </param>
            <param name="signature2">Second signature of the same format as signature1 signature1 signature2 </param>
            <param name="distance_type">Metrics used; CV_DIST_L1, CV_DIST_L2 CV_DIST_C CV_DIST_USER distance_func cost_matrix </param>
            <param name="distance_func">The user-defined distance function.                It takes coordinates of two points and returns the distance between the points. </param>
            <param name="cost_matrix">The user-defined size1 size2 cost_matrix distance_func </param>
            <param name="flow">The resultant size1 size2 flow signature1 signature2 </param>
            <param name="lower_bound">Optional input/output parameter: lower boundary of distance between the two signatures that                  is a distance between mass centers. The lower boundary may not be calculated if                  the user-defined cost matrix is used, the total weights of point configurations are                  not equal, or there is the signatures consist of weights only                  (i.e. the signature matrices have a single column).                  User *lower_bound *lower_bound *lower_bound *lower_bound </param>
            <param name="userdata">Pointer to optional data that is passed into the user-defined distance function. </param>
        </member>
        <member name="M:Cv.cv.CvCalcEMD2(CxCore.IplImage@,CxCore.IplImage@,System.Int32,System.IntPtr,CxCore.IplImage@,CxCore.IplImage@,System.Single[])">
            <summary>
            Computes "minimal work" distance between two weighted point configurations
            </summary>
            <param name="signature1">First signature, size1 dims+1 </param>
            <param name="signature2">Second signature of the same format as signature1 signature1 signature2 </param>
            <param name="distance_type">Metrics used; CV_DIST_L1, CV_DIST_L2 CV_DIST_C CV_DIST_USER distance_func cost_matrix </param>
            <param name="distance_func">The user-defined distance function.                It takes coordinates of two points and returns the distance between the points. </param>
            <param name="cost_matrix">The user-defined size1 size2 cost_matrix distance_func </param>
            <param name="flow">The resultant size1 size2 flow signature1 signature2 </param>
            <param name="lower_bound">Optional input/output parameter: lower boundary of distance between the two signatures that                  is a distance between mass centers. The lower boundary may not be calculated if                  the user-defined cost matrix is used, the total weights of point configurations are                  not equal, or there is the signatures consist of weights only                  (i.e. the signature matrices have a single column).                  User *lower_bound *lower_bound *lower_bound *lower_bound </param>
        </member>
        <member name="M:Cv.cv.CvCalcEMD2(CxCore.IplImage@,CxCore.IplImage@,System.Int32,System.IntPtr,CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Computes "minimal work" distance between two weighted point configurations
            </summary>
            <param name="signature1">First signature, size1 dims+1 </param>
            <param name="signature2">Second signature of the same format as signature1 signature1 signature2 </param>
            <param name="distance_type">Metrics used; CV_DIST_L1, CV_DIST_L2 CV_DIST_C CV_DIST_USER distance_func cost_matrix </param>
            <param name="distance_func">The user-defined distance function.                It takes coordinates of two points and returns the distance between the points. </param>
            <param name="cost_matrix">The user-defined size1 size2 cost_matrix distance_func </param>
            <param name="flow">The resultant size1 size2 flow signature1 signature2 </param>
        </member>
        <member name="M:Cv.cv.CvCalcEMD2(CxCore.IplImage@,CxCore.IplImage@,System.Int32,System.IntPtr,CxCore.IplImage@)">
            <summary>
            Computes "minimal work" distance between two weighted point configurations
            </summary>
            <param name="signature1">First signature, size1 dims+1 </param>
            <param name="signature2">Second signature of the same format as signature1 signature1 signature2 </param>
            <param name="distance_type">Metrics used; CV_DIST_L1, CV_DIST_L2 CV_DIST_C CV_DIST_USER distance_func cost_matrix </param>
            <param name="distance_func">The user-defined distance function.                It takes coordinates of two points and returns the distance between the points. </param>
            <param name="cost_matrix">The user-defined size1 size2 cost_matrix distance_func </param>
        </member>
        <member name="M:Cv.cv.CvCalcEMD2(CxCore.IplImage@,CxCore.IplImage@,System.Int32,System.IntPtr)">
            <summary>
            Computes "minimal work" distance between two weighted point configurations
            </summary>
            <param name="signature1">First signature, size1 dims+1 </param>
            <param name="signature2">Second signature of the same format as signature1 signature1 signature2 </param>
            <param name="distance_type">Metrics used; CV_DIST_L1, CV_DIST_L2 CV_DIST_C CV_DIST_USER distance_func cost_matrix </param>
            <param name="distance_func">The user-defined distance function.                It takes coordinates of two points and returns the distance between the points. </param>
        </member>
        <member name="M:Cv.cv.CvCalcEMD2(CxCore.IplImage@,CxCore.IplImage@,System.Int32)">
            <summary>
            Computes "minimal work" distance between two weighted point configurations
            </summary>
            <param name="signature1">First signature, size1 dims+1 </param>
            <param name="signature2">Second signature of the same format as signature1 signature1 signature2 </param>
            <param name="distance_type">Metrics used; CV_DIST_L1, CV_DIST_L2 CV_DIST_C CV_DIST_USER distance_func cost_matrix </param>
        </member>
        <member name="M:Cv.cv.CvCalcEMD2(CxCore.CvMat@,CxCore.CvMat@,System.Int32,System.IntPtr,CxCore.CvMat@,CxCore.CvMat@,System.Single[],System.IntPtr)">
            <summary>
            Computes "minimal work" distance between two weighted point configurations
            </summary>
            <param name="signature1">First signature, size1 dims+1 </param>
            <param name="signature2">Second signature of the same format as signature1 signature1 signature2 </param>
            <param name="distance_type">Metrics used; CV_DIST_L1, CV_DIST_L2 CV_DIST_C CV_DIST_USER distance_func cost_matrix </param>
            <param name="distance_func">The user-defined distance function.                It takes coordinates of two points and returns the distance between the points. </param>
            <param name="cost_matrix">The user-defined size1 size2 cost_matrix distance_func </param>
            <param name="flow">The resultant size1 size2 flow signature1 signature2 </param>
            <param name="lower_bound">Optional input/output parameter: lower boundary of distance between the two signatures that                  is a distance between mass centers. The lower boundary may not be calculated if                  the user-defined cost matrix is used, the total weights of point configurations are                  not equal, or there is the signatures consist of weights only                  (i.e. the signature matrices have a single column).                  User *lower_bound *lower_bound *lower_bound *lower_bound </param>
            <param name="userdata">Pointer to optional data that is passed into the user-defined distance function. </param>
        </member>
        <member name="M:Cv.cv.CvCalcEMD2(CxCore.CvMat@,CxCore.CvMat@,System.Int32,System.IntPtr,CxCore.CvMat@,CxCore.CvMat@,System.Single[])">
            <summary>
            Computes "minimal work" distance between two weighted point configurations
            </summary>
            <param name="signature1">First signature, size1 dims+1 </param>
            <param name="signature2">Second signature of the same format as signature1 signature1 signature2 </param>
            <param name="distance_type">Metrics used; CV_DIST_L1, CV_DIST_L2 CV_DIST_C CV_DIST_USER distance_func cost_matrix </param>
            <param name="distance_func">The user-defined distance function.                It takes coordinates of two points and returns the distance between the points. </param>
            <param name="cost_matrix">The user-defined size1 size2 cost_matrix distance_func </param>
            <param name="flow">The resultant size1 size2 flow signature1 signature2 </param>
            <param name="lower_bound">Optional input/output parameter: lower boundary of distance between the two signatures that                  is a distance between mass centers. The lower boundary may not be calculated if                  the user-defined cost matrix is used, the total weights of point configurations are                  not equal, or there is the signatures consist of weights only                  (i.e. the signature matrices have a single column).                  User *lower_bound *lower_bound *lower_bound *lower_bound </param>
        </member>
        <member name="M:Cv.cv.CvCalcEMD2(CxCore.CvMat@,CxCore.CvMat@,System.Int32,System.IntPtr,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Computes "minimal work" distance between two weighted point configurations
            </summary>
            <param name="signature1">First signature, size1 dims+1 </param>
            <param name="signature2">Second signature of the same format as signature1 signature1 signature2 </param>
            <param name="distance_type">Metrics used; CV_DIST_L1, CV_DIST_L2 CV_DIST_C CV_DIST_USER distance_func cost_matrix </param>
            <param name="distance_func">The user-defined distance function.                It takes coordinates of two points and returns the distance between the points. </param>
            <param name="cost_matrix">The user-defined size1 size2 cost_matrix distance_func </param>
            <param name="flow">The resultant size1 size2 flow signature1 signature2 </param>
        </member>
        <member name="M:Cv.cv.CvCalcEMD2(CxCore.CvMat@,CxCore.CvMat@,System.Int32,System.IntPtr,CxCore.CvMat@)">
            <summary>
            Computes "minimal work" distance between two weighted point configurations
            </summary>
            <param name="signature1">First signature, size1 dims+1 </param>
            <param name="signature2">Second signature of the same format as signature1 signature1 signature2 </param>
            <param name="distance_type">Metrics used; CV_DIST_L1, CV_DIST_L2 CV_DIST_C CV_DIST_USER distance_func cost_matrix </param>
            <param name="distance_func">The user-defined distance function.                It takes coordinates of two points and returns the distance between the points. </param>
            <param name="cost_matrix">The user-defined size1 size2 cost_matrix distance_func </param>
        </member>
        <member name="M:Cv.cv.CvCalcEMD2(CxCore.CvMat@,CxCore.CvMat@,System.Int32,System.IntPtr)">
            <summary>
            Computes "minimal work" distance between two weighted point configurations
            </summary>
            <param name="signature1">First signature, size1 dims+1 </param>
            <param name="signature2">Second signature of the same format as signature1 signature1 signature2 </param>
            <param name="distance_type">Metrics used; CV_DIST_L1, CV_DIST_L2 CV_DIST_C CV_DIST_USER distance_func cost_matrix </param>
            <param name="distance_func">The user-defined distance function.                It takes coordinates of two points and returns the distance between the points. </param>
        </member>
        <member name="M:Cv.cv.CvCalcEMD2(CxCore.CvMat@,CxCore.CvMat@,System.Int32)">
            <summary>
            Computes "minimal work" distance between two weighted point configurations
            </summary>
            <param name="signature1">First signature, size1 dims+1 </param>
            <param name="signature2">Second signature of the same format as signature1 signature1 signature2 </param>
            <param name="distance_type">Metrics used; CV_DIST_L1, CV_DIST_L2 CV_DIST_C CV_DIST_USER distance_func cost_matrix </param>
        </member>
        <member name="M:Cv.cv.CvCalcEMD2(CxCore.CvSeq@,CxCore.CvSeq@,System.Int32,System.IntPtr,CxCore.CvSeq@,CxCore.CvSeq@,System.Single[],System.IntPtr)">
            <summary>
            Computes "minimal work" distance between two weighted point configurations
            </summary>
            <param name="signature1">First signature, size1 dims+1 </param>
            <param name="signature2">Second signature of the same format as signature1 signature1 signature2 </param>
            <param name="distance_type">Metrics used; CV_DIST_L1, CV_DIST_L2 CV_DIST_C CV_DIST_USER distance_func cost_matrix </param>
            <param name="distance_func">The user-defined distance function.                It takes coordinates of two points and returns the distance between the points. </param>
            <param name="cost_matrix">The user-defined size1 size2 cost_matrix distance_func </param>
            <param name="flow">The resultant size1 size2 flow signature1 signature2 </param>
            <param name="lower_bound">Optional input/output parameter: lower boundary of distance between the two signatures that                  is a distance between mass centers. The lower boundary may not be calculated if                  the user-defined cost matrix is used, the total weights of point configurations are                  not equal, or there is the signatures consist of weights only                  (i.e. the signature matrices have a single column).                  User *lower_bound *lower_bound *lower_bound *lower_bound </param>
            <param name="userdata">Pointer to optional data that is passed into the user-defined distance function. </param>
        </member>
        <member name="M:Cv.cv.CvCalcEMD2(CxCore.CvSeq@,CxCore.CvSeq@,System.Int32,System.IntPtr,CxCore.CvSeq@,CxCore.CvSeq@,System.Single[])">
            <summary>
            Computes "minimal work" distance between two weighted point configurations
            </summary>
            <param name="signature1">First signature, size1 dims+1 </param>
            <param name="signature2">Second signature of the same format as signature1 signature1 signature2 </param>
            <param name="distance_type">Metrics used; CV_DIST_L1, CV_DIST_L2 CV_DIST_C CV_DIST_USER distance_func cost_matrix </param>
            <param name="distance_func">The user-defined distance function.                It takes coordinates of two points and returns the distance between the points. </param>
            <param name="cost_matrix">The user-defined size1 size2 cost_matrix distance_func </param>
            <param name="flow">The resultant size1 size2 flow signature1 signature2 </param>
            <param name="lower_bound">Optional input/output parameter: lower boundary of distance between the two signatures that                  is a distance between mass centers. The lower boundary may not be calculated if                  the user-defined cost matrix is used, the total weights of point configurations are                  not equal, or there is the signatures consist of weights only                  (i.e. the signature matrices have a single column).                  User *lower_bound *lower_bound *lower_bound *lower_bound </param>
        </member>
        <member name="M:Cv.cv.CvCalcEMD2(CxCore.CvSeq@,CxCore.CvSeq@,System.Int32,System.IntPtr,CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Computes "minimal work" distance between two weighted point configurations
            </summary>
            <param name="signature1">First signature, size1 dims+1 </param>
            <param name="signature2">Second signature of the same format as signature1 signature1 signature2 </param>
            <param name="distance_type">Metrics used; CV_DIST_L1, CV_DIST_L2 CV_DIST_C CV_DIST_USER distance_func cost_matrix </param>
            <param name="distance_func">The user-defined distance function.                It takes coordinates of two points and returns the distance between the points. </param>
            <param name="cost_matrix">The user-defined size1 size2 cost_matrix distance_func </param>
            <param name="flow">The resultant size1 size2 flow signature1 signature2 </param>
        </member>
        <member name="M:Cv.cv.CvCalcEMD2(CxCore.CvSeq@,CxCore.CvSeq@,System.Int32,System.IntPtr,CxCore.CvSeq@)">
            <summary>
            Computes "minimal work" distance between two weighted point configurations
            </summary>
            <param name="signature1">First signature, size1 dims+1 </param>
            <param name="signature2">Second signature of the same format as signature1 signature1 signature2 </param>
            <param name="distance_type">Metrics used; CV_DIST_L1, CV_DIST_L2 CV_DIST_C CV_DIST_USER distance_func cost_matrix </param>
            <param name="distance_func">The user-defined distance function.                It takes coordinates of two points and returns the distance between the points. </param>
            <param name="cost_matrix">The user-defined size1 size2 cost_matrix distance_func </param>
        </member>
        <member name="M:Cv.cv.CvCalcEMD2(CxCore.CvSeq@,CxCore.CvSeq@,System.Int32,System.IntPtr)">
            <summary>
            Computes "minimal work" distance between two weighted point configurations
            </summary>
            <param name="signature1">First signature, size1 dims+1 </param>
            <param name="signature2">Second signature of the same format as signature1 signature1 signature2 </param>
            <param name="distance_type">Metrics used; CV_DIST_L1, CV_DIST_L2 CV_DIST_C CV_DIST_USER distance_func cost_matrix </param>
            <param name="distance_func">The user-defined distance function.                It takes coordinates of two points and returns the distance between the points. </param>
        </member>
        <member name="M:Cv.cv.CvCalcEMD2(CxCore.CvSeq@,CxCore.CvSeq@,System.Int32)">
            <summary>
            Computes "minimal work" distance between two weighted point configurations
            </summary>
            <param name="signature1">First signature, size1 dims+1 </param>
            <param name="signature2">Second signature of the same format as signature1 signature1 signature2 </param>
            <param name="distance_type">Metrics used; CV_DIST_L1, CV_DIST_L2 CV_DIST_C CV_DIST_USER distance_func cost_matrix </param>
        </member>
        <member name="M:Cv.cv.CvApproxChains(CxCore.CvSeq@,CxCore.CvMemStorage@,System.Int32,System.Double,System.Int32,System.Int32)">
            <summary>
            Approximates Freeman chain(s) with polygonal curve
            </summary>
            <param name="src_seq">Pointer to the chain that can refer to other chains. </param>
            <param name="storage">Storage location for the resulting polylines. </param>
            <param name="method">Approximation method (see the description of the function </param>
            <param name="parameter">Method parameter (not used now). </param>
            <param name="minimal_perimeter">Approximates only those contours whose perimeters are not lessthan minimal_perimeter </param>
            <param name="recursive">If not 0, the function approximates all chains that access can beobtained to from src_seq h_next v_next links </param>
        </member>
        <member name="M:Cv.cv.CvApproxChains(CxCore.CvSeq@,CxCore.CvMemStorage@,System.Int32,System.Double,System.Int32)">
            <summary>
            Approximates Freeman chain(s) with polygonal curve
            </summary>
            <param name="src_seq">Pointer to the chain that can refer to other chains. </param>
            <param name="storage">Storage location for the resulting polylines. </param>
            <param name="method">Approximation method (see the description of the function </param>
            <param name="parameter">Method parameter (not used now). </param>
            <param name="minimal_perimeter">Approximates only those contours whose perimeters are not lessthan minimal_perimeter </param>
        </member>
        <member name="M:Cv.cv.CvApproxChains(CxCore.CvSeq@,CxCore.CvMemStorage@,System.Int32,System.Double)">
            <summary>
            Approximates Freeman chain(s) with polygonal curve
            </summary>
            <param name="src_seq">Pointer to the chain that can refer to other chains. </param>
            <param name="storage">Storage location for the resulting polylines. </param>
            <param name="method">Approximation method (see the description of the function </param>
            <param name="parameter">Method parameter (not used now). </param>
        </member>
        <member name="M:Cv.cv.CvApproxChains(CxCore.CvSeq@,CxCore.CvMemStorage@,System.Int32)">
            <summary>
            Approximates Freeman chain(s) with polygonal curve
            </summary>
            <param name="src_seq">Pointer to the chain that can refer to other chains. </param>
            <param name="storage">Storage location for the resulting polylines. </param>
            <param name="method">Approximation method (see the description of the function </param>
        </member>
        <member name="M:Cv.cv.CvApproxChains(CxCore.CvSeq@,CxCore.CvMemStorage@)">
            <summary>
            Approximates Freeman chain(s) with polygonal curve
            </summary>
            <param name="src_seq">Pointer to the chain that can refer to other chains. </param>
            <param name="storage">Storage location for the resulting polylines. </param>
        </member>
        <member name="M:Cv.cv.CvStartReadChainPoints(CxCore.CvChain@,Cv.CvChainPtReader@)">
            <summary>
            Initializes chain reader
            </summary>
            <param name="chain">chain</param>
            <param name="reader">reader</param>
        </member>
        <member name="M:Cv.cv.CvReadChainPoint(Cv.CvChainPtReader@)">
            <summary>
            The function returns the current chain point and updates the reader position.
            </summary>
            <param name="reader">Chain reader state.</param>
        </member>
        <member name="M:Cv.cv.CvApproxPoly(System.IntPtr,System.Int32,CxCore.CvMemStorage@,System.Int32,System.Double,System.Int32)">
            <summary>
            Approximates polygonal curve(s) with desired precision
            </summary>
            <param name="src_seq">Sequence of array of points. </param>
            <param name="header_size">Header size of approximated curve[s]. </param>
            <param name="storage">Container for approximated contours. If it is NULL, the input sequences' storage is used. </param>
            <param name="method">Approximation method; only CV_POLY_APPROX_DP </param>
            <param name="parameter">Method-specific parameter; in case of CV_POLY_APPROX_DP </param>
            <param name="parameter2">If case if src_seq src_seq src_seq parameter2 parameter2 </param>
        </member>
        <member name="M:Cv.cv.CvApproxPoly(System.IntPtr,System.Int32,CxCore.CvMemStorage@,System.Int32,System.Double)">
            <summary>
            Approximates polygonal curve(s) with desired precision
            </summary>
            <param name="src_seq">Sequence of array of points. </param>
            <param name="header_size">Header size of approximated curve[s]. </param>
            <param name="storage">Container for approximated contours. If it is NULL, the input sequences' storage is used. </param>
            <param name="method">Approximation method; only CV_POLY_APPROX_DP </param>
            <param name="parameter">Method-specific parameter; in case of CV_POLY_APPROX_DP </param>
        </member>
        <member name="M:Cv.cv.CvBoundingRect(CxCore.IplImage@,System.Int32)">
            <summary>
            Calculates up-right bounding rectangle of point set
            </summary>
            <param name="points">Either a 2D point set, represented as a sequence ( CvSeq* CvContour* CvMat* CvMat* IplImage* </param>
            <param name="update">The update flag. Here is list of possible combination of the flag values and type of contour points update rect points update rect points update </param>
        </member>
        <member name="M:Cv.cv.CvBoundingRect(CxCore.IplImage@)">
            <summary>
            Calculates up-right bounding rectangle of point set
            </summary>
            <param name="points">Either a 2D point set, represented as a sequence ( CvSeq* CvContour* CvMat* CvMat* IplImage* </param>
        </member>
        <member name="M:Cv.cv.CvBoundingRect(CxCore.CvMat@,System.Int32)">
            <summary>
            Calculates up-right bounding rectangle of point set
            </summary>
            <param name="points">Either a 2D point set, represented as a sequence ( CvSeq* CvContour* CvMat* CvMat* IplImage* </param>
            <param name="update">The update flag. Here is list of possible combination of the flag values and type of contour points update rect points update rect points update </param>
        </member>
        <member name="M:Cv.cv.CvBoundingRect(CxCore.CvMat@)">
            <summary>
            Calculates up-right bounding rectangle of point set
            </summary>
            <param name="points">Either a 2D point set, represented as a sequence ( CvSeq* CvContour* CvMat* CvMat* IplImage* </param>
        </member>
        <member name="M:Cv.cv.CvBoundingRect(CxCore.CvSeq@,System.Int32)">
            <summary>
            Calculates up-right bounding rectangle of point set
            </summary>
            <param name="points">Either a 2D point set, represented as a sequence ( CvSeq* CvContour* CvMat* CvMat* IplImage* </param>
            <param name="update">The update flag. Here is list of possible combination of the flag values and type of contour points update rect points update rect points update </param>
        </member>
        <member name="M:Cv.cv.CvBoundingRect(CxCore.CvSeq@)">
            <summary>
            Calculates up-right bounding rectangle of point set
            </summary>
            <param name="points">Either a 2D point set, represented as a sequence ( CvSeq* CvContour* CvMat* CvMat* IplImage* </param>
        </member>
        <member name="M:Cv.cv.CvContourArea(CxCore.IplImage@,CxCore.CvSlice)">
            <summary>
            Calculates area of the whole contour or contour section
            </summary>
            <param name="contour">Contour (sequence or array of vertices). </param>
            <param name="slice">Starting and ending points of the contour section of interest, by default area of the wholecontour is calculated. </param>
        </member>
        <member name="M:Cv.cv.CvContourArea(CxCore.IplImage@)">
            <summary>
            Calculates area of the whole contour or contour section
            </summary>
            <param name="contour">Contour (sequence or array of vertices). </param>
        </member>
        <member name="M:Cv.cv.CvContourArea(CxCore.CvMat@,CxCore.CvSlice)">
            <summary>
            Calculates area of the whole contour or contour section
            </summary>
            <param name="contour">Contour (sequence or array of vertices). </param>
            <param name="slice">Starting and ending points of the contour section of interest, by default area of the wholecontour is calculated. </param>
        </member>
        <member name="M:Cv.cv.CvContourArea(CxCore.CvMat@)">
            <summary>
            Calculates area of the whole contour or contour section
            </summary>
            <param name="contour">Contour (sequence or array of vertices). </param>
        </member>
        <member name="M:Cv.cv.CvContourArea(CxCore.CvSeq@,CxCore.CvSlice)">
            <summary>
            Calculates area of the whole contour or contour section
            </summary>
            <param name="contour">Contour (sequence or array of vertices). </param>
            <param name="slice">Starting and ending points of the contour section of interest, by default area of the wholecontour is calculated. </param>
        </member>
        <member name="M:Cv.cv.CvContourArea(CxCore.CvSeq@)">
            <summary>
            Calculates area of the whole contour or contour section
            </summary>
            <param name="contour">Contour (sequence or array of vertices). </param>
        </member>
        <member name="M:Cv.cv.CvArcLength(System.IntPtr,CxCore.CvSlice,System.Int32)">
            <summary>
            Calculates contour perimeter or curve length
            </summary>
            <param name="curve">Sequence or array of the curve points. </param>
            <param name="slice">Starting and ending points of the curve, by default the whole curve length iscalculated. </param>
            <param name="is_closed">Indicates whether the curve is closed or not. There are 3 cases: </param>
        </member>
        <member name="M:Cv.cv.CvArcLength(System.IntPtr,CxCore.CvSlice)">
            <summary>
            Calculates contour perimeter or curve length
            </summary>
            <param name="curve">Sequence or array of the curve points. </param>
            <param name="slice">Starting and ending points of the curve, by default the whole curve length iscalculated. </param>
        </member>
        <member name="M:Cv.cv.CvArcLength(System.IntPtr)">
            <summary>
            Calculates contour perimeter or curve length
            </summary>
            <param name="curve">Sequence or array of the curve points. </param>
        </member>
        <member name="M:Cv.cv.CvCreateContourTree(CxCore.CvSeq@,CxCore.CvMemStorage@,System.Double)">
            <summary>
            Creates hierarchical representation of contour
            </summary>
            <param name="contour">Input contour. </param>
            <param name="storage">Container for output tree. </param>
            <param name="threshold">Approximation accuracy. </param>
        </member>
        <member name="M:Cv.cv.CvContourFromContourTree(Cv.CvContourTree@,CxCore.CvMemStorage@,CxCore.CvTermCriteria)">
            <summary>
            Restores contour from tree
            </summary>
            <param name="tree">Contour tree. </param>
            <param name="storage">Container for the reconstructed contour. </param>
            <param name="criteria">Criteria, where to stop reconstruction. </param>
        </member>
        <member name="M:Cv.cv.CvMatchContourTrees(Cv.CvContourTree@,Cv.CvContourTree@,System.Int32,System.Double)">
            <summary>
            Compares two contours using their tree representations
            </summary>
            <param name="tree1">First contour tree. </param>
            <param name="tree2">Second contour tree. </param>
            <param name="method">Similarity measure, only CV_CONTOUR_TREES_MATCH_I1 </param>
            <param name="threshold">Similarity threshold. </param>
        </member>
        <member name="M:Cv.cv.CvMaxRect(CxCore.CvRect@,CxCore.CvRect@)">
            <summary>
            Finds bounding rectangle for two given rectangles
            </summary>
            <param name="rect1">First rectangle </param>
            <param name="rect2">Second rectangle </param>
        </member>
        <member name="M:Cv.cv.CvPointSeqFromMat(System.Int32,CxCore.IplImage@,CxCore.CvContour@,CxCore.CvSeqBlock@)">
            <summary>
            Initializes point sequence header from a point vector
            </summary>
            <param name="seq_kind">Type of the point sequence: point set (0), a curve ( CV_SEQ_KIND_CURVE CV_SEQ_KIND_CURVE+CV_SEQ_FLAG_CLOSED </param>
            <param name="mat">Input matrix. It should be continuous 1-dimensional vector of points, that is, it should havetype CV_32SC2 CV_32FC2 </param>
            <param name="contour_header">Contour header, initialized by the function. </param>
            <param name="block">Sequence block header, initialized by the function. </param>
        </member>
        <member name="M:Cv.cv.CvPointSeqFromMat(System.Int32,CxCore.CvMat@,CxCore.CvContour@,CxCore.CvSeqBlock@)">
            <summary>
            Initializes point sequence header from a point vector
            </summary>
            <param name="seq_kind">Type of the point sequence: point set (0), a curve ( CV_SEQ_KIND_CURVE CV_SEQ_KIND_CURVE+CV_SEQ_FLAG_CLOSED </param>
            <param name="mat">Input matrix. It should be continuous 1-dimensional vector of points, that is, it should havetype CV_32SC2 CV_32FC2 </param>
            <param name="contour_header">Contour header, initialized by the function. </param>
            <param name="block">Sequence block header, initialized by the function. </param>
        </member>
        <member name="M:Cv.cv.CvPointSeqFromMat(System.Int32,CxCore.CvSeq@,CxCore.CvContour@,CxCore.CvSeqBlock@)">
            <summary>
            Initializes point sequence header from a point vector
            </summary>
            <param name="seq_kind">Type of the point sequence: point set (0), a curve ( CV_SEQ_KIND_CURVE CV_SEQ_KIND_CURVE+CV_SEQ_FLAG_CLOSED </param>
            <param name="mat">Input matrix. It should be continuous 1-dimensional vector of points, that is, it should havetype CV_32SC2 CV_32FC2 </param>
            <param name="contour_header">Contour header, initialized by the function. </param>
            <param name="block">Sequence block header, initialized by the function. </param>
        </member>
        <member name="M:Cv.cv.CvBoxPoints(CxCore.CvBox2D,CxCore.CvPoint2D32f[])">
            <summary>
            Finds box vertices
            </summary>
            <param name="box">Box </param>
            <param name="pt">Array of vertices. Size must be 4. </param>
        </member>
        <member name="M:Cv.cv.CvFitEllipse2(CxCore.IplImage@)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="points">points</param>
        </member>
        <member name="M:Cv.cv.CvFitEllipse2(CxCore.CvMat@)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="points">points</param>
        </member>
        <member name="M:Cv.cv.CvFitEllipse2(CxCore.CvSeq@)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="points">points</param>
        </member>
        <member name="M:Cv.cv.CvFitLine(CxCore.IplImage@,System.Int32,System.Double,System.Double,System.Double,System.Single[])">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="points">points</param>
            <param name="dist_type">dist_type</param>
            <param name="param">param</param>
            <param name="reps">reps</param>
            <param name="aeps">aeps</param>
            <param name="line">line</param>
        </member>
        <member name="M:Cv.cv.CvFitLine(CxCore.CvMat@,System.Int32,System.Double,System.Double,System.Double,System.Single[])">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="points">points</param>
            <param name="dist_type">dist_type</param>
            <param name="param">param</param>
            <param name="reps">reps</param>
            <param name="aeps">aeps</param>
            <param name="line">line</param>
        </member>
        <member name="M:Cv.cv.CvFitLine(CxCore.CvSeq@,System.Int32,System.Double,System.Double,System.Double,System.Single[])">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="points">points</param>
            <param name="dist_type">dist_type</param>
            <param name="param">param</param>
            <param name="reps">reps</param>
            <param name="aeps">aeps</param>
            <param name="line">line</param>
        </member>
        <member name="M:Cv.cv.CvConvexHull2(CxCore.IplImage@,System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Finds convex hull of point set
            </summary>
            <param name="input">input</param>
            <param name="hull_storage">The destination array (CvMat*) or memory storage (CvMemStorage*) that will store the convex hull.                   If it is array, it should be 1d and have the same number of elements as the input array/sequence.                   On output the header is modified so to truncate the array downto the hull size. </param>
            <param name="orientation">Desired orientation of convex hull: CV_CLOCKWISE CV_COUNTER_CLOCKWISE </param>
            <param name="return_points">If non-zero, the points themselves will be stored                    in the hull instead of indices if hull_storage hull_storage </param>
        </member>
        <member name="M:Cv.cv.CvConvexHull2(CxCore.IplImage@,System.IntPtr,System.Int32)">
            <summary>
            Finds convex hull of point set
            </summary>
            <param name="input">input</param>
            <param name="hull_storage">The destination array (CvMat*) or memory storage (CvMemStorage*) that will store the convex hull.                   If it is array, it should be 1d and have the same number of elements as the input array/sequence.                   On output the header is modified so to truncate the array downto the hull size. </param>
            <param name="orientation">Desired orientation of convex hull: CV_CLOCKWISE CV_COUNTER_CLOCKWISE </param>
        </member>
        <member name="M:Cv.cv.CvConvexHull2(CxCore.IplImage@,System.IntPtr)">
            <summary>
            Finds convex hull of point set
            </summary>
            <param name="input">input</param>
            <param name="hull_storage">The destination array (CvMat*) or memory storage (CvMemStorage*) that will store the convex hull.                   If it is array, it should be 1d and have the same number of elements as the input array/sequence.                   On output the header is modified so to truncate the array downto the hull size. </param>
        </member>
        <member name="M:Cv.cv.CvConvexHull2(CxCore.IplImage@)">
            <summary>
            Finds convex hull of point set
            </summary>
            <param name="input">input</param>
        </member>
        <member name="M:Cv.cv.CvConvexHull2(CxCore.IplImage@,System.Int32,System.Int32)">
            <summary>
            Finds convex hull of point set
            </summary>
            <param name="input">input</param>
            <param name="orientation">Desired orientation of convex hull: CV_CLOCKWISE CV_COUNTER_CLOCKWISE </param>
            <param name="return_points">If non-zero, the points themselves will be stored                    in the hull instead of indices if hull_storage hull_storage </param>
        </member>
        <member name="M:Cv.cv.CvConvexHull2(CxCore.IplImage@,System.Int32)">
            <summary>
            Finds convex hull of point set
            </summary>
            <param name="input">input</param>
            <param name="orientation">Desired orientation of convex hull: CV_CLOCKWISE CV_COUNTER_CLOCKWISE </param>
        </member>
        <member name="M:Cv.cv.CvConvexHull2(CxCore.CvMat@,System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Finds convex hull of point set
            </summary>
            <param name="input">input</param>
            <param name="hull_storage">The destination array (CvMat*) or memory storage (CvMemStorage*) that will store the convex hull.                   If it is array, it should be 1d and have the same number of elements as the input array/sequence.                   On output the header is modified so to truncate the array downto the hull size. </param>
            <param name="orientation">Desired orientation of convex hull: CV_CLOCKWISE CV_COUNTER_CLOCKWISE </param>
            <param name="return_points">If non-zero, the points themselves will be stored                    in the hull instead of indices if hull_storage hull_storage </param>
        </member>
        <member name="M:Cv.cv.CvConvexHull2(CxCore.CvMat@,System.IntPtr,System.Int32)">
            <summary>
            Finds convex hull of point set
            </summary>
            <param name="input">input</param>
            <param name="hull_storage">The destination array (CvMat*) or memory storage (CvMemStorage*) that will store the convex hull.                   If it is array, it should be 1d and have the same number of elements as the input array/sequence.                   On output the header is modified so to truncate the array downto the hull size. </param>
            <param name="orientation">Desired orientation of convex hull: CV_CLOCKWISE CV_COUNTER_CLOCKWISE </param>
        </member>
        <member name="M:Cv.cv.CvConvexHull2(CxCore.CvMat@,System.IntPtr)">
            <summary>
            Finds convex hull of point set
            </summary>
            <param name="input">input</param>
            <param name="hull_storage">The destination array (CvMat*) or memory storage (CvMemStorage*) that will store the convex hull.                   If it is array, it should be 1d and have the same number of elements as the input array/sequence.                   On output the header is modified so to truncate the array downto the hull size. </param>
        </member>
        <member name="M:Cv.cv.CvConvexHull2(CxCore.CvMat@)">
            <summary>
            Finds convex hull of point set
            </summary>
            <param name="input">input</param>
        </member>
        <member name="M:Cv.cv.CvConvexHull2(CxCore.CvMat@,System.Int32,System.Int32)">
            <summary>
            Finds convex hull of point set
            </summary>
            <param name="input">input</param>
            <param name="orientation">Desired orientation of convex hull: CV_CLOCKWISE CV_COUNTER_CLOCKWISE </param>
            <param name="return_points">If non-zero, the points themselves will be stored                    in the hull instead of indices if hull_storage hull_storage </param>
        </member>
        <member name="M:Cv.cv.CvConvexHull2(CxCore.CvMat@,System.Int32)">
            <summary>
            Finds convex hull of point set
            </summary>
            <param name="input">input</param>
            <param name="orientation">Desired orientation of convex hull: CV_CLOCKWISE CV_COUNTER_CLOCKWISE </param>
        </member>
        <member name="M:Cv.cv.CvConvexHull2(CxCore.CvSeq@,System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Finds convex hull of point set
            </summary>
            <param name="input">input</param>
            <param name="hull_storage">The destination array (CvMat*) or memory storage (CvMemStorage*) that will store the convex hull.                   If it is array, it should be 1d and have the same number of elements as the input array/sequence.                   On output the header is modified so to truncate the array downto the hull size. </param>
            <param name="orientation">Desired orientation of convex hull: CV_CLOCKWISE CV_COUNTER_CLOCKWISE </param>
            <param name="return_points">If non-zero, the points themselves will be stored                    in the hull instead of indices if hull_storage hull_storage </param>
        </member>
        <member name="M:Cv.cv.CvConvexHull2(CxCore.CvSeq@,System.IntPtr,System.Int32)">
            <summary>
            Finds convex hull of point set
            </summary>
            <param name="input">input</param>
            <param name="hull_storage">The destination array (CvMat*) or memory storage (CvMemStorage*) that will store the convex hull.                   If it is array, it should be 1d and have the same number of elements as the input array/sequence.                   On output the header is modified so to truncate the array downto the hull size. </param>
            <param name="orientation">Desired orientation of convex hull: CV_CLOCKWISE CV_COUNTER_CLOCKWISE </param>
        </member>
        <member name="M:Cv.cv.CvConvexHull2(CxCore.CvSeq@,System.IntPtr)">
            <summary>
            Finds convex hull of point set
            </summary>
            <param name="input">input</param>
            <param name="hull_storage">The destination array (CvMat*) or memory storage (CvMemStorage*) that will store the convex hull.                   If it is array, it should be 1d and have the same number of elements as the input array/sequence.                   On output the header is modified so to truncate the array downto the hull size. </param>
        </member>
        <member name="M:Cv.cv.CvConvexHull2(CxCore.CvSeq@)">
            <summary>
            Finds convex hull of point set
            </summary>
            <param name="input">input</param>
        </member>
        <member name="M:Cv.cv.CvConvexHull2(CxCore.CvSeq@,System.Int32,System.Int32)">
            <summary>
            Finds convex hull of point set
            </summary>
            <param name="input">input</param>
            <param name="orientation">Desired orientation of convex hull: CV_CLOCKWISE CV_COUNTER_CLOCKWISE </param>
            <param name="return_points">If non-zero, the points themselves will be stored                    in the hull instead of indices if hull_storage hull_storage </param>
        </member>
        <member name="M:Cv.cv.CvConvexHull2(CxCore.CvSeq@,System.Int32)">
            <summary>
            Finds convex hull of point set
            </summary>
            <param name="input">input</param>
            <param name="orientation">Desired orientation of convex hull: CV_CLOCKWISE CV_COUNTER_CLOCKWISE </param>
        </member>
        <member name="M:Cv.cv.CvCheckContourConvexity(CxCore.IplImage@)">
            <summary>
            Tests contour convex
            </summary>
            <param name="contour">Tested contour (sequence or array of points). </param>
        </member>
        <member name="M:Cv.cv.CvCheckContourConvexity(CxCore.CvMat@)">
            <summary>
            Tests contour convex
            </summary>
            <param name="contour">Tested contour (sequence or array of points). </param>
        </member>
        <member name="M:Cv.cv.CvCheckContourConvexity(CxCore.CvSeq@)">
            <summary>
            Tests contour convex
            </summary>
            <param name="contour">Tested contour (sequence or array of points). </param>
        </member>
        <member name="M:Cv.cv.CvConvexityDefects(CxCore.IplImage@,CxCore.IplImage@,CxCore.CvMemStorage@)">
            <summary>
            Finds convexity defects of contour
            </summary>
            <param name="contour">Input contour. </param>
            <param name="convexhull">Convex hull obtained using return_points </param>
            <param name="storage">Container for output sequence of convexity defects. If it is NULL, contour or hull(in that order) storage is used. </param>
        </member>
        <member name="M:Cv.cv.CvConvexityDefects(CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Finds convexity defects of contour
            </summary>
            <param name="contour">Input contour. </param>
            <param name="convexhull">Convex hull obtained using return_points </param>
        </member>
        <member name="M:Cv.cv.CvConvexityDefects(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMemStorage@)">
            <summary>
            Finds convexity defects of contour
            </summary>
            <param name="contour">Input contour. </param>
            <param name="convexhull">Convex hull obtained using return_points </param>
            <param name="storage">Container for output sequence of convexity defects. If it is NULL, contour or hull(in that order) storage is used. </param>
        </member>
        <member name="M:Cv.cv.CvConvexityDefects(CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Finds convexity defects of contour
            </summary>
            <param name="contour">Input contour. </param>
            <param name="convexhull">Convex hull obtained using return_points </param>
        </member>
        <member name="M:Cv.cv.CvConvexityDefects(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvMemStorage@)">
            <summary>
            Finds convexity defects of contour
            </summary>
            <param name="contour">Input contour. </param>
            <param name="convexhull">Convex hull obtained using return_points </param>
            <param name="storage">Container for output sequence of convexity defects. If it is NULL, contour or hull(in that order) storage is used. </param>
        </member>
        <member name="M:Cv.cv.CvConvexityDefects(CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Finds convexity defects of contour
            </summary>
            <param name="contour">Input contour. </param>
            <param name="convexhull">Convex hull obtained using return_points </param>
        </member>
        <member name="M:Cv.cv.CvPointPolygonTest(CxCore.IplImage@,CxCore.CvPoint2D32f,System.Int32)">
            <summary>
            Point in contour test
            </summary>
            <param name="contour">Input contour. </param>
            <param name="pt">The point tested against the contour. </param>
            <param name="measure_dist">If it is non-zero, the function estimates distance from the point to the nearest contour edge. </param>
        </member>
        <member name="M:Cv.cv.CvPointPolygonTest(CxCore.CvMat@,CxCore.CvPoint2D32f,System.Int32)">
            <summary>
            Point in contour test
            </summary>
            <param name="contour">Input contour. </param>
            <param name="pt">The point tested against the contour. </param>
            <param name="measure_dist">If it is non-zero, the function estimates distance from the point to the nearest contour edge. </param>
        </member>
        <member name="M:Cv.cv.CvPointPolygonTest(CxCore.CvSeq@,CxCore.CvPoint2D32f,System.Int32)">
            <summary>
            Point in contour test
            </summary>
            <param name="contour">Input contour. </param>
            <param name="pt">The point tested against the contour. </param>
            <param name="measure_dist">If it is non-zero, the function estimates distance from the point to the nearest contour edge. </param>
        </member>
        <member name="M:Cv.cv.CvMinAreaRect2(CxCore.IplImage@,CxCore.CvMemStorage@)">
            <summary>
            Finds circumscribed rectangle of minimal area for given 2D point set
            </summary>
            <param name="points">Sequence or array of points. </param>
            <param name="storage">Optional temporary memory storage. </param>
        </member>
        <member name="M:Cv.cv.CvMinAreaRect2(CxCore.IplImage@)">
            <summary>
            Finds circumscribed rectangle of minimal area for given 2D point set
            </summary>
            <param name="points">Sequence or array of points. </param>
        </member>
        <member name="M:Cv.cv.CvMinAreaRect2(CxCore.CvMat@,CxCore.CvMemStorage@)">
            <summary>
            Finds circumscribed rectangle of minimal area for given 2D point set
            </summary>
            <param name="points">Sequence or array of points. </param>
            <param name="storage">Optional temporary memory storage. </param>
        </member>
        <member name="M:Cv.cv.CvMinAreaRect2(CxCore.CvMat@)">
            <summary>
            Finds circumscribed rectangle of minimal area for given 2D point set
            </summary>
            <param name="points">Sequence or array of points. </param>
        </member>
        <member name="M:Cv.cv.CvMinAreaRect2(CxCore.CvSeq@,CxCore.CvMemStorage@)">
            <summary>
            Finds circumscribed rectangle of minimal area for given 2D point set
            </summary>
            <param name="points">Sequence or array of points. </param>
            <param name="storage">Optional temporary memory storage. </param>
        </member>
        <member name="M:Cv.cv.CvMinAreaRect2(CxCore.CvSeq@)">
            <summary>
            Finds circumscribed rectangle of minimal area for given 2D point set
            </summary>
            <param name="points">Sequence or array of points. </param>
        </member>
        <member name="M:Cv.cv.CvMinEnclosingCircle(CxCore.IplImage@,CxCore.CvPoint2D32f@,System.Single[])">
            <summary>
            Finds circumscribed circle of minimal area for given 2D point set
            </summary>
            <param name="points">Sequence or array of 2D points. </param>
            <param name="center">Output parameter. The center of the enclosing circle. </param>
            <param name="radius">Output parameter. The radius of the enclosing circle. </param>
        </member>
        <member name="M:Cv.cv.CvMinEnclosingCircle(CxCore.CvMat@,CxCore.CvPoint2D32f@,System.Single[])">
            <summary>
            Finds circumscribed circle of minimal area for given 2D point set
            </summary>
            <param name="points">Sequence or array of 2D points. </param>
            <param name="center">Output parameter. The center of the enclosing circle. </param>
            <param name="radius">Output parameter. The radius of the enclosing circle. </param>
        </member>
        <member name="M:Cv.cv.CvMinEnclosingCircle(CxCore.CvSeq@,CxCore.CvPoint2D32f@,System.Single[])">
            <summary>
            Finds circumscribed circle of minimal area for given 2D point set
            </summary>
            <param name="points">Sequence or array of 2D points. </param>
            <param name="center">Output parameter. The center of the enclosing circle. </param>
            <param name="radius">Output parameter. The radius of the enclosing circle. </param>
        </member>
        <member name="M:Cv.cv.CvCalcPGH(CxCore.CvSeq@,CxCore.CvHistogram@)">
            <summary>
            Calculates pair-wise geometrical histogram for contour
            </summary>
            <param name="contour">Input contour. Currently, only integer point coordinates are allowed. </param>
            <param name="hist">Calculated histogram; must be two-dimensional. </param>
        </member>
        <member name="M:Cv.cv.UintOrg(System.UInt32)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="edge">edge</param>
        </member>
        <member name="M:Cv.cv.UintDst(System.UInt32)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="edge">edge</param>
        </member>
        <member name="M:Cv.cv.CvCreateSubdiv2D(System.Int32,System.Int32,System.Int32,System.Int32,CxCore.CvMemStorage@)">
            <summary>
            Internal Function
            </summary>
            <param name="subdiv_type">Type</param>
            <param name="header_size">header Size</param>
            <param name="vtx_size">Vertex Size</param>
            <param name="quadedge_size">Quadedge Size</param>
            <param name="storage">Container for subdivision. </param>
            <returns></returns>
        </member>
        <member name="M:Cv.cv.CvSubdivDelaunay2DInsert(Cv.CvSubdiv2D@,CxCore.CvPoint2D32f)">
            <summary>
            Inserts a single point to Delaunay triangulation
            </summary>
            <param name="subdiv">Delaunay subdivision created by function </param>
            <param name="pt">Inserted point. </param>
        </member>
        <member name="M:Cv.cv.CvSubdiv2DLocate(Cv.CvSubdiv2D@,CxCore.CvPoint2D32f,System.UInt32@,Cv.CvSubdiv2DPoint@)">
            <summary>
            Inserts a single point to Delaunay triangulation
            </summary>
            <param name="subdiv">Delaunay or another subdivision. </param>
            <param name="pt">The point to locate. </param>
            <param name="edge">The output edge the point falls onto or right to. </param>
            <param name="vertex">Optional output vertex double pointer the input point coinsides with. </param>
        </member>
        <member name="M:Cv.cv.CvSubdiv2DLocate(Cv.CvSubdiv2D@,CxCore.CvPoint2D32f,System.UInt32@)">
            <summary>
            Inserts a single point to Delaunay triangulation
            </summary>
            <param name="subdiv">Delaunay or another subdivision. </param>
            <param name="pt">The point to locate. </param>
            <param name="edge">The output edge the point falls onto or right to. </param>
        </member>
        <member name="M:Cv.cv.CvFindNearestPoint2D(Cv.CvSubdiv2D@,CxCore.CvPoint2D32f)">
            <summary>
            Finds the closest subdivision vertex to given point
            </summary>
            <param name="subdiv">Delaunay or another subdivision. </param>
            <param name="pt">Input point. </param>
        </member>
        <member name="M:Cv.cv.CvCalcSubdivVoronoi2D(Cv.CvSubdiv2D@)">
            <summary>
            Calculates coordinates of Voronoi diagram cells
            </summary>
            <param name="subdiv">Delaunay subdivision, where all the points are added already. </param>
        </member>
        <member name="M:Cv.cv.CvClearSubdivVoronoi2D(Cv.CvSubdiv2D@)">
            <summary>
            Removes all virtual points
            </summary>
            <param name="subdiv">Delaunay subdivision. </param>
        </member>
        <member name="M:Cv.cv.CvAcc(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Adds frame to accumulator
            </summary>
            <param name="image">Input image, 1- or 3-channel, 8-bit or 32-bit floating point.         (each channel of multi-channel image is processed independently). </param>
            <param name="sum">Accumulator of the same number of channels as input image, 32-bit or 64-bit floating-point. </param>
            <param name="mask">Optional operation mask. </param>
        </member>
        <member name="M:Cv.cv.CvAcc(CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Adds frame to accumulator
            </summary>
            <param name="image">Input image, 1- or 3-channel, 8-bit or 32-bit floating point.         (each channel of multi-channel image is processed independently). </param>
            <param name="sum">Accumulator of the same number of channels as input image, 32-bit or 64-bit floating-point. </param>
        </member>
        <member name="M:Cv.cv.CvAcc(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Adds frame to accumulator
            </summary>
            <param name="image">Input image, 1- or 3-channel, 8-bit or 32-bit floating point.         (each channel of multi-channel image is processed independently). </param>
            <param name="sum">Accumulator of the same number of channels as input image, 32-bit or 64-bit floating-point. </param>
            <param name="mask">Optional operation mask. </param>
        </member>
        <member name="M:Cv.cv.CvAcc(CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Adds frame to accumulator
            </summary>
            <param name="image">Input image, 1- or 3-channel, 8-bit or 32-bit floating point.         (each channel of multi-channel image is processed independently). </param>
            <param name="sum">Accumulator of the same number of channels as input image, 32-bit or 64-bit floating-point. </param>
        </member>
        <member name="M:Cv.cv.CvAcc(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Adds frame to accumulator
            </summary>
            <param name="image">Input image, 1- or 3-channel, 8-bit or 32-bit floating point.         (each channel of multi-channel image is processed independently). </param>
            <param name="sum">Accumulator of the same number of channels as input image, 32-bit or 64-bit floating-point. </param>
            <param name="mask">Optional operation mask. </param>
        </member>
        <member name="M:Cv.cv.CvAcc(CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Adds frame to accumulator
            </summary>
            <param name="image">Input image, 1- or 3-channel, 8-bit or 32-bit floating point.         (each channel of multi-channel image is processed independently). </param>
            <param name="sum">Accumulator of the same number of channels as input image, 32-bit or 64-bit floating-point. </param>
        </member>
        <member name="M:Cv.cv.CvSquareAcc(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Adds the square of source image to accumulator
            </summary>
            <param name="image">Input image, 1- or 3-channel, 8-bit or 32-bit floating point         (each channel of multi-channel image is processed independently). </param>
            <param name="sqsum">Accumulator of the same number of channels as input image, 32-bit or 64-bit floating-point. </param>
            <param name="mask">Optional operation mask. </param>
        </member>
        <member name="M:Cv.cv.CvSquareAcc(CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Adds the square of source image to accumulator
            </summary>
            <param name="image">Input image, 1- or 3-channel, 8-bit or 32-bit floating point         (each channel of multi-channel image is processed independently). </param>
            <param name="sqsum">Accumulator of the same number of channels as input image, 32-bit or 64-bit floating-point. </param>
        </member>
        <member name="M:Cv.cv.CvSquareAcc(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Adds the square of source image to accumulator
            </summary>
            <param name="image">Input image, 1- or 3-channel, 8-bit or 32-bit floating point         (each channel of multi-channel image is processed independently). </param>
            <param name="sqsum">Accumulator of the same number of channels as input image, 32-bit or 64-bit floating-point. </param>
            <param name="mask">Optional operation mask. </param>
        </member>
        <member name="M:Cv.cv.CvSquareAcc(CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Adds the square of source image to accumulator
            </summary>
            <param name="image">Input image, 1- or 3-channel, 8-bit or 32-bit floating point         (each channel of multi-channel image is processed independently). </param>
            <param name="sqsum">Accumulator of the same number of channels as input image, 32-bit or 64-bit floating-point. </param>
        </member>
        <member name="M:Cv.cv.CvSquareAcc(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Adds the square of source image to accumulator
            </summary>
            <param name="image">Input image, 1- or 3-channel, 8-bit or 32-bit floating point         (each channel of multi-channel image is processed independently). </param>
            <param name="sqsum">Accumulator of the same number of channels as input image, 32-bit or 64-bit floating-point. </param>
            <param name="mask">Optional operation mask. </param>
        </member>
        <member name="M:Cv.cv.CvSquareAcc(CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Adds the square of source image to accumulator
            </summary>
            <param name="image">Input image, 1- or 3-channel, 8-bit or 32-bit floating point         (each channel of multi-channel image is processed independently). </param>
            <param name="sqsum">Accumulator of the same number of channels as input image, 32-bit or 64-bit floating-point. </param>
        </member>
        <member name="M:Cv.cv.CvMultiplyAcc(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Adds product of two input images to accumulator
            </summary>
            <param name="image1">First input image, 1- or 3-channel, 8-bit or 32-bit floating point         (each channel of multi-channel image is processed independently). </param>
            <param name="image2">Second input image, the same format as the first one. </param>
            <param name="acc">Accumulator of the same number of channels as input images, 32-bit or 64-bit floating-point. </param>
            <param name="mask">Optional operation mask. </param>
        </member>
        <member name="M:Cv.cv.CvMultiplyAcc(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Adds product of two input images to accumulator
            </summary>
            <param name="image1">First input image, 1- or 3-channel, 8-bit or 32-bit floating point         (each channel of multi-channel image is processed independently). </param>
            <param name="image2">Second input image, the same format as the first one. </param>
            <param name="acc">Accumulator of the same number of channels as input images, 32-bit or 64-bit floating-point. </param>
        </member>
        <member name="M:Cv.cv.CvMultiplyAcc(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Adds product of two input images to accumulator
            </summary>
            <param name="image1">First input image, 1- or 3-channel, 8-bit or 32-bit floating point         (each channel of multi-channel image is processed independently). </param>
            <param name="image2">Second input image, the same format as the first one. </param>
            <param name="acc">Accumulator of the same number of channels as input images, 32-bit or 64-bit floating-point. </param>
            <param name="mask">Optional operation mask. </param>
        </member>
        <member name="M:Cv.cv.CvMultiplyAcc(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Adds product of two input images to accumulator
            </summary>
            <param name="image1">First input image, 1- or 3-channel, 8-bit or 32-bit floating point         (each channel of multi-channel image is processed independently). </param>
            <param name="image2">Second input image, the same format as the first one. </param>
            <param name="acc">Accumulator of the same number of channels as input images, 32-bit or 64-bit floating-point. </param>
        </member>
        <member name="M:Cv.cv.CvMultiplyAcc(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Adds product of two input images to accumulator
            </summary>
            <param name="image1">First input image, 1- or 3-channel, 8-bit or 32-bit floating point         (each channel of multi-channel image is processed independently). </param>
            <param name="image2">Second input image, the same format as the first one. </param>
            <param name="acc">Accumulator of the same number of channels as input images, 32-bit or 64-bit floating-point. </param>
            <param name="mask">Optional operation mask. </param>
        </member>
        <member name="M:Cv.cv.CvMultiplyAcc(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Adds product of two input images to accumulator
            </summary>
            <param name="image1">First input image, 1- or 3-channel, 8-bit or 32-bit floating point         (each channel of multi-channel image is processed independently). </param>
            <param name="image2">Second input image, the same format as the first one. </param>
            <param name="acc">Accumulator of the same number of channels as input images, 32-bit or 64-bit floating-point. </param>
        </member>
        <member name="M:Cv.cv.CvRunningAvg(CxCore.IplImage@,CxCore.IplImage@,System.Double,CxCore.IplImage@)">
            <summary>
            Updates running average
            </summary>
            <param name="image">Input image, 1- or 3-channel, 8-bit or 32-bit floating point          (each channel of multi-channel image is processed independently). </param>
            <param name="acc">Accumulator of the same number of channels as input image, 32-bit or 64-bit floating-point. </param>
            <param name="alpha">Weight of input image. </param>
            <param name="mask">Optional operation mask. </param>
        </member>
        <member name="M:Cv.cv.CvRunningAvg(CxCore.IplImage@,CxCore.IplImage@,System.Double)">
            <summary>
            Updates running average
            </summary>
            <param name="image">Input image, 1- or 3-channel, 8-bit or 32-bit floating point          (each channel of multi-channel image is processed independently). </param>
            <param name="acc">Accumulator of the same number of channels as input image, 32-bit or 64-bit floating-point. </param>
            <param name="alpha">Weight of input image. </param>
        </member>
        <member name="M:Cv.cv.CvRunningAvg(CxCore.CvMat@,CxCore.CvMat@,System.Double,CxCore.CvMat@)">
            <summary>
            Updates running average
            </summary>
            <param name="image">Input image, 1- or 3-channel, 8-bit or 32-bit floating point          (each channel of multi-channel image is processed independently). </param>
            <param name="acc">Accumulator of the same number of channels as input image, 32-bit or 64-bit floating-point. </param>
            <param name="alpha">Weight of input image. </param>
            <param name="mask">Optional operation mask. </param>
        </member>
        <member name="M:Cv.cv.CvRunningAvg(CxCore.CvMat@,CxCore.CvMat@,System.Double)">
            <summary>
            Updates running average
            </summary>
            <param name="image">Input image, 1- or 3-channel, 8-bit or 32-bit floating point          (each channel of multi-channel image is processed independently). </param>
            <param name="acc">Accumulator of the same number of channels as input image, 32-bit or 64-bit floating-point. </param>
            <param name="alpha">Weight of input image. </param>
        </member>
        <member name="M:Cv.cv.CvRunningAvg(CxCore.CvSeq@,CxCore.CvSeq@,System.Double,CxCore.CvSeq@)">
            <summary>
            Updates running average
            </summary>
            <param name="image">Input image, 1- or 3-channel, 8-bit or 32-bit floating point          (each channel of multi-channel image is processed independently). </param>
            <param name="acc">Accumulator of the same number of channels as input image, 32-bit or 64-bit floating-point. </param>
            <param name="alpha">Weight of input image. </param>
            <param name="mask">Optional operation mask. </param>
        </member>
        <member name="M:Cv.cv.CvRunningAvg(CxCore.CvSeq@,CxCore.CvSeq@,System.Double)">
            <summary>
            Updates running average
            </summary>
            <param name="image">Input image, 1- or 3-channel, 8-bit or 32-bit floating point          (each channel of multi-channel image is processed independently). </param>
            <param name="acc">Accumulator of the same number of channels as input image, 32-bit or 64-bit floating-point. </param>
            <param name="alpha">Weight of input image. </param>
        </member>
        <member name="M:Cv.cv.CvUpdateMotionHistory(CxCore.IplImage@,CxCore.IplImage@,System.Double,System.Double)">
            <summary>
            Updates motion history image by moving silhouette
            </summary>
            <param name="silhouette">Silhouette mask that has non-zero pixels where the motion occurs. </param>
            <param name="mhi">Motion history image, that is updated by the function (single-channel, 32-bit floating-point) </param>
            <param name="timestamp">Current time in milliseconds or other units. </param>
            <param name="duration">Maximal duration of motion track in the same units as timestamp </param>
        </member>
        <member name="M:Cv.cv.CvUpdateMotionHistory(CxCore.CvMat@,CxCore.CvMat@,System.Double,System.Double)">
            <summary>
            Updates motion history image by moving silhouette
            </summary>
            <param name="silhouette">Silhouette mask that has non-zero pixels where the motion occurs. </param>
            <param name="mhi">Motion history image, that is updated by the function (single-channel, 32-bit floating-point) </param>
            <param name="timestamp">Current time in milliseconds or other units. </param>
            <param name="duration">Maximal duration of motion track in the same units as timestamp </param>
        </member>
        <member name="M:Cv.cv.CvUpdateMotionHistory(CxCore.CvSeq@,CxCore.CvSeq@,System.Double,System.Double)">
            <summary>
            Updates motion history image by moving silhouette
            </summary>
            <param name="silhouette">Silhouette mask that has non-zero pixels where the motion occurs. </param>
            <param name="mhi">Motion history image, that is updated by the function (single-channel, 32-bit floating-point) </param>
            <param name="timestamp">Current time in milliseconds or other units. </param>
            <param name="duration">Maximal duration of motion track in the same units as timestamp </param>
        </member>
        <member name="M:Cv.cv.CvCalcMotionGradient(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@,System.Double,System.Double,System.Int32)">
            <summary>
            Calculates gradient orientation of motion history image
            </summary>
            <param name="mhi">Motion history image. </param>
            <param name="mask">Mask image; marks pixels where motion gradient data is correct. Outputparameter. </param>
            <param name="orientation">Motion gradient orientation image; contains angles from 0 to ~360�. </param>
            <param name="delta1">delta1</param>
            <param name="delta2">delta2</param>
            <param name="aperture_size">Aperture size of derivative operators used by the function:CV_SCHARR, 1, 3, 5 or 7 (see </param>
        </member>
        <member name="M:Cv.cv.CvCalcMotionGradient(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@,System.Double,System.Double)">
            <summary>
            Calculates gradient orientation of motion history image
            </summary>
            <param name="mhi">Motion history image. </param>
            <param name="mask">Mask image; marks pixels where motion gradient data is correct. Outputparameter. </param>
            <param name="orientation">Motion gradient orientation image; contains angles from 0 to ~360�. </param>
            <param name="delta1">delta1</param>
            <param name="delta2">delta2</param>
        </member>
        <member name="M:Cv.cv.CvCalcMotionGradient(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@,System.Double)">
            <summary>
            Calculates gradient orientation of motion history image
            </summary>
            <param name="mhi">Motion history image. </param>
            <param name="mask">Mask image; marks pixels where motion gradient data is correct. Outputparameter. </param>
            <param name="orientation">Motion gradient orientation image; contains angles from 0 to ~360�. </param>
            <param name="delta1">delta1</param>
        </member>
        <member name="M:Cv.cv.CvCalcMotionGradient(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,System.Double,System.Double,System.Int32)">
            <summary>
            Calculates gradient orientation of motion history image
            </summary>
            <param name="mhi">Motion history image. </param>
            <param name="mask">Mask image; marks pixels where motion gradient data is correct. Outputparameter. </param>
            <param name="orientation">Motion gradient orientation image; contains angles from 0 to ~360�. </param>
            <param name="delta1">delta1</param>
            <param name="delta2">delta2</param>
            <param name="aperture_size">Aperture size of derivative operators used by the function:CV_SCHARR, 1, 3, 5 or 7 (see </param>
        </member>
        <member name="M:Cv.cv.CvCalcMotionGradient(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,System.Double,System.Double)">
            <summary>
            Calculates gradient orientation of motion history image
            </summary>
            <param name="mhi">Motion history image. </param>
            <param name="mask">Mask image; marks pixels where motion gradient data is correct. Outputparameter. </param>
            <param name="orientation">Motion gradient orientation image; contains angles from 0 to ~360�. </param>
            <param name="delta1">delta1</param>
            <param name="delta2">delta2</param>
        </member>
        <member name="M:Cv.cv.CvCalcMotionGradient(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,System.Double)">
            <summary>
            Calculates gradient orientation of motion history image
            </summary>
            <param name="mhi">Motion history image. </param>
            <param name="mask">Mask image; marks pixels where motion gradient data is correct. Outputparameter. </param>
            <param name="orientation">Motion gradient orientation image; contains angles from 0 to ~360�. </param>
            <param name="delta1">delta1</param>
        </member>
        <member name="M:Cv.cv.CvCalcMotionGradient(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@,System.Double,System.Double,System.Int32)">
            <summary>
            Calculates gradient orientation of motion history image
            </summary>
            <param name="mhi">Motion history image. </param>
            <param name="mask">Mask image; marks pixels where motion gradient data is correct. Outputparameter. </param>
            <param name="orientation">Motion gradient orientation image; contains angles from 0 to ~360�. </param>
            <param name="delta1">delta1</param>
            <param name="delta2">delta2</param>
            <param name="aperture_size">Aperture size of derivative operators used by the function:CV_SCHARR, 1, 3, 5 or 7 (see </param>
        </member>
        <member name="M:Cv.cv.CvCalcMotionGradient(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@,System.Double,System.Double)">
            <summary>
            Calculates gradient orientation of motion history image
            </summary>
            <param name="mhi">Motion history image. </param>
            <param name="mask">Mask image; marks pixels where motion gradient data is correct. Outputparameter. </param>
            <param name="orientation">Motion gradient orientation image; contains angles from 0 to ~360�. </param>
            <param name="delta1">delta1</param>
            <param name="delta2">delta2</param>
        </member>
        <member name="M:Cv.cv.CvCalcMotionGradient(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@,System.Double)">
            <summary>
            Calculates gradient orientation of motion history image
            </summary>
            <param name="mhi">Motion history image. </param>
            <param name="mask">Mask image; marks pixels where motion gradient data is correct. Outputparameter. </param>
            <param name="orientation">Motion gradient orientation image; contains angles from 0 to ~360�. </param>
            <param name="delta1">delta1</param>
        </member>
        <member name="M:Cv.cv.CvCalcGlobalOrientation(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@,System.Double,System.Double)">
            <summary>
            Calculates global motion orientation of some selected region
            </summary>
            <param name="orientation">Motion gradient orientation image; calculated by the function </param>
            <param name="mask">Mask image. It may be a conjunction of valid gradient mask, obtained with </param>
            <param name="mhi">Motion history image. </param>
            <param name="timestamp">Current time in milliseconds or other units, it is better to store time passed to </param>
            <param name="duration">Maximal duration of motion track in milliseconds, the same as in </param>
        </member>
        <member name="M:Cv.cv.CvCalcGlobalOrientation(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,System.Double,System.Double)">
            <summary>
            Calculates global motion orientation of some selected region
            </summary>
            <param name="orientation">Motion gradient orientation image; calculated by the function </param>
            <param name="mask">Mask image. It may be a conjunction of valid gradient mask, obtained with </param>
            <param name="mhi">Motion history image. </param>
            <param name="timestamp">Current time in milliseconds or other units, it is better to store time passed to </param>
            <param name="duration">Maximal duration of motion track in milliseconds, the same as in </param>
        </member>
        <member name="M:Cv.cv.CvCalcGlobalOrientation(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@,System.Double,System.Double)">
            <summary>
            Calculates global motion orientation of some selected region
            </summary>
            <param name="orientation">Motion gradient orientation image; calculated by the function </param>
            <param name="mask">Mask image. It may be a conjunction of valid gradient mask, obtained with </param>
            <param name="mhi">Motion history image. </param>
            <param name="timestamp">Current time in milliseconds or other units, it is better to store time passed to </param>
            <param name="duration">Maximal duration of motion track in milliseconds, the same as in </param>
        </member>
        <member name="M:Cv.cv.CvSegmentMotion(CxCore.IplImage@,CxCore.IplImage@,CxCore.CvMemStorage@,System.Double,System.Double)">
            <summary>
            Segments whole motion into separate moving parts
            </summary>
            <param name="mhi">Motion history image. </param>
            <param name="seg_mask">Image where the mask found should be stored, single-channel, 32-bit floating-point. </param>
            <param name="storage">Memory storage that will contain a sequence of motion connected components. </param>
            <param name="timestamp">Current time in milliseconds or other units. </param>
            <param name="seg_thresh">Segmentation threshold; recommended to be equal to the intervalbetween motion history "steps" or greater. </param>
        </member>
        <member name="M:Cv.cv.CvSegmentMotion(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMemStorage@,System.Double,System.Double)">
            <summary>
            Segments whole motion into separate moving parts
            </summary>
            <param name="mhi">Motion history image. </param>
            <param name="seg_mask">Image where the mask found should be stored, single-channel, 32-bit floating-point. </param>
            <param name="storage">Memory storage that will contain a sequence of motion connected components. </param>
            <param name="timestamp">Current time in milliseconds or other units. </param>
            <param name="seg_thresh">Segmentation threshold; recommended to be equal to the intervalbetween motion history "steps" or greater. </param>
        </member>
        <member name="M:Cv.cv.CvSegmentMotion(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvMemStorage@,System.Double,System.Double)">
            <summary>
            Segments whole motion into separate moving parts
            </summary>
            <param name="mhi">Motion history image. </param>
            <param name="seg_mask">Image where the mask found should be stored, single-channel, 32-bit floating-point. </param>
            <param name="storage">Memory storage that will contain a sequence of motion connected components. </param>
            <param name="timestamp">Current time in milliseconds or other units. </param>
            <param name="seg_thresh">Segmentation threshold; recommended to be equal to the intervalbetween motion history "steps" or greater. </param>
        </member>
        <member name="M:Cv.cv.CvMeanShift(CxCore.IplImage@,CxCore.CvRect,CxCore.CvTermCriteria,Cv.CvConnectedComp@)">
            <summary>
            Finds object center on back projection
            </summary>
            <param name="prob_image">Back projection of object histogram (see </param>
            <param name="window">Initial search window. </param>
            <param name="criteria">Criteria applied to determine when the window search should befinished. </param>
            <param name="comp">Resultant structure that contains converged search window coordinates( comp->rect comp->area </param>
        </member>
        <member name="M:Cv.cv.CvMeanShift(CxCore.CvMat@,CxCore.CvRect,CxCore.CvTermCriteria,Cv.CvConnectedComp@)">
            <summary>
            Finds object center on back projection
            </summary>
            <param name="prob_image">Back projection of object histogram (see </param>
            <param name="window">Initial search window. </param>
            <param name="criteria">Criteria applied to determine when the window search should befinished. </param>
            <param name="comp">Resultant structure that contains converged search window coordinates( comp->rect comp->area </param>
        </member>
        <member name="M:Cv.cv.CvMeanShift(CxCore.CvSeq@,CxCore.CvRect,CxCore.CvTermCriteria,Cv.CvConnectedComp@)">
            <summary>
            Finds object center on back projection
            </summary>
            <param name="prob_image">Back projection of object histogram (see </param>
            <param name="window">Initial search window. </param>
            <param name="criteria">Criteria applied to determine when the window search should befinished. </param>
            <param name="comp">Resultant structure that contains converged search window coordinates( comp->rect comp->area </param>
        </member>
        <member name="M:Cv.cv.CvCamShift(CxCore.IplImage@,CxCore.CvRect,CxCore.CvTermCriteria,Cv.CvConnectedComp@,CxCore.CvBox2D@)">
            <summary>
            Finds object center, size, and orientation
            </summary>
            <param name="prob_image">Back projection of object histogram (see </param>
            <param name="window">Initial search window. </param>
            <param name="criteria">Criteria applied to determine when the window search should befinished. </param>
            <param name="comp">Resultant structure that contains converged search window coordinates( comp->rect comp->area </param>
            <param name="box">Circumscribed box for the object. If not NULL </param>
        </member>
        <member name="M:Cv.cv.CvCamShift(CxCore.IplImage@,CxCore.CvRect,CxCore.CvTermCriteria,Cv.CvConnectedComp@)">
            <summary>
            Finds object center, size, and orientation
            </summary>
            <param name="prob_image">Back projection of object histogram (see </param>
            <param name="window">Initial search window. </param>
            <param name="criteria">Criteria applied to determine when the window search should befinished. </param>
            <param name="comp">Resultant structure that contains converged search window coordinates( comp->rect comp->area </param>
        </member>
        <member name="M:Cv.cv.CvCamShift(CxCore.CvMat@,CxCore.CvRect,CxCore.CvTermCriteria,Cv.CvConnectedComp@,CxCore.CvBox2D@)">
            <summary>
            Finds object center, size, and orientation
            </summary>
            <param name="prob_image">Back projection of object histogram (see </param>
            <param name="window">Initial search window. </param>
            <param name="criteria">Criteria applied to determine when the window search should befinished. </param>
            <param name="comp">Resultant structure that contains converged search window coordinates( comp->rect comp->area </param>
            <param name="box">Circumscribed box for the object. If not NULL </param>
        </member>
        <member name="M:Cv.cv.CvCamShift(CxCore.CvMat@,CxCore.CvRect,CxCore.CvTermCriteria,Cv.CvConnectedComp@)">
            <summary>
            Finds object center, size, and orientation
            </summary>
            <param name="prob_image">Back projection of object histogram (see </param>
            <param name="window">Initial search window. </param>
            <param name="criteria">Criteria applied to determine when the window search should befinished. </param>
            <param name="comp">Resultant structure that contains converged search window coordinates( comp->rect comp->area </param>
        </member>
        <member name="M:Cv.cv.CvCamShift(CxCore.CvSeq@,CxCore.CvRect,CxCore.CvTermCriteria,Cv.CvConnectedComp@,CxCore.CvBox2D@)">
            <summary>
            Finds object center, size, and orientation
            </summary>
            <param name="prob_image">Back projection of object histogram (see </param>
            <param name="window">Initial search window. </param>
            <param name="criteria">Criteria applied to determine when the window search should befinished. </param>
            <param name="comp">Resultant structure that contains converged search window coordinates( comp->rect comp->area </param>
            <param name="box">Circumscribed box for the object. If not NULL </param>
        </member>
        <member name="M:Cv.cv.CvCamShift(CxCore.CvSeq@,CxCore.CvRect,CxCore.CvTermCriteria,Cv.CvConnectedComp@)">
            <summary>
            Finds object center, size, and orientation
            </summary>
            <param name="prob_image">Back projection of object histogram (see </param>
            <param name="window">Initial search window. </param>
            <param name="criteria">Criteria applied to determine when the window search should befinished. </param>
            <param name="comp">Resultant structure that contains converged search window coordinates( comp->rect comp->area </param>
        </member>
        <member name="M:Cv.cv.CvSnakeImage(CxCore.IplImage@,System.IntPtr,System.Int32,System.Single[],System.Single[],System.Single[],System.Int32,CxCore.CvSize,CxCore.CvTermCriteria,System.Int32)">
            <summary>
            Changes contour position to minimize its energy
            </summary>
            <param name="image">The source image or external energy field. </param>
            <param name="points">Contour points (snake). </param>
            <param name="length">Number of points in the contour. </param>
            <param name="alpha">Weight[s] of continuity energy, single float or array of length </param>
            <param name="beta">Weight[s] of curvature energy, similar to alpha </param>
            <param name="gamma">Weight[s] of image energy, similar to alpha </param>
            <param name="coeff_usage">Variant of usage of the previous three parameters: CV_VALUE alpha, beta, gamma CV_ARRAY alpha, beta, gamma </param>
            <param name="win">Size of neighborhood of every point used to search the minimum, both win.width win.height </param>
            <param name="criteria">Termination criteria. </param>
            <param name="calc_gradient">Gradient flag. If not 0, the function calculates gradient magnitude for every image pixel andconsideres it as the energy field, otherwise the input image itself is considered. </param>
        </member>
        <member name="M:Cv.cv.CvSnakeImage(CxCore.IplImage@,System.IntPtr,System.Int32,System.Single[],System.Single[],System.Single[],System.Int32,CxCore.CvSize,CxCore.CvTermCriteria)">
            <summary>
            Changes contour position to minimize its energy
            </summary>
            <param name="image">The source image or external energy field. </param>
            <param name="points">Contour points (snake). </param>
            <param name="length">Number of points in the contour. </param>
            <param name="alpha">Weight[s] of continuity energy, single float or array of length </param>
            <param name="beta">Weight[s] of curvature energy, similar to alpha </param>
            <param name="gamma">Weight[s] of image energy, similar to alpha </param>
            <param name="coeff_usage">Variant of usage of the previous three parameters: CV_VALUE alpha, beta, gamma CV_ARRAY alpha, beta, gamma </param>
            <param name="win">Size of neighborhood of every point used to search the minimum, both win.width win.height </param>
            <param name="criteria">Termination criteria. </param>
        </member>
        <member name="M:Cv.cv.CvCalcOpticalFlowHS(CxCore.IplImage@,CxCore.IplImage@,System.Int32,CxCore.IplImage@,CxCore.IplImage@,System.Double,CxCore.CvTermCriteria)">
            <summary>
            Calculates optical flow for two images
            </summary>
            <param name="prev">First image, 8-bit, single-channel. </param>
            <param name="curr">Second image, 8-bit, single-channel. </param>
            <param name="use_previous">Uses previous (input) velocity field. </param>
            <param name="velx">Horizontal component of the optical flow of the same size as input images,            32-bit floating-point, single-channel. </param>
            <param name="vely">Vertical component of the optical flow of the same size as input images,            32-bit floating-point, single-channel. </param>
            <param name="lambda">Lagrangian multiplier. </param>
            <param name="criteria">Criteria of termination of velocity computing. </param>
        </member>
        <member name="M:Cv.cv.CvCalcOpticalFlowHS(CxCore.CvMat@,CxCore.CvMat@,System.Int32,CxCore.CvMat@,CxCore.CvMat@,System.Double,CxCore.CvTermCriteria)">
            <summary>
            Calculates optical flow for two images
            </summary>
            <param name="prev">First image, 8-bit, single-channel. </param>
            <param name="curr">Second image, 8-bit, single-channel. </param>
            <param name="use_previous">Uses previous (input) velocity field. </param>
            <param name="velx">Horizontal component of the optical flow of the same size as input images,            32-bit floating-point, single-channel. </param>
            <param name="vely">Vertical component of the optical flow of the same size as input images,            32-bit floating-point, single-channel. </param>
            <param name="lambda">Lagrangian multiplier. </param>
            <param name="criteria">Criteria of termination of velocity computing. </param>
        </member>
        <member name="M:Cv.cv.CvCalcOpticalFlowHS(CxCore.CvSeq@,CxCore.CvSeq@,System.Int32,CxCore.CvSeq@,CxCore.CvSeq@,System.Double,CxCore.CvTermCriteria)">
            <summary>
            Calculates optical flow for two images
            </summary>
            <param name="prev">First image, 8-bit, single-channel. </param>
            <param name="curr">Second image, 8-bit, single-channel. </param>
            <param name="use_previous">Uses previous (input) velocity field. </param>
            <param name="velx">Horizontal component of the optical flow of the same size as input images,            32-bit floating-point, single-channel. </param>
            <param name="vely">Vertical component of the optical flow of the same size as input images,            32-bit floating-point, single-channel. </param>
            <param name="lambda">Lagrangian multiplier. </param>
            <param name="criteria">Criteria of termination of velocity computing. </param>
        </member>
        <member name="M:Cv.cv.CvCalcOpticalFlowLK(CxCore.IplImage@,CxCore.IplImage@,CxCore.CvSize,CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Calculates optical flow for two images
            </summary>
            <param name="prev">First image, 8-bit, single-channel. </param>
            <param name="curr">Second image, 8-bit, single-channel. </param>
            <param name="win_size">Size of the averaging window used for grouping pixels. </param>
            <param name="velx">Horizontal component of the optical flow of the same size as input images,            32-bit floating-point, single-channel. </param>
            <param name="vely">Vertical component of the optical flow of the same size as input images,            32-bit floating-point, single-channel. </param>
        </member>
        <member name="M:Cv.cv.CvCalcOpticalFlowLK(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvSize,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Calculates optical flow for two images
            </summary>
            <param name="prev">First image, 8-bit, single-channel. </param>
            <param name="curr">Second image, 8-bit, single-channel. </param>
            <param name="win_size">Size of the averaging window used for grouping pixels. </param>
            <param name="velx">Horizontal component of the optical flow of the same size as input images,            32-bit floating-point, single-channel. </param>
            <param name="vely">Vertical component of the optical flow of the same size as input images,            32-bit floating-point, single-channel. </param>
        </member>
        <member name="M:Cv.cv.CvCalcOpticalFlowLK(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSize,CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Calculates optical flow for two images
            </summary>
            <param name="prev">First image, 8-bit, single-channel. </param>
            <param name="curr">Second image, 8-bit, single-channel. </param>
            <param name="win_size">Size of the averaging window used for grouping pixels. </param>
            <param name="velx">Horizontal component of the optical flow of the same size as input images,            32-bit floating-point, single-channel. </param>
            <param name="vely">Vertical component of the optical flow of the same size as input images,            32-bit floating-point, single-channel. </param>
        </member>
        <member name="M:Cv.cv.CvCalcOpticalFlowBM(CxCore.IplImage@,CxCore.IplImage@,CxCore.CvSize,CxCore.CvSize,CxCore.CvSize,System.Int32,CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Calculates optical flow for two images by block matching method
            </summary>
            <param name="prev">First image, 8-bit, single-channel. </param>
            <param name="curr">Second image, 8-bit, single-channel. </param>
            <param name="block_size">Size of basic blocks that are compared. </param>
            <param name="shift_size">Block coordinate increments. </param>
            <param name="max_range">Size of the scanned neighborhood in pixels around block. </param>
            <param name="use_previous">Uses previous (input) velocity field. </param>
            <param name="velx">Horizontal component of the optical flow of floor((prev->width - block_size.width)/shiftSize.width) � floor((prev->height - block_size.height)/shiftSize.height) size,            32-bit floating-point, single-channel. </param>
            <param name="vely">Vertical component of the optical flow of the same size velx </param>
        </member>
        <member name="M:Cv.cv.CvCalcOpticalFlowBM(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvSize,CxCore.CvSize,CxCore.CvSize,System.Int32,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Calculates optical flow for two images by block matching method
            </summary>
            <param name="prev">First image, 8-bit, single-channel. </param>
            <param name="curr">Second image, 8-bit, single-channel. </param>
            <param name="block_size">Size of basic blocks that are compared. </param>
            <param name="shift_size">Block coordinate increments. </param>
            <param name="max_range">Size of the scanned neighborhood in pixels around block. </param>
            <param name="use_previous">Uses previous (input) velocity field. </param>
            <param name="velx">Horizontal component of the optical flow of floor((prev->width - block_size.width)/shiftSize.width) � floor((prev->height - block_size.height)/shiftSize.height) size,            32-bit floating-point, single-channel. </param>
            <param name="vely">Vertical component of the optical flow of the same size velx </param>
        </member>
        <member name="M:Cv.cv.CvCalcOpticalFlowBM(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSize,CxCore.CvSize,CxCore.CvSize,System.Int32,CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Calculates optical flow for two images by block matching method
            </summary>
            <param name="prev">First image, 8-bit, single-channel. </param>
            <param name="curr">Second image, 8-bit, single-channel. </param>
            <param name="block_size">Size of basic blocks that are compared. </param>
            <param name="shift_size">Block coordinate increments. </param>
            <param name="max_range">Size of the scanned neighborhood in pixels around block. </param>
            <param name="use_previous">Uses previous (input) velocity field. </param>
            <param name="velx">Horizontal component of the optical flow of floor((prev->width - block_size.width)/shiftSize.width) � floor((prev->height - block_size.height)/shiftSize.height) size,            32-bit floating-point, single-channel. </param>
            <param name="vely">Vertical component of the optical flow of the same size velx </param>
        </member>
        <member name="M:Cv.cv.CvCalcOpticalFlowPyrLK(CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@,System.IntPtr,System.IntPtr,System.Int32,CxCore.CvSize,System.Int32,System.Byte[],System.Single[],CxCore.CvTermCriteria,System.Int32)">
            <summary>
            Calculates optical flow for a sparse feature set using iterative Lucas-Kanade method in        pyramids
            </summary>
            <param name="prev">First frame, at time t </param>
            <param name="curr">Second frame, at time t + dt </param>
            <param name="prev_pyr">Buffer for the pyramid for the first frame. If the pointer is not NULL 1 level (image_width+8)*image_height/3 </param>
            <param name="curr_pyr">Similar to prev_pyr </param>
            <param name="prev_features">Array of points for which the flow needs to be found. </param>
            <param name="curr_features">Array of 2D points containing calculated new positions of input features in the second image. </param>
            <param name="count">Number of feature points. </param>
            <param name="win_size">Size of the search window of each pyramid level. </param>
            <param name="level">Maximal pyramid level number. If 0 1 </param>
            <param name="status">Array. Every element of the array is set to 1 0 </param>
            <param name="track_error">Array of double numbers containing difference between patches around theoriginal and moved points. Optional parameter; can be NULL </param>
            <param name="criteria">Specifies when the iteration process of finding the flow for each pointon each pyramid level should be stopped. </param>
            <param name="flags">Miscellaneous flags: CV_LKFLOW_PYR_A_READY CV_LKFLOW_PYR_B_READY CV_LKFLOW_INITIAL_GUESSES </param>
        </member>
        <member name="M:Cv.cv.CvCalcOpticalFlowPyrLK(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,System.IntPtr,System.IntPtr,System.Int32,CxCore.CvSize,System.Int32,System.Byte[],System.Single[],CxCore.CvTermCriteria,System.Int32)">
            <summary>
            Calculates optical flow for a sparse feature set using iterative Lucas-Kanade method in        pyramids
            </summary>
            <param name="prev">First frame, at time t </param>
            <param name="curr">Second frame, at time t + dt </param>
            <param name="prev_pyr">Buffer for the pyramid for the first frame. If the pointer is not NULL 1 level (image_width+8)*image_height/3 </param>
            <param name="curr_pyr">Similar to prev_pyr </param>
            <param name="prev_features">Array of points for which the flow needs to be found. </param>
            <param name="curr_features">Array of 2D points containing calculated new positions of input features in the second image. </param>
            <param name="count">Number of feature points. </param>
            <param name="win_size">Size of the search window of each pyramid level. </param>
            <param name="level">Maximal pyramid level number. If 0 1 </param>
            <param name="status">Array. Every element of the array is set to 1 0 </param>
            <param name="track_error">Array of double numbers containing difference between patches around theoriginal and moved points. Optional parameter; can be NULL </param>
            <param name="criteria">Specifies when the iteration process of finding the flow for each pointon each pyramid level should be stopped. </param>
            <param name="flags">Miscellaneous flags: CV_LKFLOW_PYR_A_READY CV_LKFLOW_PYR_B_READY CV_LKFLOW_INITIAL_GUESSES </param>
        </member>
        <member name="M:Cv.cv.CvCalcOpticalFlowPyrLK(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@,System.IntPtr,System.IntPtr,System.Int32,CxCore.CvSize,System.Int32,System.Byte[],System.Single[],CxCore.CvTermCriteria,System.Int32)">
            <summary>
            Calculates optical flow for a sparse feature set using iterative Lucas-Kanade method in        pyramids
            </summary>
            <param name="prev">First frame, at time t </param>
            <param name="curr">Second frame, at time t + dt </param>
            <param name="prev_pyr">Buffer for the pyramid for the first frame. If the pointer is not NULL 1 level (image_width+8)*image_height/3 </param>
            <param name="curr_pyr">Similar to prev_pyr </param>
            <param name="prev_features">Array of points for which the flow needs to be found. </param>
            <param name="curr_features">Array of 2D points containing calculated new positions of input features in the second image. </param>
            <param name="count">Number of feature points. </param>
            <param name="win_size">Size of the search window of each pyramid level. </param>
            <param name="level">Maximal pyramid level number. If 0 1 </param>
            <param name="status">Array. Every element of the array is set to 1 0 </param>
            <param name="track_error">Array of double numbers containing difference between patches around theoriginal and moved points. Optional parameter; can be NULL </param>
            <param name="criteria">Specifies when the iteration process of finding the flow for each pointon each pyramid level should be stopped. </param>
            <param name="flags">Miscellaneous flags: CV_LKFLOW_PYR_A_READY CV_LKFLOW_PYR_B_READY CV_LKFLOW_INITIAL_GUESSES </param>
        </member>
        <member name="M:Cv.cv.CvReleaseKalman(Cv.CvKalman@)">
            <summary>
            Deallocates Kalman filter structure
            </summary>
            <param name="kalman">double pointer to the Kalman filter structure. </param>
        </member>
        <member name="M:Cv.cv.CvKalmanPredict(Cv.CvKalman@,CxCore.CvMat@)">
            <summary>
            Estimates subsequent model state
            </summary>
            <param name="kalman">Kalman filter state. </param>
            <param name="control">Control vector (u control_params </param>
        </member>
        <member name="M:Cv.cv.CvKalmanPredict(Cv.CvKalman@)">
            <summary>
            Estimates subsequent model state
            </summary>
            <param name="kalman">Kalman filter state. </param>
        </member>
        <member name="M:Cv.cv.CvKalmanCorrect(Cv.CvKalman@,CxCore.CvMat@)">
            <summary>
            Adjusts model state
            </summary>
            <param name="kalman">Pointer to the structure to be updated. </param>
            <param name="measurement">Pointer to the structure CvMat containing the measurement vector. </param>
        </member>
        <member name="M:Cv.cv.CvCreateConDensation(System.Int32,System.Int32,System.Int32)">
            <summary>
            Allocates ConDensation filter structure
            </summary>
            <param name="dynam_params">Dimension of the state vector. </param>
            <param name="measure_params">Dimension of the measurement vector. </param>
            <param name="sample_count">Number of samples. </param>
        </member>
        <member name="M:Cv.cv.CvReleaseConDensation(Cv.CvConDensation@)">
            <summary>
            Deallocates ConDensation filter structure
            </summary>
            <param name="condens">Pointer to the pointer to the structure to be released. </param>
        </member>
        <member name="M:Cv.cv.CvConDensInitSampleSet(Cv.CvConDensation@,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Initializes sample set for ConDensation algorithm
            </summary>
            <param name="condens">Pointer to a structure to be initialized. </param>
            <param name="lower_bound">Vector of the lower boundary for each dimension. </param>
            <param name="upper_bound">Vector of the upper boundary for each dimension. </param>
        </member>
        <member name="M:Cv.cv.CvConDensUpdateByTime(Cv.CvConDensation@)">
            <summary>
            Estimates subsequent model state
            </summary>
            <param name="condens">Pointer to the structure to be updated. </param>
        </member>
        <member name="M:Cv.cv.CvReleaseHaarClassifierCascade(Cv.CvHaarClassifierCascade@)">
            <summary>
            Releases haar classifier cascade
            </summary>
            <param name="cascade">Double pointer to the released cascade.               The pointer is cleared by the function. </param>
        </member>
        <member name="M:Cv.cv.CvHaarDetectObjects(CxCore.IplImage@,Cv.CvHaarClassifierCascade@,CxCore.CvMemStorage@,System.Double,System.Int32,System.Int32,CxCore.CvSize)">
            <summary>
            Detects objects in the image
            </summary>
            <param name="image">Image to detect objects in.</param>
            <param name="cascade">Haar classifier cascade in internal representation. </param>
            <param name="storage">Memory storage to store the resultant sequence of the object candidate rectangles. </param>
            <param name="scale_factor">The factor by which the search window is scaled between the subsequent scans, for example, 1.1 means increasing window by 10%. </param>
            <param name="min_neighbors">Minimum number (minus 1) of neighbor rectangles that makes up an object. All the groups of a smaller number of rectangles than min_neighbors-1 are rejected. If min_neighbors is 0, the function does not any grouping at all and returns all the detected candidate rectangles, which may be useful if the user wants to apply a customized grouping procedure. </param>
            <param name="flag">Mode of operation. Currently the only flag that may be specified is CV_HAAR_DO_CANNY_PRUNING. If it is set, the function uses Canny edge detector to reject some image regions that contain too few or too much edges and thus can not contain the searched object. The particular threshold values are tuned for face detection and in this case the pruning speeds up the processing. </param>
            <param name="min_size">Minimum window size. By default, it is set to the size of samples the classifier has been trained on (~20�20 for face detection). </param>
        </member>
        <member name="M:Cv.cv.CvSetImagesForHaarClassifierCascade(Cv.CvHaarClassifierCascade@,CxCore.IplImage@,CxCore.IplImage@,CxCore.IplImage@,System.Double)">
            <summary>
            Assigns images to the hidden cascade
            </summary>
            <param name="cascade">Hidden Haar classifier cascade, created by </param>
            <param name="sum">Integral (sum) single-channel image of 32-bit integer format. This image as well as the                two subsequent images are used for fast feature evaluation and                brightness/contrast normalization. They all can be retrieved from input 8-bit                or floating point single-channel image using The function cvIntegral </param>
            <param name="sqsum">Square sum single-channel image of 64-bit floating-point format. </param>
            <param name="tilted_sum">Tilted sum single-channel image of 32-bit integer format. </param>
            <param name="scale">Window scale for the cascade. If scale scale </param>
        </member>
        <member name="M:Cv.cv.CvSetImagesForHaarClassifierCascade(Cv.CvHaarClassifierCascade@,CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,System.Double)">
            <summary>
            Assigns images to the hidden cascade
            </summary>
            <param name="cascade">Hidden Haar classifier cascade, created by </param>
            <param name="sum">Integral (sum) single-channel image of 32-bit integer format. This image as well as the                two subsequent images are used for fast feature evaluation and                brightness/contrast normalization. They all can be retrieved from input 8-bit                or floating point single-channel image using The function cvIntegral </param>
            <param name="sqsum">Square sum single-channel image of 64-bit floating-point format. </param>
            <param name="tilted_sum">Tilted sum single-channel image of 32-bit integer format. </param>
            <param name="scale">Window scale for the cascade. If scale scale </param>
        </member>
        <member name="M:Cv.cv.CvSetImagesForHaarClassifierCascade(Cv.CvHaarClassifierCascade@,CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvSeq@,System.Double)">
            <summary>
            Assigns images to the hidden cascade
            </summary>
            <param name="cascade">Hidden Haar classifier cascade, created by </param>
            <param name="sum">Integral (sum) single-channel image of 32-bit integer format. This image as well as the                two subsequent images are used for fast feature evaluation and                brightness/contrast normalization. They all can be retrieved from input 8-bit                or floating point single-channel image using The function cvIntegral </param>
            <param name="sqsum">Square sum single-channel image of 64-bit floating-point format. </param>
            <param name="tilted_sum">Tilted sum single-channel image of 32-bit integer format. </param>
            <param name="scale">Window scale for the cascade. If scale scale </param>
        </member>
        <member name="M:Cv.cv.CvProjectPoints2(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Projects 3D points to image plane
            </summary>
            <param name="object_points">The array of object points, 3xN or Nx3,                     where N is the number of points in the view. </param>
            <param name="rotation_vector">The rotation vector, 1x3 or 3x1. </param>
            <param name="translation_vector">The translation vector, 1x3 or 3x1. </param>
            <param name="intrinsic_matrix">The camera matrix (A) [fx 0 cx; 0 fy cy; 0 0 1]. </param>
            <param name="distortion_coeffs">The vector of distortion coefficients, 4x1 or 1x4                         [k </param>
            <param name="image_points">The output array of image points, 2xN or Nx2,                    where N is the total number of points in the view. </param>
            <param name="dpdrot">Optional Nx3 matrix of derivatives of image points with respect to components of the rotation vector. </param>
            <param name="dpdt">Optional Nx3 matrix of derivatives of image points w.r.t. components of the translation vector. </param>
            <param name="dpdf">Optional Nx2 matrix of derivatives of image points w.r.t. fx and fy. </param>
            <param name="dpdc">Optional Nx2 matrix of derivatives of image points w.r.t. cx and cy. </param>
            <param name="dpddist">Optional Nx4 matrix of derivatives of image points w.r.t. distortion coefficients. </param>
        </member>
        <member name="M:Cv.cv.CvProjectPoints2(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Projects 3D points to image plane
            </summary>
            <param name="object_points">The array of object points, 3xN or Nx3,                     where N is the number of points in the view. </param>
            <param name="rotation_vector">The rotation vector, 1x3 or 3x1. </param>
            <param name="translation_vector">The translation vector, 1x3 or 3x1. </param>
            <param name="intrinsic_matrix">The camera matrix (A) [fx 0 cx; 0 fy cy; 0 0 1]. </param>
            <param name="distortion_coeffs">The vector of distortion coefficients, 4x1 or 1x4                         [k </param>
            <param name="image_points">The output array of image points, 2xN or Nx2,                    where N is the total number of points in the view. </param>
            <param name="dpdrot">Optional Nx3 matrix of derivatives of image points with respect to components of the rotation vector. </param>
            <param name="dpdt">Optional Nx3 matrix of derivatives of image points w.r.t. components of the translation vector. </param>
            <param name="dpdf">Optional Nx2 matrix of derivatives of image points w.r.t. fx and fy. </param>
            <param name="dpdc">Optional Nx2 matrix of derivatives of image points w.r.t. cx and cy. </param>
        </member>
        <member name="M:Cv.cv.CvProjectPoints2(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Projects 3D points to image plane
            </summary>
            <param name="object_points">The array of object points, 3xN or Nx3,                     where N is the number of points in the view. </param>
            <param name="rotation_vector">The rotation vector, 1x3 or 3x1. </param>
            <param name="translation_vector">The translation vector, 1x3 or 3x1. </param>
            <param name="intrinsic_matrix">The camera matrix (A) [fx 0 cx; 0 fy cy; 0 0 1]. </param>
            <param name="distortion_coeffs">The vector of distortion coefficients, 4x1 or 1x4                         [k </param>
            <param name="image_points">The output array of image points, 2xN or Nx2,                    where N is the total number of points in the view. </param>
            <param name="dpdrot">Optional Nx3 matrix of derivatives of image points with respect to components of the rotation vector. </param>
            <param name="dpdt">Optional Nx3 matrix of derivatives of image points w.r.t. components of the translation vector. </param>
            <param name="dpdf">Optional Nx2 matrix of derivatives of image points w.r.t. fx and fy. </param>
        </member>
        <member name="M:Cv.cv.CvProjectPoints2(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Projects 3D points to image plane
            </summary>
            <param name="object_points">The array of object points, 3xN or Nx3,                     where N is the number of points in the view. </param>
            <param name="rotation_vector">The rotation vector, 1x3 or 3x1. </param>
            <param name="translation_vector">The translation vector, 1x3 or 3x1. </param>
            <param name="intrinsic_matrix">The camera matrix (A) [fx 0 cx; 0 fy cy; 0 0 1]. </param>
            <param name="distortion_coeffs">The vector of distortion coefficients, 4x1 or 1x4                         [k </param>
            <param name="image_points">The output array of image points, 2xN or Nx2,                    where N is the total number of points in the view. </param>
            <param name="dpdrot">Optional Nx3 matrix of derivatives of image points with respect to components of the rotation vector. </param>
            <param name="dpdt">Optional Nx3 matrix of derivatives of image points w.r.t. components of the translation vector. </param>
        </member>
        <member name="M:Cv.cv.CvProjectPoints2(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Projects 3D points to image plane
            </summary>
            <param name="object_points">The array of object points, 3xN or Nx3,                     where N is the number of points in the view. </param>
            <param name="rotation_vector">The rotation vector, 1x3 or 3x1. </param>
            <param name="translation_vector">The translation vector, 1x3 or 3x1. </param>
            <param name="intrinsic_matrix">The camera matrix (A) [fx 0 cx; 0 fy cy; 0 0 1]. </param>
            <param name="distortion_coeffs">The vector of distortion coefficients, 4x1 or 1x4                         [k </param>
            <param name="image_points">The output array of image points, 2xN or Nx2,                    where N is the total number of points in the view. </param>
            <param name="dpdrot">Optional Nx3 matrix of derivatives of image points with respect to components of the rotation vector. </param>
        </member>
        <member name="M:Cv.cv.CvProjectPoints2(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Projects 3D points to image plane
            </summary>
            <param name="object_points">The array of object points, 3xN or Nx3,                     where N is the number of points in the view. </param>
            <param name="rotation_vector">The rotation vector, 1x3 or 3x1. </param>
            <param name="translation_vector">The translation vector, 1x3 or 3x1. </param>
            <param name="intrinsic_matrix">The camera matrix (A) [fx 0 cx; 0 fy cy; 0 0 1]. </param>
            <param name="distortion_coeffs">The vector of distortion coefficients, 4x1 or 1x4                         [k </param>
            <param name="image_points">The output array of image points, 2xN or Nx2,                    where N is the total number of points in the view. </param>
        </member>
        <member name="M:Cv.cv.CvFindHomography(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Finds perspective transformation between two planes
            </summary>
            <param name="src_points">Point coordinates in the original plane, 2xN, Nx2, 3xN or Nx3 array                  (the latter two are for representation in homogenious coordinates),                  where N is the number of points. </param>
            <param name="dst_points">Point coordinates in the destination plane, 2xN, Nx2, 3xN or Nx3 array                  (the latter two are for representation in homogenious coordinates) </param>
            <param name="homography">Output 3x3 homography matrix. </param>
        </member>
        <member name="M:Cv.cv.CvCalibrateCamera2(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,CxCore.CvSize,CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,System.Int32)">
            <summary>
            Finds intrinsic and extrinsic camera parameters using calibration pattern
            </summary>
            <param name="object_points">The joint matrix of object points, 3xN or Nx3,                     where N is the total number of points in all views. </param>
            <param name="image_points">The joint matrix of corresponding image points, 2xN or Nx2,                    where N is the total number of points in all views. </param>
            <param name="point_counts">Vector containing numbers of points in each particular view,                    1xM or Mx1, where M is the number of a scene views. </param>
            <param name="image_size">Size of the image, used only to initialize intrinsic camera matrix. </param>
            <param name="intrinsic_matrix">The output camera matrix (A) [fx 0 cx; 0 fy cy; 0 0 1].                  If CV_CALIB_USE_INTRINSIC_GUESS CV_CALIB_FIX_ASPECT_RATION fx, fy, cx, cy </param>
            <param name="distortion_coeffs">The output 4x1 or 1x4 vector of distortion coefficients                         [k </param>
            <param name="rotation_vectors">The output 3xM or Mx3 array of rotation vectors                        (compact representation of rotation matrices,                        see </param>
            <param name="translation_vectors">The output 3xM or Mx3 array of translation vectors. </param>
            <param name="flags">Different flags, may be 0 or combination of the following values: CV_CALIB_USE_INTRINSIC_GUESS intrinsic_matrix fx, fy, cx, cy (cx, cy) image_size CV_CALIB_FIX_PRINCIPAL_POINT CV_CALIB_USE_INTRINSIC_GUESS CV_CALIB_FIX_ASPECT_RATIO fx fy fx/fy intrinsic_matrix (fx, fy) CV_CALIB_USE_INTRINSIC_GUESS fx, fy CV_CALIB_ZERO_TANGENT_DIST </param>
        </member>
        <member name="M:Cv.cv.CvCalibrateCamera2(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,CxCore.CvSize,CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Finds intrinsic and extrinsic camera parameters using calibration pattern
            </summary>
            <param name="object_points">The joint matrix of object points, 3xN or Nx3,                     where N is the total number of points in all views. </param>
            <param name="image_points">The joint matrix of corresponding image points, 2xN or Nx2,                    where N is the total number of points in all views. </param>
            <param name="point_counts">Vector containing numbers of points in each particular view,                    1xM or Mx1, where M is the number of a scene views. </param>
            <param name="image_size">Size of the image, used only to initialize intrinsic camera matrix. </param>
            <param name="intrinsic_matrix">The output camera matrix (A) [fx 0 cx; 0 fy cy; 0 0 1].                  If CV_CALIB_USE_INTRINSIC_GUESS CV_CALIB_FIX_ASPECT_RATION fx, fy, cx, cy </param>
            <param name="distortion_coeffs">The output 4x1 or 1x4 vector of distortion coefficients                         [k </param>
            <param name="rotation_vectors">The output 3xM or Mx3 array of rotation vectors                        (compact representation of rotation matrices,                        see </param>
            <param name="translation_vectors">The output 3xM or Mx3 array of translation vectors. </param>
        </member>
        <member name="M:Cv.cv.CvCalibrateCamera2(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,CxCore.CvSize,CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Finds intrinsic and extrinsic camera parameters using calibration pattern
            </summary>
            <param name="object_points">The joint matrix of object points, 3xN or Nx3,                     where N is the total number of points in all views. </param>
            <param name="image_points">The joint matrix of corresponding image points, 2xN or Nx2,                    where N is the total number of points in all views. </param>
            <param name="point_counts">Vector containing numbers of points in each particular view,                    1xM or Mx1, where M is the number of a scene views. </param>
            <param name="image_size">Size of the image, used only to initialize intrinsic camera matrix. </param>
            <param name="intrinsic_matrix">The output camera matrix (A) [fx 0 cx; 0 fy cy; 0 0 1].                  If CV_CALIB_USE_INTRINSIC_GUESS CV_CALIB_FIX_ASPECT_RATION fx, fy, cx, cy </param>
            <param name="distortion_coeffs">The output 4x1 or 1x4 vector of distortion coefficients                         [k </param>
            <param name="rotation_vectors">The output 3xM or Mx3 array of rotation vectors                        (compact representation of rotation matrices,                        see </param>
        </member>
        <member name="M:Cv.cv.CvCalibrateCamera2(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,CxCore.CvSize,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Finds intrinsic and extrinsic camera parameters using calibration pattern
            </summary>
            <param name="object_points">The joint matrix of object points, 3xN or Nx3,                     where N is the total number of points in all views. </param>
            <param name="image_points">The joint matrix of corresponding image points, 2xN or Nx2,                    where N is the total number of points in all views. </param>
            <param name="point_counts">Vector containing numbers of points in each particular view,                    1xM or Mx1, where M is the number of a scene views. </param>
            <param name="image_size">Size of the image, used only to initialize intrinsic camera matrix. </param>
            <param name="intrinsic_matrix">The output camera matrix (A) [fx 0 cx; 0 fy cy; 0 0 1].                  If CV_CALIB_USE_INTRINSIC_GUESS CV_CALIB_FIX_ASPECT_RATION fx, fy, cx, cy </param>
            <param name="distortion_coeffs">The output 4x1 or 1x4 vector of distortion coefficients                         [k </param>
        </member>
        <member name="M:Cv.cv.CvFindExtrinsicCameraParams2(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Finds extrinsic camera parameters for particular view
            </summary>
            <param name="object_points">The array of object points, 3xN or Nx3,                     where N is the number of points in the view. </param>
            <param name="image_points">The array of corresponding image points, 2xN or Nx2,                    where N is the number of points in the view. </param>
            <param name="intrinsic_matrix">The camera matrix (A) [fx 0 cx; 0 fy cy; 0 0 1]. </param>
            <param name="distortion_coeffs">The vector of distortion coefficients, 4x1 or 1x4                         [k </param>
            <param name="rotation_vector">The output 3x1 or 1x3 rotation vector                       (compact representation of a rotation matrix,                       see </param>
            <param name="translation_vector">The output 3x1 or 1x3 translation vector. </param>
        </member>
        <member name="M:Cv.cv.CvRodrigues2(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Converts rotation matrix to rotation vector or vice versa
            </summary>
            <param name="src">The input rotation vector (3x1 or 1x3) or rotation matrix (3x3). </param>
            <param name="dst">The output rotation matrix (3x3) or rotation vector (3x1 or 1x3), respectively. </param>
            <param name="jacobian">Optional output Jacobian matrix, 3x9 or 9x3 - partial derivatives of                the output array components w.r.t the input array components. </param>
        </member>
        <member name="M:Cv.cv.CvRodrigues2(CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Converts rotation matrix to rotation vector or vice versa
            </summary>
            <param name="src">The input rotation vector (3x1 or 1x3) or rotation matrix (3x3). </param>
            <param name="dst">The output rotation matrix (3x3) or rotation vector (3x1 or 1x3), respectively. </param>
        </member>
        <member name="M:Cv.cv.CvUndistort2(CxCore.IplImage@,CxCore.IplImage@,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Transforms image to compensate lens distortion
            </summary>
            <param name="src">The input (distorted) image. </param>
            <param name="dst">The output (corrected) image. </param>
            <param name="intrinsic_matrix">The camera matrix (A) [fx 0 cx; 0 fy cy; 0 0 1]. </param>
            <param name="distortion_coeffs">The vector of distortion coefficients, 4x1 or 1x4                         [k </param>
        </member>
        <member name="M:Cv.cv.CvUndistort2(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Transforms image to compensate lens distortion
            </summary>
            <param name="src">The input (distorted) image. </param>
            <param name="dst">The output (corrected) image. </param>
            <param name="intrinsic_matrix">The camera matrix (A) [fx 0 cx; 0 fy cy; 0 0 1]. </param>
            <param name="distortion_coeffs">The vector of distortion coefficients, 4x1 or 1x4                         [k </param>
        </member>
        <member name="M:Cv.cv.CvUndistort2(CxCore.CvSeq@,CxCore.CvSeq@,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Transforms image to compensate lens distortion
            </summary>
            <param name="src">The input (distorted) image. </param>
            <param name="dst">The output (corrected) image. </param>
            <param name="intrinsic_matrix">The camera matrix (A) [fx 0 cx; 0 fy cy; 0 0 1]. </param>
            <param name="distortion_coeffs">The vector of distortion coefficients, 4x1 or 1x4                         [k </param>
        </member>
        <member name="M:Cv.cv.CvInitUndistortMap(CxCore.CvMat@,CxCore.CvMat@,CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Computes undistorion map
            </summary>
            <param name="intrinsic_matrix">The camera matrix (A) [fx 0 cx; 0 fy cy; 0 0 1]. </param>
            <param name="distortion_coeffs">The vector of distortion coefficients, 4x1 or 1x4                         [k </param>
            <param name="mapx">The output array of x-coordinates of the map. </param>
            <param name="mapy">The output array of y-coordinates of the map. </param>
        </member>
        <member name="M:Cv.cv.CvInitUndistortMap(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Computes undistorion map
            </summary>
            <param name="intrinsic_matrix">The camera matrix (A) [fx 0 cx; 0 fy cy; 0 0 1]. </param>
            <param name="distortion_coeffs">The vector of distortion coefficients, 4x1 or 1x4                         [k </param>
            <param name="mapx">The output array of x-coordinates of the map. </param>
            <param name="mapy">The output array of y-coordinates of the map. </param>
        </member>
        <member name="M:Cv.cv.CvInitUndistortMap(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Computes undistorion map
            </summary>
            <param name="intrinsic_matrix">The camera matrix (A) [fx 0 cx; 0 fy cy; 0 0 1]. </param>
            <param name="distortion_coeffs">The vector of distortion coefficients, 4x1 or 1x4                         [k </param>
            <param name="mapx">The output array of x-coordinates of the map. </param>
            <param name="mapy">The output array of y-coordinates of the map. </param>
        </member>
        <member name="M:Cv.cv.CvFindChessboardCorners(CxCore.IplImage@,CxCore.CvSize,System.IntPtr,System.Int32@,System.Int32)">
            <summary>
            Finds positions of internal corners of the chessboard
            </summary>
            <param name="image">Source chessboard view; it must be 8-bit grayscale or color image. </param>
            <param name="pattern_size">The number of inner corners per chessboard row and column. </param>
            <param name="corners">The output array of corners detected. </param>
            <param name="corner_count">The output corner counter. If it is not NULL, the function storesthere the number of corners found. </param>
            <param name="flags">Various operation flags, can be 0 or a combination of the following values: CV_CALIB_CB_ADAPTIVE_THRESH CV_CALIB_CB_NORMALIZE_IMAGE CV_CALIB_CB_FILTER_QUADS </param>
        </member>
        <member name="M:Cv.cv.CvFindChessboardCorners(CxCore.IplImage@,CxCore.CvSize,System.IntPtr,System.Int32@)">
            <summary>
            Finds positions of internal corners of the chessboard
            </summary>
            <param name="image">Source chessboard view; it must be 8-bit grayscale or color image. </param>
            <param name="pattern_size">The number of inner corners per chessboard row and column. </param>
            <param name="corners">The output array of corners detected. </param>
            <param name="corner_count">The output corner counter. If it is not NULL, the function storesthere the number of corners found. </param>
        </member>
        <member name="M:Cv.cv.CvFindChessboardCorners(CxCore.IplImage@,CxCore.CvSize,System.IntPtr)">
            <summary>
            Finds positions of internal corners of the chessboard
            </summary>
            <param name="image">Source chessboard view; it must be 8-bit grayscale or color image. </param>
            <param name="pattern_size">The number of inner corners per chessboard row and column. </param>
            <param name="corners">The output array of corners detected. </param>
        </member>
        <member name="M:Cv.cv.CvDrawChessboardCorners(CxCore.IplImage@,CxCore.CvSize,System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Renders the detected chessboard corners
            </summary>
            <param name="image">The destination image; it must be 8-bit color image. </param>
            <param name="pattern_size">The number of inner corners per chessboard row and column. </param>
            <param name="corners">The array of corners detected. </param>
            <param name="count">The number of corners. </param>
            <param name="pattern_was_found">Indicates whether the complete board was found (?0) or not (=0). One may just                     pass the return value </param>
        </member>
        <member name="M:Cv.cv.CvCreatePOSITObject(CxCore.CvPoint3D32f@,System.Int32)">
            <summary>
            Initializes structure containing object information
            </summary>
            <param name="points">Pointer to the points of the 3D object model. </param>
            <param name="point_count">Number of object points. </param>
        </member>
        <member name="M:Cv.cv.CvPOSIT(Cv.CvPOSITObject@,CxCore.CvPoint2D32f@,System.Double,CxCore.CvTermCriteria,System.Single[],System.Single[])">
            <summary>
            Implements POSIT algorithm
            </summary>
            <param name="posit_object">Pointer to the object structure. </param>
            <param name="image_points">Pointer to the object points projections on the 2D image plane. </param>
            <param name="focal_length">Focal length of the camera used. </param>
            <param name="criteria">Termination criteria of the iterative POSIT algorithm. </param>
            <param name="rotation_matrix">Matrix of rotations. </param>
            <param name="translation_vector">Translation vector. </param>
        </member>
        <member name="M:Cv.cv.CvReleasePOSITObject(Cv.CvPOSITObject@)">
            <summary>
            Deallocates 3D object structure
            </summary>
            <param name="posit_object">Double pointer to CvPOSIT </param>
        </member>
        <member name="M:Cv.cv.CvCalcImageHomography(System.Single[],CxCore.CvPoint3D32f@,System.Single[],System.Single[])">
            <summary>
            Calculates homography matrix for oblong planar object (e.g. arm)
            </summary>
            <param name="line">the main object axis direction (vector (dx,dy,dz)). </param>
            <param name="center">object center ((cx,cy,cz)). </param>
            <param name="intrinsic">intrinsic camera parameters (3x3 matrix). </param>
            <param name="homography">output homography matrix (3x3). </param>
        </member>
        <member name="M:Cv.cv.CvFindFundamentalMat(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,System.Int32,System.Double,System.Double,CxCore.CvMat@)">
            <summary>
            Calculates fundamental matrix from corresponding points in two images
            </summary>
            <param name="points1">points1</param>
            <param name="points2">points2</param>
            <param name="fundamental_matrix">fundamental_matrix</param>
            <param name="method">method</param>
            <param name="param1">param1</param>
            <param name="param2">param2</param>
            <param name="status">status</param>
        </member>
        <member name="M:Cv.cv.CvFindFundamentalMat(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,System.Int32,System.Double,System.Double)">
            <summary>
            Calculates fundamental matrix from corresponding points in two images
            </summary>
            <param name="points1">points1</param>
            <param name="points2">points2</param>
            <param name="fundamental_matrix">fundamental_matrix</param>
            <param name="method">method</param>
            <param name="param1">param1</param>
            <param name="param2">param2</param>
        </member>
        <member name="M:Cv.cv.CvFindFundamentalMat(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,System.Int32,System.Double)">
            <summary>
            Calculates fundamental matrix from corresponding points in two images
            </summary>
            <param name="points1">points1</param>
            <param name="points2">points2</param>
            <param name="fundamental_matrix">fundamental_matrix</param>
            <param name="method">method</param>
            <param name="param1">param1</param>
        </member>
        <member name="M:Cv.cv.CvFindFundamentalMat(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@,System.Int32)">
            <summary>
            Calculates fundamental matrix from corresponding points in two images
            </summary>
            <param name="points1">points1</param>
            <param name="points2">points2</param>
            <param name="fundamental_matrix">fundamental_matrix</param>
            <param name="method">method</param>
        </member>
        <member name="M:Cv.cv.CvFindFundamentalMat(CxCore.CvMat@,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Calculates fundamental matrix from corresponding points in two images
            </summary>
            <param name="points1">points1</param>
            <param name="points2">points2</param>
            <param name="fundamental_matrix">fundamental_matrix</param>
        </member>
        <member name="M:Cv.cv.CvComputeCorrespondEpilines(CxCore.CvMat@,System.Int32,CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            For points in one image of stereo pair computes the corresponding epilines in the other image
            </summary>
            <param name="points">The input points. 2xN, Nx2, 3xN Nx3 N 1xN Nx1 </param>
            <param name="which_image">Index of the image (1 or 2) that contains the points </param>
            <param name="fundamental_matrix">Fundamental matrix </param>
            <param name="correspondent_lines">Computed epilines, 3xN Nx3 </param>
        </member>
        <member name="M:Cv.cv.CvCreateSubdivDelaunay2D(CxCore.CvRect,CxCore.CvMemStorage@)">
            <summary>
            Creates empty Delaunay triangulation
            </summary>
            <param name="rect">Rectangle that includes all the 2d points that are to be added to subdivision. </param>
            <param name="storage">Container for subdivision. </param>
        </member>
        <member name="M:Cv.cv.CvSubdiv2DNextEdge(System.UInt32)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="edge">edge</param>
        </member>
        <member name="M:Cv.cv.CvSubdiv2DRotateEdge(System.UInt32,System.Int32)">
            <summary>
            Returns another edge of the same quad-edge
            </summary>
            <param name="edge">Subdivision edge (not a quad-edge) </param>
            <param name="rotate">rotate</param>
        </member>
        <member name="M:Cv.cv.CvSubdiv2DSymEdge(System.UInt32)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="edge">edge</param>
        </member>
        <member name="M:Cv.cv.CvSubdiv2DGetEdge(System.UInt32@,Cv.CvNextEdgeType)">
            <summary>
            Returns one of edges related to given
            </summary>
            <param name="edge">Subdivision edge (not a quad-edge) </param>
            <param name="type">Specifies, which of related edges to return, one of: eOnext e eDnext eRnext eLnext eLnext eRnext eOnext eDnext </param>
        </member>
        <member name="M:Cv.cv.CvSubdiv2DEdgeOrg(System.UInt32)">
            <summary>
            Returns edge origin
            </summary>
            <param name="edge">Subdivision edge (not a quad-edge) </param>
        </member>
        <member name="M:Cv.cv.CvSubdiv2DEdgeDst(System.UInt32)">
            <summary>
            Returns edge destination
            </summary>
            <param name="edge">Subdivision edge (not a quad-edge) </param>
        </member>
        <member name="M:Cv.cv.CvTriangleArea(CxCore.CvPoint2D32f,CxCore.CvPoint2D32f,CxCore.CvPoint2D32f)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="a">a</param>
            <param name="b">b</param>
            <param name="c">c</param>
        </member>
        <member name="M:Cv.cv.CvContourPerimeter(System.IntPtr)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="contour">contour</param>
        </member>
        <member name="T:MachineLearning.CvKNearest">
            <summary>
            K Nearest Neighbors model
            </summary>
        </member>
        <member name="M:MachineLearning.CvKNearest.Finalize">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvKNearest.Dispose">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvKNearest.#ctor(CxCore.CvMat,CxCore.CvMat,System.Boolean,System.Int32)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_is_regression">No comment available for this member. Please check the openCV documenation.</param>
            <param name="max_k">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvKNearest.#ctor">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvKNearest.#ctor(CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,System.Boolean,System.Int32)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_sample_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_is_regression">No comment available for this member. Please check the openCV documenation.</param>
            <param name="max_k">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvKNearest.#ctor(CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,System.Boolean)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_sample_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_is_regression">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvKNearest.#ctor(CxCore.CvMat,CxCore.CvMat,CxCore.CvMat)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_sample_idx">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvKNearest.#ctor(CxCore.CvMat,CxCore.CvMat)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvKNearest.train(CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,System.Boolean,System.Int32,System.Boolean)">
            <summary>
            Trains the model
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_sample_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="is_regression">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_max_k">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_update_base">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvKNearest.train(CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,System.Boolean,System.Int32)">
            <summary>
            Trains the model
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_sample_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="is_regression">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_max_k">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvKNearest.train(CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,System.Boolean)">
            <summary>
            Trains the model
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_sample_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="is_regression">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvKNearest.train(CxCore.CvMat,CxCore.CvMat,CxCore.CvMat)">
            <summary>
            Trains the model
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_sample_idx">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvKNearest.train(CxCore.CvMat,CxCore.CvMat)">
            <summary>
            Trains the model
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvKNearest.find_nearest(CxCore.CvMat,System.Int32,CxCore.CvMat,System.IntPtr,CxCore.CvMat,CxCore.CvMat)">
            <summary>
            Finds the neighbors for the input vectors
            </summary>
            <param name="_samples">No comment available for this member. Please check the openCV documenation.</param>
            <param name="k">No comment available for this member. Please check the openCV documenation.</param>
            <param name="results">No comment available for this member. Please check the openCV documenation.</param>
            <param name="neighbors">No comment available for this member. Please check the openCV documenation.</param>
            <param name="neighbor_responses">No comment available for this member. Please check the openCV documenation.</param>
            <param name="dist">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvKNearest.find_nearest(CxCore.CvMat,System.Int32,CxCore.CvMat,System.IntPtr,CxCore.CvMat)">
            <summary>
            Finds the neighbors for the input vectors
            </summary>
            <param name="_samples">No comment available for this member. Please check the openCV documenation.</param>
            <param name="k">No comment available for this member. Please check the openCV documenation.</param>
            <param name="results">No comment available for this member. Please check the openCV documenation.</param>
            <param name="neighbors">No comment available for this member. Please check the openCV documenation.</param>
            <param name="neighbor_responses">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvKNearest.find_nearest(CxCore.CvMat,System.Int32,CxCore.CvMat,System.IntPtr)">
            <summary>
            Finds the neighbors for the input vectors
            </summary>
            <param name="_samples">No comment available for this member. Please check the openCV documenation.</param>
            <param name="k">No comment available for this member. Please check the openCV documenation.</param>
            <param name="results">No comment available for this member. Please check the openCV documenation.</param>
            <param name="neighbors">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvKNearest.find_nearest(CxCore.CvMat,System.Int32,CxCore.CvMat)">
            <summary>
            Finds the neighbors for the input vectors
            </summary>
            <param name="_samples">No comment available for this member. Please check the openCV documenation.</param>
            <param name="k">No comment available for this member. Please check the openCV documenation.</param>
            <param name="results">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvKNearest.find_nearest(CxCore.CvMat,System.Int32)">
            <summary>
            Finds the neighbors for the input vectors
            </summary>
            <param name="_samples">No comment available for this member. Please check the openCV documenation.</param>
            <param name="k">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvKNearest.clear">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvKNearest.get_max_k">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvKNearest.get_var_count">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvKNearest.get_sample_count">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvKNearest.is_regression">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="T:MachineLearning.CvANN_MLP_TrainParams">
            <summary>
            Parameters of MLP training algorithm
            </summary>
        </member>
        <member name="F:MachineLearning.CvANN_MLP_TrainParams.swigCMemOwn">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvANN_MLP_TrainParams.Finalize">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvANN_MLP_TrainParams.Dispose">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvANN_MLP_TrainParams.#ctor">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvANN_MLP_TrainParams.#ctor(CxCore.CvTermCriteria,System.Int32,System.Double,System.Double)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="term_crit">The termination criteria for the training algorithm. It identifies how many iterations is done by the algorithm (for sequential backpropagation algorithm the number is multiplied by the size of the training set) and how much the weights could change between the iterations to make the algorithm continue. </param>
            <param name="train_method">The training algoithm to use; can be one of CvANN_MLP_TrainParams::BACKPROP (sequential backpropagation algorithm) or CvANN_MLP_TrainParams::RPROP (RPROP algorithm, default value). </param>
            <param name="param1">No comment available for this member. Please check the openCV documenation.</param>
            <param name="param2">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvANN_MLP_TrainParams.#ctor(CxCore.CvTermCriteria,System.Int32,System.Double)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="term_crit">The termination criteria for the training algorithm. It identifies how many iterations is done by the algorithm (for sequential backpropagation algorithm the number is multiplied by the size of the training set) and how much the weights could change between the iterations to make the algorithm continue. </param>
            <param name="train_method">The training algoithm to use; can be one of CvANN_MLP_TrainParams::BACKPROP (sequential backpropagation algorithm) or CvANN_MLP_TrainParams::RPROP (RPROP algorithm, default value). </param>
            <param name="param1">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="F:MachineLearning.CvANN_MLP_TrainParams.BACKPROP">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:MachineLearning.CvANN_MLP_TrainParams.RPROP">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="P:MachineLearning.CvANN_MLP_TrainParams.term_crit">
            <summary>
            The termination criteria for the training algorithm. It identifies how many iterations is done by the algorithm (for sequential backpropagation algorithm the number is multiplied by the size of the training set) and how much the weights could change between the iterations to make the algorithm continue. 
            </summary>
        </member>
        <member name="P:MachineLearning.CvANN_MLP_TrainParams.train_method">
            <summary>
            The training algoithm to use; can be one of CvANN_MLP_TrainParams::BACKPROP (sequential backpropagation algorithm) or CvANN_MLP_TrainParams::RPROP (RPROP algorithm, default value). 
            </summary>
        </member>
        <member name="P:MachineLearning.CvANN_MLP_TrainParams.bp_dw_scale">
            <summary>
            (Backpropagation only): The coefficient to multiply the computed weight gradient by. The recommended value is about 0.1 . The parameter can be set via param1 of the constructor. 
            </summary>
        </member>
        <member name="P:MachineLearning.CvANN_MLP_TrainParams.bp_moment_scale">
            <summary>
            (Backpropagation only): The coefficient to multiply the difference between weights on the 2 previous iterations. This parameter provides some inertia to smooth the random fluctuations of the weights. It can vary from 0 (the feature is disabled) to 1 and beyond. The value 0.1 or so is good enough. The parameter can be set via param2 of the constructor. 
            </summary>
        </member>
        <member name="P:MachineLearning.CvANN_MLP_TrainParams.rp_dw0">
            <summary>
            (RPROP only): Initial magnitude of the weight delta. The default value is 0.1 . This parameter can be set via param1 of the constructor. 
            </summary>
        </member>
        <member name="P:MachineLearning.CvANN_MLP_TrainParams.rp_dw_plus">
            <summary>
            (RPROP only): The increase factor for the weight delta. It must be >1, default value is 1.2 that should work well in most cases, according to the algorithm's author. The parameter can only be changed explicitly by modifying the structure member. 
            </summary>
        </member>
        <member name="P:MachineLearning.CvANN_MLP_TrainParams.rp_dw_minus">
            <summary>
            (RPROP only): The decrease factor for the weight delta. It must be smaller 1, default value is 0.5 that should work well in most cases, according to the algorithm's author. The parameter can only be changed explicitly by modifying the structure member. 
            </summary>
        </member>
        <member name="P:MachineLearning.CvANN_MLP_TrainParams.rp_dw_min">
            <summary>
            (RPROP only): The minimum value of the weight delta. It must be >0, the default value is FLT_EPSILON . The parameter can be set via param2 of the constructor. 
            </summary>
        </member>
        <member name="P:MachineLearning.CvANN_MLP_TrainParams.rp_dw_max">
            <summary>
            (RPROP only): The maximum value of the weight delta. It must be >1, the default value is 50 . The parameter can only be changed explicitly by modifying the structure member. 
            </summary>
        </member>
        <member name="T:MachineLearning.CvBoostTree">
            <summary>
            Weak tree classifier
            </summary>
        </member>
        <member name="T:MachineLearning.CvDTree">
            <summary>
            Decision tree
            </summary>
        </member>
        <member name="M:MachineLearning.CvDTree.Finalize">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvDTree.Dispose">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvDTree.train(CxCore.CvMat,System.Int32,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,MachineLearning.CvDTreeParams)">
            <summary>
            Trains decision tree
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_tflag">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_type">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_missing_mask">No comment available for this member. Please check the openCV documenation.</param>
            <param name="arg7">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvDTree.#ctor">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvDTree.train(CxCore.CvMat,System.Int32,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,MachineLearning.CvDTreeParams)">
            <summary>
            Trains decision tree
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_tflag">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_sample_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_type">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_missing_mask">No comment available for this member. Please check the openCV documenation.</param>
            <param name="arg7">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvDTree.train(CxCore.CvMat,System.Int32,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat)">
            <summary>
            Trains decision tree
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_tflag">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_sample_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_type">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_missing_mask">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvDTree.train(CxCore.CvMat,System.Int32,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat)">
            <summary>
            Trains decision tree
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_tflag">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_sample_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_type">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvDTree.train(CxCore.CvMat,System.Int32,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat)">
            <summary>
            Trains decision tree
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_tflag">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_sample_idx">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvDTree.train(CxCore.CvMat,System.Int32,CxCore.CvMat,CxCore.CvMat)">
            <summary>
            Trains decision tree
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_tflag">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_idx">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvDTree.train(CxCore.CvMat,System.Int32,CxCore.CvMat)">
            <summary>
            Trains decision tree
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_tflag">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvDTree.predict(CxCore.CvMat,CxCore.CvMat,System.Boolean)">
            <summary>
            Returns the leaf node of decision tree corresponding to the input vector
            </summary>
            <param name="_sample">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_missing_data_mask">No comment available for this member. Please check the openCV documenation.</param>
            <param name="preprocessed_input">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvDTree.predict(CxCore.CvMat,CxCore.CvMat)">
            <summary>
            Returns the leaf node of decision tree corresponding to the input vector
            </summary>
            <param name="_sample">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_missing_data_mask">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvDTree.predict(CxCore.CvMat)">
            <summary>
            Returns the leaf node of decision tree corresponding to the input vector
            </summary>
            <param name="_sample">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvDTree.get_var_importance">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvDTree.clear">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvDTree.get_root">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvDTree.get_pruned_tree_idx">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvDTree.get_data">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvBoostTree.Finalize">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvBoostTree.Dispose">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvBoostTree.#ctor">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvBoostTree.train(MachineLearning.CvDTreeTrainData,CxCore.CvMat,MachineLearning.CvBoost)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="subsample_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="ensemble">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvBoostTree.scale(System.Double)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="s">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvBoostTree.read(CxCore.CvFileStorage,CxCore.CvFileNode,MachineLearning.CvBoost,MachineLearning.CvDTreeTrainData)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="fs">No comment available for this member. Please check the openCV documenation.</param>
            <param name="node">No comment available for this member. Please check the openCV documenation.</param>
            <param name="ensemble">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_data">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvBoostTree.clear">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvBoostTree.train(CxCore.CvMat,System.Int32,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,MachineLearning.CvDTreeParams)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_tflag">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_sample_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_type">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_missing_mask">No comment available for this member. Please check the openCV documenation.</param>
            <param name="arg7">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvBoostTree.train(CxCore.CvMat,System.Int32,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_tflag">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_sample_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_type">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_missing_mask">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvBoostTree.train(CxCore.CvMat,System.Int32,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_tflag">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_sample_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_type">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvBoostTree.train(CxCore.CvMat,System.Int32,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_tflag">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_sample_idx">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvBoostTree.train(CxCore.CvMat,System.Int32,CxCore.CvMat,CxCore.CvMat)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_tflag">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_idx">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvBoostTree.train(CxCore.CvMat,System.Int32,CxCore.CvMat)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_tflag">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="T:CvTools.cvconvert">
            <summary>
            cvConvert adds support for data type conversion
            between managed and unmanaged memory and vise versa
            </summary>
        </member>
        <member name="M:CvTools.cvconvert.Array2DToPtr(System.Byte[][],System.Runtime.InteropServices.GCHandle[]@)">
            <summary>
            Converts a Jagged Array (array of arrays) to an IntPtr.
            The array can read and/or written in unmanaged dll.
            Internal memory managements expects to release the
            resourses after using. Simply make a variable GCHandel[] h
            without initalisation and pass to the function. After using 
            simply call ReleaseHandels(h).
            </summary>
            <param name="arr">2d Jagged Array</param>
            <param name="handles">Handle</param>
            <returns>IntPtr, like byte**</returns>
        </member>
        <member name="M:CvTools.cvconvert.Array2DToPtr(System.Int32[][],System.Runtime.InteropServices.GCHandle[]@)">
            <summary>
            Converts a Jagged Array (array of arrays) to an IntPtr.
            The array can read and/or written in unmanaged dll.
            Internal memory managements expects to release the
            resourses after using. Simply make a variable GCHandel[] h
            without initalisation and pass to the function. After using 
            simply call ReleaseHandels(h).
            </summary>
            <param name="arr">2d Jagged Array</param>
            <param name="handles">Handle</param>
            <returns>IntPtr, like int**</returns>
        </member>
        <member name="M:CvTools.cvconvert.Array2DToPtr(System.Single[][],System.Runtime.InteropServices.GCHandle[]@)">
            <summary>
            Converts a Jagged Array (array of arrays) to an IntPtr.
            The array can read and/or written in unmanaged dll.
            Internal memory managements expects to release the
            resourses after using. Simply make a variable GCHandel[] h
            without initalisation and pass to the function. After using 
            simply call ReleaseHandels(h).
            </summary>
            <param name="arr">2d Jagged Array</param>
            <param name="handles">Handle</param>
            <returns>IntPtr, like float**</returns>
        </member>
        <member name="M:CvTools.cvconvert.Array2DToPtr(System.Double[][],System.Runtime.InteropServices.GCHandle[]@)">
            <summary>
            Converts a Jagged Array (array of arrays) to an IntPtr.
            The array can read and/or written in unmanaged dll.
            Internal memory managements expects to release the
            resourses after using. Simply make a variable GCHandel[] h
            without initalisation and pass to the function. After using 
            simply call ReleaseHandels(h).
            </summary>
            <param name="arr">2d Jagged Array</param>
            <param name="handles">Handle</param>
            <returns>IntPtr, like double**</returns>
        </member>
        <member name="M:CvTools.cvconvert.Array2DToPtr(CxCore.CvPoint[][],System.Runtime.InteropServices.GCHandle[]@)">
            <summary>
            Converts a Jagged Array (array of arrays) to an IntPtr.
            The array can read and/or written in unmanaged dll.
            Internal memory managements expects to release the
            resourses after using. Simply make a variable GCHandel[] h
            without initalisation and pass to the function. After using 
            simply call ReleaseHandels(h).
            </summary>
            <param name="arr">2d Jagged Array</param>
            <param name="handles">Handle</param>
            <returns>IntPtr, like Point**</returns>
        </member>
        <member name="M:CvTools.cvconvert.ArrayToPtr(System.Byte[],System.Runtime.InteropServices.GCHandle@)">
            <summary>
            Converts a one dimensional array to an IntPtr.
            The array can read and/or written in unmanaged dll.
            Internal memory management expects to release the
            resourses after using. Simply make a variable GCHandel[] h
            without initalisation and pass to the function. After using call
            the pointer simply call ReleaseHandels(h).
            </summary>
            <param name="arr">1d Array</param>
            <param name="handle">Handle</param>
            <returns>IntPtr, like byte*</returns>
        </member>
        <member name="M:CvTools.cvconvert.ArrayToPtr(System.Int32[],System.Runtime.InteropServices.GCHandle@)">
            <summary>
            Converts a one dimensional array to an IntPtr.
            The array can read and/or written in unmanaged dll.
            Internal memory management expects to release the
            resourses after using. Simply make a variable GCHandel[] h
            without initalisation and pass to the function. After using call
            the pointer simply call ReleaseHandels(h).
            </summary>
            <param name="arr">1d Array</param>
            <param name="handle">Handle</param>
            <returns>IntPtr, like int*</returns>
        </member>
        <member name="M:CvTools.cvconvert.ArrayToPtr(System.Single[],System.Runtime.InteropServices.GCHandle@)">
            <summary>
            Converts a one dimensional array to an IntPtr.
            The array can read and/or written in unmanaged dll.
            Internal memory management expects to release the
            resourses after using. Simply make a variable GCHandel[] h
            without initalisation and pass to the function. After using call
            the pointer simply call ReleaseHandels(h).
            </summary>
            <param name="arr">1d Array</param>
            <param name="handle">Handle</param>
            <returns>IntPtr, like float*</returns>
        </member>
        <member name="M:CvTools.cvconvert.ArrayToPtr(System.Double[],System.Runtime.InteropServices.GCHandle@)">
            <summary>
            Converts a one dimensional array to an IntPtr.
            The array can read and/or written in unmanaged dll.
            Internal memory management expects to release the
            resourses after using. Simply make a variable GCHandel[] h
            without initalisation and pass to the function. After using call
            the pointer simply call ReleaseHandels(h).
            </summary>
            <param name="arr">1d Array</param>
            <param name="handle">Handle</param>
            <returns>IntPtr, like double*</returns>
        </member>
        <member name="M:CvTools.cvconvert.ArrayToPtr(CxCore.CvPoint2D32f[],System.Runtime.InteropServices.GCHandle@)">
            <summary>
            Converts a one dimensional array to an IntPtr.
            The array can read and/or written in unmanaged dll.
            Internal memory management expects to release the
            resourses after using. Simply make a variable GCHandel[] h
            without initalisation and pass to the function. After using call
            the pointer simply call ReleaseHandels(h).
            </summary>
            <param name="arr">1d Array</param>
            <param name="handle">Handle</param>
            <returns>IntPtr, like double*</returns>
        </member>
        <member name="M:CvTools.cvconvert.ArrayToPtr(CxCore.CvPoint[],System.Runtime.InteropServices.GCHandle@)">
            <summary>
            Converts a one dimensional array to an IntPtr.
            The array can read and/or written in unmanaged dll.
            Internal memory management expects to release the
            resourses after using. Simply make a variable GCHandel[] h
            without initalisation and pass to the function. After using call
            the pointer simply call ReleaseHandels(h).
            </summary>
            <param name="arr">1d Array</param>
            <param name="handle">Handle</param>
            <returns>IntPtr, like double*</returns>
        </member>
        <member name="M:CvTools.cvconvert.TypeToPtr(System.Object,System.Runtime.InteropServices.GCHandle@)">
            <summary>
            Return a Pointer to an object
            float a = 1; GCHandle h;
            Example: IntPtr p = cvConvert.TypeToPtr(a , out h);
            </summary>
            <param name="structure">Input Object.</param>
            <param name="handle">handle to memory</param>
            <returns>Pointer to the object</returns>
        </member>
        <member name="M:CvTools.cvconvert.PtrToType(System.IntPtr,System.Type)">
            <summary>
            Return the Object from Pointer (must be casted to Type)
            Example: float val = (float)cvconvert.PtrToType(ptr, typeOf(float));
            </summary>
            <param name="p">The pointer</param>
            <param name="typeOfStructure">typeof(object)</param>
            <returns>the object</returns>
        </member>
        <member name="M:CvTools.cvconvert.PtrToArray(System.IntPtr,System.Byte[])">
            <summary>
            Converts byte Pointer to Array.
            The Array must be preallocated by desired size.
            </summary>
            <param name="data">Pointer to data</param>
            <param name="arr">Resulting array</param>
        </member>
        <member name="M:CvTools.cvconvert.PtrToArray(System.IntPtr,System.Int16[])">
            <summary>
            Converts byte Pointer to Array.
            The Array must be preallocated by desired size.
            </summary>
            <param name="data">Pointer to data</param>
            <param name="arr">Resulting array</param>
        </member>
        <member name="M:CvTools.cvconvert.PtrToArray(System.IntPtr,System.Int32[])">
            <summary>
            Converts int Pointer to Array.
            The Array must be preallocated by desired size.
            </summary>
            <param name="data">Pointer to data</param>
            <param name="arr">Resulting array</param>
        </member>
        <member name="M:CvTools.cvconvert.PtrToArray(System.IntPtr,System.Single[])">
            <summary>
            Converts float Pointer to Array.
            The Array must be preallocated by desired size.
            </summary>
            <param name="data">Pointer to data</param>
            <param name="arr">Resulting array</param>
        </member>
        <member name="M:CvTools.cvconvert.PtrToArray(System.IntPtr,System.Double[])">
            <summary>
            Converts double Pointer to Array.
            The Array must be preallocated by desired size.
            </summary>
            <param name="data">Pointer to data</param>
            <param name="arr">Resulting array</param>
        </member>
        <member name="M:CvTools.cvconvert.PtrToArray2D(System.IntPtr,System.Double[][])">
            <summary>
            Convert IntPtr to 2D Array
            Array must be allocated with desired size
            </summary>
            <param name="ptr">Pointer to Data</param>
            <param name="arr">Array</param>
        </member>
        <member name="M:CvTools.cvconvert.PtrToArray2D(System.IntPtr,System.Single[][])">
            <summary>
            Convert IntPtr to 2D Array
            Array must be allocated with desired size
            </summary>
            <param name="ptr">Pointer to Data</param>
            <param name="arr">Array</param>
        </member>
        <member name="M:CvTools.cvconvert.PtrToArray2D(System.IntPtr,System.Int32[][])">
            <summary>
            Convert IntPtr to 2D Array
            Array must be allocated with desired size
            </summary>
            <param name="ptr">Pointer to Data</param>
            <param name="arr">Array</param>
        </member>
        <member name="M:CvTools.cvconvert.PtrToArray2D(System.IntPtr,System.Byte[][])">
            <summary>
            Convert IntPtr to 2D Array
            Array must be allocated with desired size
            </summary>
            <param name="ptr">Pointer to Data</param>
            <param name="arr">Array</param>
        </member>
        <member name="M:CvTools.cvconvert.ReleaseHandels(System.Runtime.InteropServices.GCHandle[])">
            <summary>
            Release the used handle(s)
            </summary>
            <param name="h">array of handle(s) given by Convert functions</param>
        </member>
        <member name="M:CvTools.cvconvert.ReleaseHandel(System.Runtime.InteropServices.GCHandle)">
            <summary>
            Release the used handle
            </summary>
            <param name="h">Handle to be released</param>
        </member>
        <member name="T:MachineLearning.CvSVM">
            <summary>
            Support Vector Machines
            </summary>
        </member>
        <member name="M:MachineLearning.CvSVM.Finalize">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvSVM.Dispose">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvSVM.#ctor">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvSVM.#ctor(CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,MachineLearning.CvSVMParams)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_sample_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_params">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvSVM.#ctor(CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_sample_idx">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvSVM.#ctor(CxCore.CvMat,CxCore.CvMat,CxCore.CvMat)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_idx">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvSVM.#ctor(CxCore.CvMat,CxCore.CvMat)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvSVM.train(CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,MachineLearning.CvSVMParams)">
            <summary>
            Trains SVM
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_idx">Index of the variable used in the split </param>
            <param name="_sample_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_params">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvSVM.train(CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat)">
            <summary>
            Trains SVM
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_idx">Index of the variable used in the split </param>
            <param name="_sample_idx">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvSVM.train(CxCore.CvMat,CxCore.CvMat,CxCore.CvMat)">
            <summary>
            Trains SVM
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_idx">Index of the variable used in the split </param>
        </member>
        <member name="M:MachineLearning.CvSVM.train(CxCore.CvMat,CxCore.CvMat)">
            <summary>
            Trains SVM
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvSVM.train_auto(CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,MachineLearning.CvSVMParams,System.Int32,MachineLearning.CvParamGrid,MachineLearning.CvParamGrid,MachineLearning.CvParamGrid,MachineLearning.CvParamGrid,MachineLearning.CvParamGrid,MachineLearning.CvParamGrid)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_sample_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_params">No comment available for this member. Please check the openCV documenation.</param>
            <param name="k_fold">No comment available for this member. Please check the openCV documenation.</param>
            <param name="C_grid">No comment available for this member. Please check the openCV documenation.</param>
            <param name="gamma_grid">No comment available for this member. Please check the openCV documenation.</param>
            <param name="p_grid">No comment available for this member. Please check the openCV documenation.</param>
            <param name="nu_grid">No comment available for this member. Please check the openCV documenation.</param>
            <param name="coef_grid">No comment available for this member. Please check the openCV documenation.</param>
            <param name="degree_grid">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvSVM.train_auto(CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,MachineLearning.CvSVMParams,System.Int32,MachineLearning.CvParamGrid,MachineLearning.CvParamGrid,MachineLearning.CvParamGrid,MachineLearning.CvParamGrid,MachineLearning.CvParamGrid)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_sample_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_params">No comment available for this member. Please check the openCV documenation.</param>
            <param name="k_fold">No comment available for this member. Please check the openCV documenation.</param>
            <param name="C_grid">No comment available for this member. Please check the openCV documenation.</param>
            <param name="gamma_grid">No comment available for this member. Please check the openCV documenation.</param>
            <param name="p_grid">No comment available for this member. Please check the openCV documenation.</param>
            <param name="nu_grid">No comment available for this member. Please check the openCV documenation.</param>
            <param name="coef_grid">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvSVM.train_auto(CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,MachineLearning.CvSVMParams,System.Int32,MachineLearning.CvParamGrid,MachineLearning.CvParamGrid,MachineLearning.CvParamGrid,MachineLearning.CvParamGrid)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_sample_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_params">No comment available for this member. Please check the openCV documenation.</param>
            <param name="k_fold">No comment available for this member. Please check the openCV documenation.</param>
            <param name="C_grid">No comment available for this member. Please check the openCV documenation.</param>
            <param name="gamma_grid">No comment available for this member. Please check the openCV documenation.</param>
            <param name="p_grid">No comment available for this member. Please check the openCV documenation.</param>
            <param name="nu_grid">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvSVM.train_auto(CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,MachineLearning.CvSVMParams,System.Int32,MachineLearning.CvParamGrid,MachineLearning.CvParamGrid,MachineLearning.CvParamGrid)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_sample_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_params">No comment available for this member. Please check the openCV documenation.</param>
            <param name="k_fold">No comment available for this member. Please check the openCV documenation.</param>
            <param name="C_grid">No comment available for this member. Please check the openCV documenation.</param>
            <param name="gamma_grid">No comment available for this member. Please check the openCV documenation.</param>
            <param name="p_grid">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvSVM.train_auto(CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,MachineLearning.CvSVMParams,System.Int32,MachineLearning.CvParamGrid,MachineLearning.CvParamGrid)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_sample_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_params">No comment available for this member. Please check the openCV documenation.</param>
            <param name="k_fold">No comment available for this member. Please check the openCV documenation.</param>
            <param name="C_grid">No comment available for this member. Please check the openCV documenation.</param>
            <param name="gamma_grid">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvSVM.train_auto(CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,MachineLearning.CvSVMParams,System.Int32,MachineLearning.CvParamGrid)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_sample_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_params">No comment available for this member. Please check the openCV documenation.</param>
            <param name="k_fold">No comment available for this member. Please check the openCV documenation.</param>
            <param name="C_grid">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvSVM.train_auto(CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,MachineLearning.CvSVMParams,System.Int32)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_sample_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_params">No comment available for this member. Please check the openCV documenation.</param>
            <param name="k_fold">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvSVM.train_auto(CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,MachineLearning.CvSVMParams)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_sample_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_params">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvSVM.predict(CxCore.CvMat)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="_sample">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvSVM.get_support_vector_count">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvSVM.get_support_vector(System.Int32)">
            <summary>
            Retrieves the number of support vectors and the particular vector
            </summary>
            <param name="i">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvSVM.get_params">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvSVM.clear">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvSVM.get_default_grid(System.Int32)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="param_id">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvSVM.get_var_count">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:MachineLearning.CvSVM.C_SVC">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:MachineLearning.CvSVM.NU_SVC">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:MachineLearning.CvSVM.ONE_CLASS">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:MachineLearning.CvSVM.EPS_SVR">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:MachineLearning.CvSVM.NU_SVR">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:MachineLearning.CvSVM.LINEAR">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:MachineLearning.CvSVM.POLY">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:MachineLearning.CvSVM.RBF">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:MachineLearning.CvSVM.SIGMOID">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:MachineLearning.CvSVM.C">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:MachineLearning.CvSVM.GAMMA">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:MachineLearning.CvSVM.P">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:MachineLearning.CvSVM.NU">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:MachineLearning.CvSVM.COEF">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:MachineLearning.CvSVM.DEGREE">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="T:CxCore.CvPoint">
            <summary>
            2D point with integer coordinates
            </summary>
        </member>
        <member name="F:CxCore.CvPoint.x">
            <summary>
            x-coordinate
            </summary>
        </member>
        <member name="F:CxCore.CvPoint.y">
            <summary>
            y-coordinate
            </summary>
        </member>
        <member name="M:CxCore.CvPoint.#ctor(System.Int32,System.Int32)">
            <summary>
            constructor
            </summary>
            <param name="x">x-coordinate</param>
            <param name="y">y-coordinate</param>
        </member>
        <member name="T:CxCore.CvPoint2D32f">
            <summary>
            2D point with floating-point coordinates
            </summary>
        </member>
        <member name="F:CxCore.CvPoint2D32f.x">
            <summary>
            x-coordinate of the point
            </summary>
        </member>
        <member name="F:CxCore.CvPoint2D32f.y">
            <summary>
            y-coordinate of the point
            </summary>
        </member>
        <member name="M:CxCore.CvPoint2D32f.#ctor(System.Int32,System.Int32)">
            <summary>
            constructor
            </summary>
            <param name="x">x-coordinate</param>
            <param name="y">y-coordinate</param>
        </member>
        <member name="T:CxCore.CvPoint3D32f">
            <summary>
            D point with floating-point coordinates
            </summary>
        </member>
        <member name="F:CxCore.CvPoint3D32f.x">
            <summary>
            x-coordinate of the point
            </summary>
        </member>
        <member name="F:CxCore.CvPoint3D32f.y">
            <summary>
            y-coordinate of the point
            </summary>
        </member>
        <member name="F:CxCore.CvPoint3D32f.z">
            <summary>
            y-coordinate of the point
            </summary>
        </member>
        <member name="M:CxCore.CvPoint3D32f.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Contructor
            </summary>
            <param name="x">x-coordinate</param>
            <param name="y">y-coordinate</param>
            <param name="z">z-coordinate</param>
        </member>
        <member name="T:CxCore.CvPoint2D64f">
            <summary>
            2D point with double precision floating-point coordinates
            </summary>
        </member>
        <member name="F:CxCore.CvPoint2D64f.x">
            <summary>
            x-coordinate
            </summary>
        </member>
        <member name="F:CxCore.CvPoint2D64f.y">
            <summary>
            y-coordinate
            </summary>
        </member>
        <member name="M:CxCore.CvPoint2D64f.#ctor(System.Int32,System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="x">x-coordinate</param>
            <param name="y">y-coordinate</param>
        </member>
        <member name="T:CxCore.CvPoint3D64f">
            <summary>
            3D point with double precision floating-point coordinates
            </summary>
        </member>
        <member name="F:CxCore.CvPoint3D64f.x">
            <summary>
            x-coordinate
            </summary>
        </member>
        <member name="F:CxCore.CvPoint3D64f.y">
            <summary>
            y-coordinate
            </summary>
        </member>
        <member name="F:CxCore.CvPoint3D64f.z">
            <summary>
            z-coordinate
            </summary>
        </member>
        <member name="M:CxCore.CvPoint3D64f.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Constructor
            </summary>
            <param name="x">x-coordinate</param>
            <param name="y">y-coordinate</param>
            <param name="z">z-coordinate</param>
        </member>
        <member name="T:CxCore.CvSize">
            <summary>
            pixel accurate size of a rectangle
            </summary>
        </member>
        <member name="F:CxCore.CvSize.width">
            <summary>
            width of the rectangle
            </summary>
        </member>
        <member name="F:CxCore.CvSize.height">
            <summary>
            height of the rectangle
            </summary>
        </member>
        <member name="M:CxCore.CvSize.#ctor(System.Int32,System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="width">width of the rectangle</param>
            <param name="height">height of the rectangle</param>
        </member>
        <member name="T:CxCore.CvSize2D32f">
            <summary>
            sub-pixel accurate size of a rectangle
            </summary>
        </member>
        <member name="F:CxCore.CvSize2D32f.width">
            <summary>
            width of the rectangle
            </summary>
        </member>
        <member name="F:CxCore.CvSize2D32f.height">
            <summary>
            height of the rectangle
            </summary>
        </member>
        <member name="M:CxCore.CvSize2D32f.#ctor(System.Single,System.Single)">
            <summary>
            Size Array
            </summary>
            <param name="width">width of the rectangle</param>
            <param name="height">height of the rectangle</param>
        </member>
        <member name="T:CxCore.CvRect">
            <summary>
            offset and size of a rectangle
            </summary>
        </member>
        <member name="F:CxCore.CvRect.x">
            <summary>
            x-coordinate of the left-most rectangle corner[s]
            </summary>
        </member>
        <member name="F:CxCore.CvRect.y">
            <summary>
            y-coordinate of the top-most or bottom-most rectangle corner[s]
            </summary>
        </member>
        <member name="F:CxCore.CvRect.width">
            <summary>
            width of the rectangle
            </summary>
        </member>
        <member name="F:CxCore.CvRect.height">
            <summary>
            height of the rectangle
            </summary>
        </member>
        <member name="M:CxCore.CvRect.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="x">x-coordinate of the left-most rectangle corner[s]</param>
            <param name="y">y-coordinate of the top-most or bottom-most rectangle corner[s]</param>
            <param name="width">width of the rectangle</param>
            <param name="height">height of the rectangle</param>
        </member>
        <member name="T:CxCore.CvScalar">
            <summary>
            A container for 1-,2-,3- or 4-tuples of numbers
            </summary>
        </member>
        <member name="F:CxCore.CvScalar.val1">
            <summary>
            value 1
            </summary>
        </member>
        <member name="F:CxCore.CvScalar.val2">
            <summary>
            value 2
            </summary>
        </member>
        <member name="F:CxCore.CvScalar.val3">
            <summary>
            value 3
            </summary>
        </member>
        <member name="F:CxCore.CvScalar.val4">
            <summary>
            value 4
            </summary>
        </member>
        <member name="M:CxCore.CvScalar.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Constructor
            </summary>
            <param name="v1">value 1</param>
            <param name="v2">value 2</param>
            <param name="v3">value 3</param>
            <param name="v4">value 4</param>
        </member>
        <member name="M:CxCore.CvScalar.#ctor(System.Double)">
            <summary>
            Constructor all values will set to the input
            </summary>
            <param name="value">Input</param>
        </member>
        <member name="M:CxCore.CvScalar.#ctor(System.Double,System.Double)">
            <summary>
            Constructor, Input values are set, others becomes 0.
            </summary>
            <param name="v1">value 1</param>
            <param name="v2">value 2</param>
        </member>
        <member name="M:CxCore.CvScalar.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Constructor, Input values are set, others becomes 0.
            </summary>
            <param name="v1">value 1</param>
            <param name="v2">value 2</param>
            <param name="v3">value 3</param>
        </member>
        <member name="T:CxCore.CvTermCriteria">
            <summary>
            Termination criteria for iterative algorithms
            </summary>
        </member>
        <member name="F:CxCore.CvTermCriteria.type">
            <summary>
            may be combination of
            CV_TERMCRIT_ITER 
            CV_TERMCRIT_EPS
            </summary>
        </member>
        <member name="F:CxCore.CvTermCriteria.max_iter">
            <summary>
            maximum number of iterations
            </summary>
        </member>
        <member name="F:CxCore.CvTermCriteria.epsilon">
            <summary>
            accuracy to achieve
            </summary>
        </member>
        <member name="M:CxCore.CvTermCriteria.#ctor(System.Int32,System.Int32,System.Double)">
            <summary>
            Constructor
            check termination criteria and transform it so that type=CV_TERMCRIT_ITER+CV_TERMCRIT_EPS,
            and both max_iter and epsilon are valid
            </summary>
            <param name="type"> may be combination of
            CV_TERMCRIT_ITER 
            CV_TERMCRIT_EPS</param>
            <param name="max_iter">maximum number of iterations</param>
            <param name="epsilon">accuracy to achieve</param>
        </member>
        <member name="T:CxCore.CvMat">
            <summary>
            Multi-channel matrix
            </summary>
        </member>
        <member name="F:CxCore.CvMat.type">
            <summary>
            CvMat signature (CV_MAT_MAGIC_VAL), element type and flags
            </summary>
        </member>
        <member name="F:CxCore.CvMat.step">
            <summary>
            full row length in bytes
            </summary>
        </member>
        <member name="F:CxCore.CvMat.refcount">
            <summary>
            for internal use only
            </summary>
        </member>
        <member name="F:CxCore.CvMat.hdr_refcount">
            <summary>
            for internal use only
            </summary>
        </member>
        <member name="F:CxCore.CvMat.data">
            <summary>
            underlaying data pointer
            </summary>
        </member>
        <member name="F:CxCore.CvMat.rows">
            <summary>
            number of rows
            </summary>
        </member>
        <member name="F:CxCore.CvMat.height">
            <summary>
            number of rows
            </summary>
        </member>
        <member name="F:CxCore.CvMat.cols">
            <summary>
            number of columns
            </summary>
        </member>
        <member name="F:CxCore.CvMat.width">
            <summary>
            number of columns
            </summary>
        </member>
        <member name="F:CxCore.CvMat.ptr">
            <summary>
            this pointer
            </summary>
        </member>
        <member name="P:CxCore.CvMat.Data_Ptr">
            <summary>
            Get data for reading or set data. Unmanaged memory must be allocated. Only the first channel can be get or set.
            Returned will be byte arry of size: step * rows.
            </summary>
        </member>
        <member name="P:CxCore.CvMat.Data_S">
            <summary>
            Get data for reading or set data. Unmanaged memory must be allocated. Only the first channel can be get or set.
            </summary>
        </member>
        <member name="P:CxCore.CvMat.Data_I">
            <summary>
            Get data for reading or set data. Unmanaged memory must be allocated. Only the first channel can be get or set.
            </summary>
        </member>
        <member name="P:CxCore.CvMat.Data_Fl">
            <summary>
            Get data for reading or set data. Unmanaged memory must be allocated. Only the first channel can be get or set.
            </summary>
        </member>
        <member name="P:CxCore.CvMat.Data_Db">
            <summary>
            Get data for reading or set data. Unmanaged memory must be allocated.  Only the first channel can be get or set.
            </summary>
        </member>
        <member name="T:CxCore.Dim">
            <summary>
            pairs (number of elements, distance between elements in bytes) for every dimension
            </summary>
        </member>
        <member name="F:CxCore.Dim.size">
            <summary>
            size
            </summary>
        </member>
        <member name="F:CxCore.Dim.step">
            <summary>
            step
            </summary>
        </member>
        <member name="T:CxCore.CvMatND">
            <summary>
            Multi-dimensional dense multi-channel array
            </summary>
        </member>
        <member name="F:CxCore.CvMatND.type">
            <summary>
            CvMatND signature (CV_MATND_MAGIC_VAL), element type and flags
            </summary>
        </member>
        <member name="F:CxCore.CvMatND.dims">
            <summary>
            number of array dimensions
            </summary>
        </member>
        <member name="F:CxCore.CvMatND.refcount">
            <summary>
            for internal use only
            </summary>
        </member>
        <member name="F:CxCore.CvMatND.hdr_refcount">
            <summary>
            for internal use only
            </summary>
        </member>
        <member name="F:CxCore.CvMatND.data">
            <summary>
            underlaying data pointer
            </summary>
        </member>
        <member name="F:CxCore.CvMatND.dim">
            <summary>
            pairs (number of elements, distance between elements in bytes) for every dimension 
            </summary>
        </member>
        <member name="F:CxCore.CvMatND.ptr">
            <summary>
            this pointer
            </summary>
        </member>
        <member name="P:CxCore.CvMatND.Data_Ptr">
            <summary>
            Get data for reading or set data. Unmanaged memory must be allocated. Only the first channel can be get or set.
            </summary>
        </member>
        <member name="P:CxCore.CvMatND.Data_S">
            <summary>
            Get data for reading or set data. Unmanaged memory must be allocated. Only the first channel can be get or set.
            </summary>
        </member>
        <member name="P:CxCore.CvMatND.Data_I">
            <summary>
            Get data for reading or set data. Unmanaged memory must be allocated. Only the first channel can be get or set.
            </summary>
        </member>
        <member name="P:CxCore.CvMatND.Data_Fl">
            <summary>
            Get data for reading or set data. Unmanaged memory must be allocated. Only the first channel can be get or set.
            </summary>
        </member>
        <member name="P:CxCore.CvMatND.Data_Db">
            <summary>
            Get data for reading or set data. Unmanaged memory must be allocated. Only the first channel can be get or set.
            </summary>
        </member>
        <member name="T:CxCore.CvSparseMat">
            <summary>
            Multi-dimensional sparse multi-channel array
            </summary>
        </member>
        <member name="F:CxCore.CvSparseMat.type">
            <summary>
            CvSparseMat signature (CV_SPARSE_MAT_MAGIC_VAL), element type and flags
            </summary>
        </member>
        <member name="F:CxCore.CvSparseMat.dims">
            <summary>
            number of dimensions
            </summary>
        </member>
        <member name="F:CxCore.CvSparseMat.refcount">
            <summary>
            reference counter - not used
            </summary>
        </member>
        <member name="F:CxCore.CvSparseMat.hdr_refcount">
            <summary>
            hdr reference counter - not used
            </summary>
        </member>
        <member name="F:CxCore.CvSparseMat.heap">
            <summary>
            a pool of hashtable nodes
            </summary>
        </member>
        <member name="F:CxCore.CvSparseMat.hashtable">
            <summary>
            hashtable: each entry has a list of nodes
            having the same "hashvalue modulo hashsize"
            </summary>
        </member>
        <member name="F:CxCore.CvSparseMat.hashsize">
            <summary>
            total number of sparse array nodes
            </summary>
        </member>
        <member name="F:CxCore.CvSparseMat.valoffset">
            <summary>
            value offset in bytes for the array nodes
            </summary>
        </member>
        <member name="F:CxCore.CvSparseMat.idxoffset">
            <summary>
            index offset in bytes for the array nodes
            </summary>
        </member>
        <member name="F:CxCore.CvSparseMat.size">
            <summary>
            arr of dimension sizes
            </summary>
        </member>
        <member name="F:CxCore.CvSparseMat.ptr">
            <summary>
            this pointer
            </summary>
        </member>
        <member name="T:CxCore.IplImage">
            <summary>
            Ipl Image structure
            </summary>
        </member>
        <member name="F:CxCore.IplImage.nSize">
            <summary>
            sizeof(IplImage) 
            </summary>
        </member>
        <member name="F:CxCore.IplImage.ID">
            <summary>
            version (=0)
            </summary>
        </member>
        <member name="F:CxCore.IplImage.nChannels">
            <summary>
            Most of OpenCV functions support 1,2,3 or 4 channels 
            </summary>
        </member>
        <member name="F:CxCore.IplImage.alphaChannel">
            <summary>
            ignored by OpenCV 
            </summary>
        </member>
        <member name="F:CxCore.IplImage.depth">
            <summary>
            pixel depth in bits: IPL_DEPTH_8U, IPL_DEPTH_8S, IPL_DEPTH_16U, IPL_DEPTH_16S, IPL_DEPTH_32S, IPL_DEPTH_32F and IPL_DEPTH_64F are supported 
            </summary>
        </member>
        <member name="F:CxCore.IplImage.colorModel">
            <summary>
            ignored by OpenCV 
            </summary>
        </member>
        <member name="F:CxCore.IplImage.channelSeq">
            <summary>
            ditto
            </summary>
        </member>
        <member name="F:CxCore.IplImage.dataOrder">
            <summary>
            0 - interleaved color channels, 1 - separate color channels.
            cvCreateImage can only create interleaved images 
            </summary>
        </member>
        <member name="F:CxCore.IplImage.origin">
            <summary>
            0 - top-left origin,
            1 - bottom-left origin (Windows bitmaps style)
            </summary>
        </member>
        <member name="F:CxCore.IplImage.align">
            <summary>
            Alignment of image rows (4 or 8).
            OpenCV ignores it and uses widthStep instead 
            </summary>
        </member>
        <member name="F:CxCore.IplImage.width">
            <summary>
            image width in pixels 
            </summary>
        </member>
        <member name="F:CxCore.IplImage.height">
            <summary>
            image height in pixels 
            </summary>
        </member>
        <member name="F:CxCore.IplImage.roi">
            <summary>
            image ROI. when it is not NULL, this specifies image region to process 
            </summary>
        </member>
        <member name="F:CxCore.IplImage.maskROI">
            <summary>
            must be NULL in OpenCV 
            </summary>
        </member>
        <member name="F:CxCore.IplImage.imageId">
            <summary>
            ditto
            </summary>
        </member>
        <member name="F:CxCore.IplImage.tileInfo">
            <summary>
            ditto 
            </summary>
        </member>
        <member name="F:CxCore.IplImage.imageSize">
            <summary>
            image data size in bytes
            (=image->height*image->widthStep in case of interleaved data)
            </summary>
        </member>
        <member name="F:CxCore.IplImage.imageData">
            <summary>
            pointer to aligned image data 
            </summary>
        </member>
        <member name="F:CxCore.IplImage.widthStep">
            <summary>
            size of aligned image row in bytes 
            </summary>
        </member>
        <member name="F:CxCore.IplImage.BorderMode">
            <summary>
            border completion mode, ignored by OpenCV 
            </summary>
        </member>
        <member name="F:CxCore.IplImage.BorderConst">
            <summary>
            ditto
            </summary>
        </member>
        <member name="F:CxCore.IplImage.imageDataOrigin">
            <summary>
             pointer to a very origin of image data (not necessarily aligned) - it is needed for correct image deallocation 
            </summary>
        </member>
        <member name="F:CxCore.IplImage.ptr">
            <summary>
            Pointer to the unmanaged memory
            </summary>
        </member>
        <member name="M:CxCore.IplImage.op_Explicit(CxCore.IplImage)~System.Drawing.Bitmap">
            <summary>
            Converts this to Bitmap
            </summary>
            <param name="img"></param>
            <returns></returns>
        </member>
        <member name="P:CxCore.IplImage.ImageDataUChar">
            <summary>
            Get image data for reading or set image data. Unmanaged memory must be allocated.
            </summary>
        </member>
        <member name="P:CxCore.IplImage.ImageDataS">
            <summary>
            Get image data for reading or set image data. Unmanaged memory must be allocated.
            </summary>
        </member>
        <member name="P:CxCore.IplImage.ImageDataI">
            <summary>
            Get image data for reading or set image data. Unmanaged memory must be allocated.
            </summary>
        </member>
        <member name="P:CxCore.IplImage.ImageDataFl">
            <summary>
            Get image data for reading or set image data. Unmanaged memory must be allocated.
            </summary>
        </member>
        <member name="P:CxCore.IplImage.ImageDataDb">
            <summary>
            Get image data for reading or set image data. Unmanaged memory must be allocated.
            </summary>
        </member>
        <member name="T:CxCore.CvMemBlock">
            <summary>
            The structure CvMemBlock represents a single 
            lock of memory storage. Actual data of the memory 
            blocks follows the header, that is, the i-th byte 
            of the memory block can be retrieved with the 
            expression ((char*)(mem_block_ptr+1))[i]. However, 
            normally there is no need to access the storage structure 
            fields directly.
            </summary>
        </member>
        <member name="F:CxCore.CvMemBlock.prev">
            <summary>
            Previus
            </summary>
        </member>
        <member name="F:CxCore.CvMemBlock.next">
            <summary>
            Next
            </summary>
        </member>
        <member name="T:CxCore.CvMemStorage">
            <summary>
            Growing memory storage
            </summary>
        </member>
        <member name="F:CxCore.CvMemStorage.signature">
            <summary>
            internal signature
            </summary>
        </member>
        <member name="F:CxCore.CvMemStorage.bottom">
            <summary>
            first allocated block
            </summary>
        </member>
        <member name="F:CxCore.CvMemStorage.top">
            <summary>
            current memory block - top of the stack
            </summary>
        </member>
        <member name="F:CxCore.CvMemStorage.parent">
            <summary>
            borrows new blocks from
            </summary>
        </member>
        <member name="F:CxCore.CvMemStorage.block_size">
            <summary>
            block size
            </summary>
        </member>
        <member name="F:CxCore.CvMemStorage.free_space">
            <summary>
            free space in the current block
            </summary>
        </member>
        <member name="F:CxCore.CvMemStorage.ptr">
            <summary>
            this pointer
            </summary>
        </member>
        <member name="T:CxCore.CvMemStoragePos">
            <summary>
            The structure described below stores the position 
            of the stack top that can be saved via 
            cvSaveMemStoragePos and restored via cvRestoreMemStoragePos.
            </summary>
        </member>
        <member name="F:CxCore.CvMemStoragePos.top">
            <summary>
            Top
            </summary>
        </member>
        <member name="F:CxCore.CvMemStoragePos.free_space">
            <summary>
            Free space
            </summary>
        </member>
        <member name="T:CxCore.CvString">
            <summary>
            Allocates text string in the storage
            </summary>
        </member>
        <member name="F:CxCore.CvString.len">
            <summary>
            Length of the string (w/o \'0')
            </summary>
        </member>
        <member name="F:CxCore.CvString.ptr">
            <summary>
            this ptr
            </summary>
        </member>
        <member name="T:CxCore.CvSeq">
            <summary>
            Growable sequence of elements
            </summary>
        </member>
        <member name="F:CxCore.CvSeq.flags">
            <summary>
            micsellaneous flags
            </summary>
        </member>
        <member name="F:CxCore.CvSeq.header_size">
            <summary>
            size of sequence header
            </summary>
        </member>
        <member name="F:CxCore.CvSeq.h_prev">
            <summary>
            previous sequence
            </summary>
        </member>
        <member name="F:CxCore.CvSeq.h_next">
            <summary>
            next sequence
            </summary>
        </member>
        <member name="F:CxCore.CvSeq.v_prev">
            <summary>
            2nd previous sequence
            </summary>
        </member>
        <member name="F:CxCore.CvSeq.v_next">
            <summary>
            2nd next sequence
            </summary>
        </member>
        <member name="F:CxCore.CvSeq.total">
            <summary>
            total number of elements
            </summary>
        </member>
        <member name="F:CxCore.CvSeq.elem_size">
            <summary>
            size of sequence element in bytes
            </summary>
        </member>
        <member name="F:CxCore.CvSeq.block_max">
            <summary>
            maximal bound of the last block
            </summary>
        </member>
        <member name="F:CxCore.CvSeq.pt">
            <summary>
            current write pointer
            [this name was changed, because the this pointer]
            </summary>
        </member>
        <member name="F:CxCore.CvSeq.delta_elems">
            <summary>
            how many elements allocated when the seq grows
            </summary>
        </member>
        <member name="F:CxCore.CvSeq.storage">
            <summary>
            where the seq is stored
            </summary>
        </member>
        <member name="F:CxCore.CvSeq.free_blocks">
            <summary>
            free blocks list
            </summary>
        </member>
        <member name="F:CxCore.CvSeq.first">
            <summary>
            pointer to the first sequence block
            </summary>
        </member>
        <member name="F:CxCore.CvSeq.ptr">
            <summary>
            this pointer
            </summary>
        </member>
        <member name="M:CxCore.CvSeq.H_prev">
            <summary>
            Returns previous sequence. The returned Sequence should not be released. Thus its -this pointer is zero. 
            </summary>
        </member>
        <member name="M:CxCore.CvSeq.V_prev">
            <summary>
            Returns 2nd previous sequence. The returned Sequence should not be released. Thus its -this pointer is zero. 
            </summary>
        </member>
        <member name="M:CxCore.CvSeq.H_next">
            <summary>
            Returns next sequence. The returned Sequence should not be released. Thus its -this pointer is zero. 
            </summary>
        </member>
        <member name="M:CxCore.CvSeq.V_next">
            <summary>
            Returns 2nd next sequence. The returned Sequence should not be released. Thus its -this pointer is zero. 
            </summary>
        </member>
        <member name="M:CxCore.CvSeq.First">
            <summary>
            Returns firt Sequence Block in the sequence.
            </summary>
        </member>
        <member name="T:CxCore.CvSeqBlock">
            <summary>
            Continuous sequence block
            </summary>
        </member>
        <member name="F:CxCore.CvSeqBlock.prev">
            <summary>
            previous sequence block
            </summary>
        </member>
        <member name="F:CxCore.CvSeqBlock.next">
            <summary>
            next sequence block
            </summary>
        </member>
        <member name="F:CxCore.CvSeqBlock.start_index">
            <summary>
            index of the first element in the block +
            sequence->first->start_index
            </summary>
        </member>
        <member name="F:CxCore.CvSeqBlock.count">
            <summary>
            number of elements in the block
            </summary>
        </member>
        <member name="F:CxCore.CvSeqBlock.data">
            <summary>
            pointer to the first element of the block
            </summary>
        </member>
        <member name="F:CxCore.CvSeqBlock.ptr">
            <summary>
            this pointer
            </summary>
        </member>
        <member name="M:CxCore.CvSeqBlock.Data(System.Type,System.Int32)">
            <summary>
            Returns Data Object.
            </summary>
            <param name="typeofObject">Pass the object type returned by typeof().
            Example: typeof(CvPoint)
            You need to cast the returned Object to desired type. (e.g. (CvPoint)seq.Data(...) or (float)seq.Data(...))</param>
            <param name="offset">Object index.</param>
        </member>
        <member name="T:CxCore.CvSlice">
            <summary>
            A sequence slice
            </summary>
        </member>
        <member name="F:CxCore.CvSlice.start_index">
            <summary>
            Start Index
            </summary>
        </member>
        <member name="F:CxCore.CvSlice.end_index">
            <summary>
            End Index
            </summary>
        </member>
        <member name="M:CxCore.CvSlice.#ctor(System.Int32,System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="start_index">Start Index</param>
            <param name="end_index">End Index</param>
        </member>
        <member name="T:CxCore.CvSetElem">
            <summary>
            Internal
            </summary>
        </member>
        <member name="F:CxCore.CvSetElem.flags">
            <summary>
            flags
            </summary>
        </member>
        <member name="F:CxCore.CvSetElem.next_free">
            <summary>
            next_free
            </summary>
        </member>
        <member name="F:CxCore.CvSetElem.ptr">
            <summary>
            ptr
            </summary>
        </member>
        <member name="T:CxCore.CvSet">
            <summary>
            Collection of nodes
            </summary>
        </member>
        <member name="F:CxCore.CvSet.flags">
            <summary>
            micsellaneous flags
            </summary>
        </member>
        <member name="F:CxCore.CvSet.header_size">
            <summary>
            size of sequence header
            </summary>
        </member>
        <member name="F:CxCore.CvSet.h_prev">
            <summary>
            previous sequence
            </summary>
        </member>
        <member name="F:CxCore.CvSet.h_next">
            <summary>
            next sequence
            </summary>
        </member>
        <member name="F:CxCore.CvSet.v_prev">
            <summary>
            2nd previous sequence
            </summary>
        </member>
        <member name="F:CxCore.CvSet.v_next">
            <summary>
            2nd next sequence
            </summary>
        </member>
        <member name="F:CxCore.CvSet.total">
            <summary>
            total number of elements
            </summary>
        </member>
        <member name="F:CxCore.CvSet.elem_size">
            <summary>
            size of sequence element in bytes
            </summary>
        </member>
        <member name="F:CxCore.CvSet.block_max">
            <summary>
            maximal bound of the last block
            </summary>
        </member>
        <member name="F:CxCore.CvSet.pt">
            <summary>
            current write pointer
            </summary>
        </member>
        <member name="F:CxCore.CvSet.delta_elems">
            <summary>
            how many elements allocated when the seq grows
            </summary>
        </member>
        <member name="F:CxCore.CvSet.storage">
            <summary>
            where the seq is stored
            </summary>
        </member>
        <member name="F:CxCore.CvSet.free_blocks">
            <summary>
            free blocks list
            </summary>
        </member>
        <member name="F:CxCore.CvSet.first">
            <summary>
            pointer to the first sequence block
            </summary>
        </member>
        <member name="F:CxCore.CvSet.free_elems">
            <summary>
            free elements
            </summary>
        </member>
        <member name="F:CxCore.CvSet.active_count">
            <summary>
            active count
            </summary>
        </member>
        <member name="F:CxCore.CvSet.ptr">
            <summary>
            this pointer
            </summary>
        </member>
        <member name="T:CxCore.CvGraphVtx">
            <summary>
            A graph vertex
            </summary>
        </member>
        <member name="F:CxCore.CvGraphVtx.flags">
            <summary>
            vertex flags
            </summary>
        </member>
        <member name="F:CxCore.CvGraphVtx.first">
            <summary>
            the first incident edge
            </summary>
        </member>
        <member name="F:CxCore.CvGraphVtx.pt">
            <summary>
            Internal data pointer
            </summary>
        </member>
        <member name="F:CxCore.CvGraphVtx.ptr">
            <summary>
            this pointer
            </summary>
        </member>
        <member name="T:CxCore.CvGraphEdge">
            <summary>
            Graph Edge
            </summary>
        </member>
        <member name="F:CxCore.CvGraphEdge.flags">
            <summary>
            edge flags
            </summary>
        </member>
        <member name="F:CxCore.CvGraphEdge.weight">
            <summary>
            edge weight
            </summary>
        </member>
        <member name="F:CxCore.CvGraphEdge.next">
            <summary>
            the next edges in the incidence lists for staring (0) and ending (1) vertices
            </summary>
        </member>
        <member name="F:CxCore.CvGraphEdge.vtx">
            <summary>
            the starting (0) and ending (1) vertices
            </summary>
        </member>
        <member name="F:CxCore.CvGraphEdge.ptr">
            <summary>
            this pointer
            </summary>
        </member>
        <member name="T:CxCore.CvGraph">
            <summary>
            Oriented or unoriented weigted graph
            </summary>
        </member>
        <member name="F:CxCore.CvGraph.flags">
            <summary>
            micsellaneous flags
            </summary>
        </member>
        <member name="F:CxCore.CvGraph.header_size">
            <summary>
            size of sequence header
            </summary>
        </member>
        <member name="F:CxCore.CvGraph.h_prev">
            <summary>
            previous sequence
            </summary>
        </member>
        <member name="F:CxCore.CvGraph.h_next">
            <summary>
            next sequence
            </summary>
        </member>
        <member name="F:CxCore.CvGraph.v_prev">
            <summary>
            2nd previous sequence
            </summary>
        </member>
        <member name="F:CxCore.CvGraph.v_next">
            <summary>
            2nd next sequence
            </summary>
        </member>
        <member name="F:CxCore.CvGraph.total">
            <summary>
            total number of elements
            </summary>
        </member>
        <member name="F:CxCore.CvGraph.elem_size">
            <summary>
            size of sequence element in bytes
            </summary>
        </member>
        <member name="F:CxCore.CvGraph.block_max">
            <summary>
            maximal bound of the last block
            </summary>
        </member>
        <member name="F:CxCore.CvGraph.pt">
            <summary>
            current write pointer
            </summary>
        </member>
        <member name="F:CxCore.CvGraph.delta_elems">
            <summary>
            how many elements allocated when the seq grows
            </summary>
        </member>
        <member name="F:CxCore.CvGraph.storage">
            <summary>
            where the seq is stored
            </summary>
        </member>
        <member name="F:CxCore.CvGraph.free_blocks">
            <summary>
            free blocks list
            </summary>
        </member>
        <member name="F:CxCore.CvGraph.first">
            <summary>
            pointer to the first sequence block
            </summary>
        </member>
        <member name="F:CxCore.CvGraph.free_elems">
            <summary>
            internal use
            </summary>
        </member>
        <member name="F:CxCore.CvGraph.active_count">
            <summary>
            internal use
            </summary>
        </member>
        <member name="F:CxCore.CvGraph.edges">
            <summary>
            Set of edges
            </summary>
        </member>
        <member name="F:CxCore.CvGraph.ptr">
            <summary>
            this pointer
            </summary>
        </member>
        <member name="T:CxCore.CvGraphScanner">
            <summary>
            Graph traversal state
            </summary>
        </member>
        <member name="F:CxCore.CvGraphScanner.vtx">
            <summary>
            current graph vertex (or current edge origin)
            </summary>
        </member>
        <member name="F:CxCore.CvGraphScanner.dst">
            <summary>
            current graph edge destination vertex
            </summary>
        </member>
        <member name="F:CxCore.CvGraphScanner.edge">
            <summary>
            current edge
            </summary>
        </member>
        <member name="F:CxCore.CvGraphScanner.graph">
            <summary>
            the graph
            </summary>
        </member>
        <member name="F:CxCore.CvGraphScanner.stack">
            <summary>
            the graph vertex stack
            </summary>
        </member>
        <member name="F:CxCore.CvGraphScanner.index">
            <summary>
            the lower bound of certainly visited vertices
            </summary>
        </member>
        <member name="F:CxCore.CvGraphScanner.mask">
            <summary>
            event mask
            </summary>
        </member>
        <member name="F:CxCore.CvGraphScanner.ptr">
            <summary>
            this pointer
            </summary>
        </member>
        <member name="T:CxCore.CvTreeNodeIterator">
            <summary>
            Opens existing or creates new file storage
            </summary>
        </member>
        <member name="F:CxCore.CvTreeNodeIterator.node">
            <summary>
            node
            </summary>
        </member>
        <member name="F:CxCore.CvTreeNodeIterator.level">
            <summary>
            level
            </summary>
        </member>
        <member name="F:CxCore.CvTreeNodeIterator.max_level">
            <summary>
            max_level
            </summary>
        </member>
        <member name="F:CxCore.CvTreeNodeIterator.ptr">
            <summary>
            this pointer
            </summary>
        </member>
        <member name="T:CxCore.CvStringHashNode">
            <summary>
            all the keys (names) of elements in the readed file storage
            are stored in the hash to speed up the lookup operations
            </summary>
        </member>
        <member name="F:CxCore.CvStringHashNode.hashval">
            <summary>
            hashval
            </summary>
        </member>
        <member name="F:CxCore.CvStringHashNode.str">
            <summary>
            str
            </summary>
        </member>
        <member name="F:CxCore.CvStringHashNode.next">
            <summary>
            next
            </summary>
        </member>
        <member name="F:CxCore.CvStringHashNode.ptr">
            <summary>
            this pointer
            </summary>
        </member>
        <member name="T:CxCore.CvFileNode">
            <summary>
            basic element of the file storage - scalar or collection
            </summary>
        </member>
        <member name="F:CxCore.CvFileNode.tag">
            <summary>
            Tag info
            </summary>
        </member>
        <member name="F:CxCore.CvFileNode.info">
            <summary>
            type information (only for user-defined object, for others it is 0)
            </summary>
        </member>
        <member name="F:CxCore.CvFileNode.data">
            <summary>
            Data pointer:
            {
               double f; /* scalar floating-point number */
               int i;    /* scalar integer number */
               CvString str; /* text string */
               CvSeq* seq; /* sequence (ordered collection of file nodes) */
               CvFileNodeHash* map; /* map (collection of named file nodes) */
            } data;
            </summary>
        </member>
        <member name="F:CxCore.CvFileNode.ptr">
            <summary>
            this pointer
            </summary>
        </member>
        <member name="T:CxCore.CvAttrList">
            <summary>
            List of attributes
            </summary>
        </member>
        <member name="F:CxCore.CvAttrList.attr">
            <summary>
            NULL-terminated array of (attribute_name,attribute_value) pairs 
            </summary>
        </member>
        <member name="F:CxCore.CvAttrList.next">
            <summary>
            pointer to next chunk of the attributes list
            </summary>
        </member>
        <member name="F:CxCore.CvAttrList.ptr">
            <summary>
            this pointer
            </summary>
        </member>
        <member name="T:CxCore.CvTypeInfo">
            <summary>
            Type information
            </summary>
        </member>
        <member name="F:CxCore.CvTypeInfo.flags">
            <summary>
            not used
            </summary>
        </member>
        <member name="F:CxCore.CvTypeInfo.header_size">
            <summary>
            sizeof(CvTypeInfo)
            </summary>
        </member>
        <member name="F:CxCore.CvTypeInfo.prev">
            <summary>
            previous registered type in the list
            </summary>
        </member>
        <member name="F:CxCore.CvTypeInfo.next">
            <summary>
            not documented
            </summary>
        </member>
        <member name="F:CxCore.CvTypeInfo.type_name">
            <summary>
            next registered type in the list
            </summary>
        </member>
        <member name="F:CxCore.CvTypeInfo.pt">
            <summary>
            not documentd
            </summary>
        </member>
        <member name="F:CxCore.CvTypeInfo.is_instance">
            <summary>
            checks if the passed object belongs to the type
            </summary>
        </member>
        <member name="F:CxCore.CvTypeInfo.release">
            <summary>
            releases object (memory etc.)
            </summary>
        </member>
        <member name="F:CxCore.CvTypeInfo.read">
            <summary>
            reads object from file storage
            </summary>
        </member>
        <member name="F:CxCore.CvTypeInfo.write">
            <summary>
            reads object from file storage
            </summary>
        </member>
        <member name="F:CxCore.CvTypeInfo.clone">
            <summary>
            creates a copy of the object
            </summary>
        </member>
        <member name="F:CxCore.CvTypeInfo.ptr">
            <summary>
            this pointer
            </summary>
        </member>
        <member name="T:CxCore.CvPluginFuncInfo">
            <summary>
            System Type
            </summary>
        </member>
        <member name="F:CxCore.CvPluginFuncInfo.func_addr">
            <summary>
            No Info available
            </summary>
        </member>
        <member name="F:CxCore.CvPluginFuncInfo.default_func_addr">
            <summary>
            No Info available
            </summary>
        </member>
        <member name="F:CxCore.CvPluginFuncInfo.func_names">
            <summary>
            No Info available
            </summary>
        </member>
        <member name="F:CxCore.CvPluginFuncInfo.search_modules">
            <summary>
            No Info available
            </summary>
        </member>
        <member name="F:CxCore.CvPluginFuncInfo.loaded_from">
            <summary>
            No Info available
            </summary>
        </member>
        <member name="F:CxCore.CvPluginFuncInfo.ptr">
            <summary>
            this Pointer
            </summary>
        </member>
        <member name="T:CxCore.CvModuleInfo">
            <summary>
            System Type 
            </summary>
        </member>
        <member name="F:CxCore.CvModuleInfo.next">
            <summary>
            No Info available
            </summary>
        </member>
        <member name="F:CxCore.CvModuleInfo.name">
            <summary>
            No Info available
            </summary>
        </member>
        <member name="F:CxCore.CvModuleInfo.version">
            <summary>
            No Info available
            </summary>
        </member>
        <member name="F:CxCore.CvModuleInfo.func_tab">
            <summary>
            No Info available
            </summary>
        </member>
        <member name="F:CxCore.CvModuleInfo.ptr">
            <summary>
            this pointer
            </summary>
        </member>
        <member name="T:CxCore.IplTileInfo">
            <summary>
            Internal used Structure
            </summary>
        </member>
        <member name="T:CxCore.IplROI">
            <summary>
            No Info available
            </summary>
        </member>
        <member name="F:CxCore.IplROI.coi">
            <summary>
            0 - no COI (all channels are selected), 
            1 - 0th channel is selected ...
            </summary>
        </member>
        <member name="F:CxCore.IplROI.xOffset">
            <summary>
            No Info available
            </summary>
        </member>
        <member name="F:CxCore.IplROI.yOffset">
            <summary>
            No Info available
            </summary>
        </member>
        <member name="F:CxCore.IplROI.width">
            <summary>
            No Info available
            </summary>
        </member>
        <member name="F:CxCore.IplROI.height">
            <summary>
            No Info available
            </summary>
        </member>
        <member name="F:CxCore.IplROI.ptr">
            <summary>
            this pointer
            </summary>
        </member>
        <member name="T:CxCore.IplConvKernel">
            <summary>
            No Info available
            </summary>
        </member>
        <member name="F:CxCore.IplConvKernel.nCols">
            <summary>
            No Info available
            </summary>
        </member>
        <member name="F:CxCore.IplConvKernel.nRows">
            <summary>
            No Info available
            </summary>
        </member>
        <member name="F:CxCore.IplConvKernel.anchorX">
            <summary>
            No Info available
            </summary>
        </member>
        <member name="F:CxCore.IplConvKernel.anchorY">
            <summary>
            No Info available
            </summary>
        </member>
        <member name="F:CxCore.IplConvKernel.values">
            <summary>
            No Info available
            </summary>
        </member>
        <member name="F:CxCore.IplConvKernel.nShiftR">
            <summary>
            No Info available
            </summary>
        </member>
        <member name="F:CxCore.IplConvKernel.ptr">
            <summary>
            this pointer
            </summary>
        </member>
        <member name="T:CxCore.IplConvKernelFP">
            <summary>
            No Info available
            </summary>
        </member>
        <member name="F:CxCore.IplConvKernelFP.nCols">
            <summary>
            No Info available
            </summary>
        </member>
        <member name="F:CxCore.IplConvKernelFP.nRows">
            <summary>
            No Info available
            </summary>
        </member>
        <member name="F:CxCore.IplConvKernelFP.anchorX">
            <summary>
            No Info available
            </summary>
        </member>
        <member name="F:CxCore.IplConvKernelFP.anchorY">
            <summary>
            No Info available
            </summary>
        </member>
        <member name="F:CxCore.IplConvKernelFP.values">
            <summary>
            No Info available
            </summary>
        </member>
        <member name="F:CxCore.IplConvKernelFP.ptr">
            <summary>
            this pointer
            </summary>
        </member>
        <member name="T:CxCore.DataType">
            <summary>
            No Info available
            </summary>
        </member>
        <member name="F:CxCore.DataType.dt">
            <summary>
            No Info available
            </summary>
        </member>
        <member name="T:CxCore.CvSparseNode">
            <summary>
            iteration through a sparse array
            </summary>
        </member>
        <member name="F:CxCore.CvSparseNode.hashval">
            <summary>
            No Info available
            </summary>
        </member>
        <member name="F:CxCore.CvSparseNode.next">
            <summary>
            No Info available
            </summary>
        </member>
        <member name="F:CxCore.CvSparseNode.ptr">
            <summary>
            this pointer
            </summary>
        </member>
        <member name="T:CxCore.CvSparseMatIterator">
            <summary>
            iteration through a sparse array
            </summary>
        </member>
        <member name="F:CxCore.CvSparseMatIterator.mat">
            <summary>
            No Info available
            </summary>
        </member>
        <member name="F:CxCore.CvSparseMatIterator.node">
            <summary>
            No Info available
            </summary>
        </member>
        <member name="F:CxCore.CvSparseMatIterator.curidx">
            <summary>
            No Info available
            </summary>
        </member>
        <member name="F:CxCore.CvSparseMatIterator.ptr">
            <summary>
            No Info available
            </summary>
        </member>
        <member name="T:CxCore.CvHistogram">
            <summary>
            CvHistogram
            </summary>
        </member>
        <member name="F:CxCore.CvHistogram.type">
            <summary>
            No Info available
            </summary>
        </member>
        <member name="F:CxCore.CvHistogram.bins">
            <summary>
            No Info available
            </summary>
        </member>
        <member name="F:CxCore.CvHistogram.thresh">
            <summary>
            for uniform histograms
            </summary>
        </member>
        <member name="F:CxCore.CvHistogram.thresh2">
            <summary>
            for non-uniform histograms
            </summary>
        </member>
        <member name="F:CxCore.CvHistogram.mat">
            <summary>
            embedded matrix header for array histograms
            </summary>
        </member>
        <member name="F:CxCore.CvHistogram.ptr">
            <summary>
            this pointer
            </summary>
        </member>
        <member name="T:CxCore.CvBox2D">
            <summary>
            CvBox2D
            </summary>
        </member>
        <member name="F:CxCore.CvBox2D.center">
            <summary>
            center of the box
            </summary>
        </member>
        <member name="F:CxCore.CvBox2D.size">
            <summary>
            box width and length
            </summary>
        </member>
        <member name="F:CxCore.CvBox2D.angle">
            <summary>
            angle between the horizontal axis
            and the first side (i.e. length) in degrees
            </summary>
        </member>
        <member name="F:CxCore.CvBox2D.ptr">
            <summary>
            this pointer
            </summary>
        </member>
        <member name="T:CxCore.CvLineIterator">
            <summary>
            Line iterator state
            </summary>
        </member>
        <member name="F:CxCore.CvLineIterator.pt">
            <summary>
            pointer to the current point 
            </summary>
        </member>
        <member name="F:CxCore.CvLineIterator.err">
            <summary>
            Bresenham algorithm state
            </summary>
        </member>
        <member name="F:CxCore.CvLineIterator.plus_delta">
            <summary>
            Bresenham algorithm state
            </summary>
        </member>
        <member name="F:CxCore.CvLineIterator.minus_delta">
            <summary>
            Bresenham algorithm state
            </summary>
        </member>
        <member name="F:CxCore.CvLineIterator.plus_step">
            <summary>
            Bresenham algorithm state
            </summary>
        </member>
        <member name="F:CxCore.CvLineIterator.minus_step">
            <summary>
            Bresenham algorithm state
            </summary>
        </member>
        <member name="F:CxCore.CvLineIterator.ptr">
            <summary>
            this pointer
            </summary>
        </member>
        <member name="T:CxCore.CvGraphVtx2D">
            <summary>
            CvGraphVtx2D
            </summary>
        </member>
        <member name="F:CxCore.CvGraphVtx2D.flags">
            <summary>
            Not commented
            </summary>
        </member>
        <member name="F:CxCore.CvGraphVtx2D.first">
            <summary>
            Not commented
            </summary>
        </member>
        <member name="F:CxCore.CvGraphVtx2D.pt">
            <summary>
            Not commented
            </summary>
        </member>
        <member name="F:CxCore.CvGraphVtx2D.ptr">
            <summary>
            this pointer 
            </summary>
        </member>
        <member name="T:CxCore.CvChain">
            <summary>
            Chain
            </summary>
        </member>
        <member name="F:CxCore.CvChain.flags">
            <summary>
            micsellaneous flags
            </summary>
        </member>
        <member name="F:CxCore.CvChain.header_size">
            <summary>
            size of sequence header
            </summary>
        </member>
        <member name="F:CxCore.CvChain.h_prev">
            <summary>
            previous sequence
            </summary>
        </member>
        <member name="F:CxCore.CvChain.h_next">
            <summary>
            next sequence
            </summary>
        </member>
        <member name="F:CxCore.CvChain.v_prev">
            <summary>
            2nd previous sequence
            </summary>
        </member>
        <member name="F:CxCore.CvChain.v_next">
            <summary>
            2nd next sequence
            </summary>
        </member>
        <member name="F:CxCore.CvChain.total">
            <summary>
            total number of elements
            </summary>
        </member>
        <member name="F:CxCore.CvChain.elem_size">
            <summary>
            size of sequence element in bytes
            </summary>
        </member>
        <member name="F:CxCore.CvChain.block_max">
            <summary>
            maximal bound of the last block
            </summary>
        </member>
        <member name="F:CxCore.CvChain.pt">
            <summary>
            current write pointer
            </summary>
        </member>
        <member name="F:CxCore.CvChain.delta_elems">
            <summary>
            how many elements allocated when the seq grows
            </summary>
        </member>
        <member name="F:CxCore.CvChain.storage">
            <summary>
            where the seq is stored
            </summary>
        </member>
        <member name="F:CxCore.CvChain.free_blocks">
            <summary>
            free blocks list
            </summary>
        </member>
        <member name="F:CxCore.CvChain.first">
            <summary>
            pointer to the first sequence block
            </summary>
        </member>
        <member name="F:CxCore.CvChain.origin">
            <summary>
            Origin
            </summary>
        </member>
        <member name="F:CxCore.CvChain.ptr">
            <summary>
            this pointer
            </summary>
        </member>
        <member name="T:CxCore.CvContour">
            <summary>
            A Contour Object
            </summary>
        </member>
        <member name="F:CxCore.CvContour.flags">
            <summary>
            micsellaneous flags
            </summary>
        </member>
        <member name="F:CxCore.CvContour.header_size">
            <summary>
            size of sequence header
            </summary>
        </member>
        <member name="F:CxCore.CvContour.h_prev">
            <summary>
            previous sequence
            </summary>
        </member>
        <member name="F:CxCore.CvContour.h_next">
            <summary>
            next sequence
            </summary>
        </member>
        <member name="F:CxCore.CvContour.v_prev">
            <summary>
            2nd previous sequence
            </summary>
        </member>
        <member name="F:CxCore.CvContour.v_next">
            <summary>
            2nd next sequence
            </summary>
        </member>
        <member name="F:CxCore.CvContour.total">
            <summary>
            total number of elements
            </summary>
        </member>
        <member name="F:CxCore.CvContour.elem_size">
            <summary>
            size of sequence element in bytes
            </summary>
        </member>
        <member name="F:CxCore.CvContour.block_max">
            <summary>
            maximal bound of the last block
            </summary>
        </member>
        <member name="F:CxCore.CvContour.pt">
            <summary>
            current write pointer
            </summary>
        </member>
        <member name="F:CxCore.CvContour.delta_elems">
            <summary>
            how many elements allocated when the seq grows
            </summary>
        </member>
        <member name="F:CxCore.CvContour.storage">
            <summary>
            where the seq is stored
            </summary>
        </member>
        <member name="F:CxCore.CvContour.free_blocks">
            <summary>
            free blocks list
            </summary>
        </member>
        <member name="F:CxCore.CvContour.first">
            <summary>
            pointer to the first sequence block
            </summary>
        </member>
        <member name="F:CxCore.CvContour.rect">
            <summary>
            Rectangle
            </summary>
        </member>
        <member name="F:CxCore.CvContour.color">
            <summary>
            Color
            </summary>
        </member>
        <member name="F:CxCore.CvContour.reserved">
            <summary>
            internal use
            </summary>
        </member>
        <member name="F:CxCore.CvContour.ptr">
            <summary>
            this pointer
            </summary>
        </member>
        <member name="T:CxCore.CvNArrayIterator">
            <summary>
            NArray Iterator
            </summary>
        </member>
        <member name="F:CxCore.CvNArrayIterator.count">
            <summary>
            number of arrays
            </summary>
        </member>
        <member name="F:CxCore.CvNArrayIterator.dims">
            <summary>
            number of dimensions to iterate
            </summary>
        </member>
        <member name="F:CxCore.CvNArrayIterator.size">
            <summary>
            maximal common linear size: { width = size, height = 1 }
            </summary>
        </member>
        <member name="F:CxCore.CvNArrayIterator.ptr">
            <summary>
            pointers to the array slices
            </summary>
        </member>
        <member name="F:CxCore.CvNArrayIterator.stack">
            <summary>
            for internal use
            </summary>
        </member>
        <member name="F:CxCore.CvNArrayIterator.hdr">
            <summary>
            pointers to the headers of the matrices that are processed
            </summary>
        </member>
        <member name="T:CxCore.CvFileStorage">
            <summary>
            Write Files
            </summary>
        </member>
        <member name="F:CxCore.CvFileStorage.flags">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.CvFileStorage.is_xml">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.CvFileStorage.write_mode">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.CvFileStorage.is_first">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.CvFileStorage.memstorage">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.CvFileStorage.dststorage">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.CvFileStorage.strstorage">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.CvFileStorage.str_hash">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.CvFileStorage.roots">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.CvFileStorage.write_stack">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.CvFileStorage.struct_indent">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.CvFileStorage.struct_flags">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.CvFileStorage.struct_tag">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.CvFileStorage.space">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.CvFileStorage.filename">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.CvFileStorage.file">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.CvFileStorage.buffer">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.CvFileStorage.buffer_start">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.CvFileStorage.buffer_end">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.CvFileStorage.wrap_margin">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.CvFileStorage.lineno">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.CvFileStorage.dummy_eof">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.CvFileStorage.errmsg">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.CvFileStorage.errmsgbuf">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.CvFileStorage.start_write_struct">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.CvFileStorage.end_write_struct">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.CvFileStorage.write_int">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.CvFileStorage.write_real">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.CvFileStorage.write_string">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.CvFileStorage.write_comment">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.CvFileStorage.start_next_stream">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.CvFileStorage.ptr">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="T:CxCore.CvPoint2DSeq">
            <summary>
            A Sequence of 2D Points
            </summary>
        </member>
        <member name="F:CxCore.CvPoint2DSeq.flags">
            <summary>
            micsellaneous flags 
            </summary>
        </member>
        <member name="F:CxCore.CvPoint2DSeq.header_size">
            <summary>
            size of sequence header 
            </summary>
        </member>
        <member name="F:CxCore.CvPoint2DSeq.h_prev">
            <summary>
            previous sequence 
            </summary>
        </member>
        <member name="F:CxCore.CvPoint2DSeq.h_next">
            <summary>
            next sequence 
            </summary>
        </member>
        <member name="F:CxCore.CvPoint2DSeq.v_prev">
            <summary>
            2nd previous sequence 
            </summary>
        </member>
        <member name="F:CxCore.CvPoint2DSeq.v_next">
            <summary>
            2nd next sequence 
            </summary>
        </member>
        <member name="F:CxCore.CvPoint2DSeq.total">
            <summary>
            total number of elements 
            </summary>
        </member>
        <member name="F:CxCore.CvPoint2DSeq.elem_size">
            <summary>
            size of sequence element in bytes 
            </summary>
        </member>
        <member name="F:CxCore.CvPoint2DSeq.block_max">
            <summary>
            maximal bound of the last block 
            </summary>
        </member>
        <member name="F:CxCore.CvPoint2DSeq.pt">
            <summary>
            current write pointer 
            </summary>
        </member>
        <member name="F:CxCore.CvPoint2DSeq.delta_elems">
            <summary>
            how many elements allocated when the seq grows 
            </summary>
        </member>
        <member name="F:CxCore.CvPoint2DSeq.storage">
            <summary>
            where the seq is stored 
            </summary>
        </member>
        <member name="F:CxCore.CvPoint2DSeq.free_blocks">
            <summary>
            free blocks list 
            </summary>
        </member>
        <member name="F:CxCore.CvPoint2DSeq.first">
            <summary>
            pointer to the first sequence block 
            </summary>
        </member>
        <member name="F:CxCore.CvPoint2DSeq.rect">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.CvPoint2DSeq.color">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.CvPoint2DSeq.reserved">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.CvPoint2DSeq.ptr">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="T:CxCore.CvSeqWriter">
            <summary>
            Sequence Writer Object
            </summary>
        </member>
        <member name="F:CxCore.CvSeqWriter.header_size">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.CvSeqWriter.seq">
            <summary>
            the sequence written 
            </summary>
        </member>
        <member name="F:CxCore.CvSeqWriter.block">
            <summary>
            current block 
            </summary>
        </member>
        <member name="F:CxCore.CvSeqWriter.pt">
            <summary>
            pointer to free space 
            </summary>
        </member>
        <member name="F:CxCore.CvSeqWriter.block_min">
            <summary>
            pointer to the beginning of block 
            </summary>
        </member>
        <member name="F:CxCore.CvSeqWriter.block_max">
            <summary>
            pointer to the end of block 
            </summary>
        </member>
        <member name="F:CxCore.CvSeqWriter.ptr">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="T:CxCore.CvSeqReader">
            <summary>
            Sequence Reader Object
            </summary>
        </member>
        <member name="F:CxCore.CvSeqReader.header_size">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.CvSeqReader.seq">
            <summary>
            sequence beign read 
            </summary>
        </member>
        <member name="F:CxCore.CvSeqReader.block">
            <summary>
            current block 
            </summary>
        </member>
        <member name="F:CxCore.CvSeqReader.pt">
            <summary>
            pointer to element be read next 
            </summary>
        </member>
        <member name="F:CxCore.CvSeqReader.block_min">
            <summary>
            pointer to the beginning of block 
            </summary>
        </member>
        <member name="F:CxCore.CvSeqReader.block_max">
            <summary>
            pointer to the end of block 
            </summary>
        </member>
        <member name="F:CxCore.CvSeqReader.delta_index">
            <summary>
            = seq->first->start_index 
            </summary>
        </member>
        <member name="F:CxCore.CvSeqReader.prev_elem">
            <summary>
            pointer to previous element 
            </summary>
        </member>
        <member name="F:CxCore.CvSeqReader.ptr">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="T:CxCore.cxtypes">
            <summary>
            Defines Basic Types for CxCore Library.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.IPL_DEPTH_SIGN">
            <summary>
            Value = 0x80000000. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.IPL_DEPTH_1U">
            <summary>
            Value = 1. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.IPL_DEPTH_8U">
            <summary>
            Value = 8. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.IPL_DEPTH_16U">
            <summary>
            Value = 16. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.IPL_DEPTH_32F">
            <summary>
            Value = 32. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.IPL_DEPTH_8S">
            <summary>
            Value = (IPL_DEPTH_SIGN|8). No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.IPL_DEPTH_16S">
            <summary>
            Value = (IPL_DEPTH_SIGN|16). No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.IPL_DEPTH_32S">
            <summary>
            Value = (IPL_DEPTH_SIGN|32). No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.IPL_DATA_ORDER_PIXEL">
            <summary>
            Value = 0. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.IPL_DATA_ORDER_PLANE">
            <summary>
            Value = 1. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.IPL_ORIGIN_TL">
            <summary>
            Value = 0. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.IPL_ORIGIN_BL">
            <summary>
            Value = 1. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.IPL_ALIGN_4BYTES">
            <summary>
            Value = 4. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.IPL_ALIGN_8BYTES">
            <summary>
            Value = 8. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.IPL_ALIGN_16BYTES">
            <summary>
            Value = 16. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.IPL_ALIGN_32BYTES">
            <summary>
            Value = 32. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.IPL_ALIGN_DWORD">
            <summary>
            Value = IPL_ALIGN_4BYTES. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.IPL_ALIGN_QWORD">
            <summary>
            Value = IPL_ALIGN_8BYTES. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.IPL_BORDER_CONSTANT">
            <summary>
            Value = 0. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.IPL_BORDER_REPLICATE">
            <summary>
            Value = 1. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.IPL_BORDER_REFLECT">
            <summary>
            Value = 2. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.IPL_BORDER_WRAP">
            <summary>
            Value = 3. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.IPL_IMAGE_HEADER">
            <summary>
            Value = 1. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.IPL_IMAGE_DATA">
            <summary>
            Value = 2. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.IPL_IMAGE_ROI">
            <summary>
            Value = 4. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.IPL_BORDER_REFLECT_101">
            <summary>
            Value = 4. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_TYPE_NAME_IMAGE">
            <summary>
            Value = opencv-image. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.IPL_DEPTH_64F">
            <summary>
            Value = 64. for storing double-precisio floating point data in IplImage's 
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_MATND_MAGIC_VAL">
            <summary>
            Value = 0x42430000. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_TYPE_NAME_MATND">
            <summary>
            Value = opencv-nd-matrix. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_MAX_DIM">
            <summary>
            Value = 32. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_MAX_DIM_HEAP">
            <summary>
            Value = (1&lt;&lt;16). No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_SPARSE_MAT_MAGIC_VAL">
            <summary>
            Value = 0x42440000. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_TYPE_NAME_SPARSE_MAT">
            <summary>
            Value = opencv-sparse-matrix. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_HIST_MAGIC_VAL">
            <summary>
            Value = 0x42450000. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_HIST_UNIFORM_FLAG">
            <summary>
            Value = (1&lt;&lt;10). No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_HIST_RANGES_FLAG">
            <summary>
            Value = (1&lt;&lt;11). indicates whether bin ranges are set already or not 
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_HIST_ARRAY">
            <summary>
            Value = 0. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_HIST_SPARSE">
            <summary>
            Value = 1. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_HIST_TREE">
            <summary>
            Value = CV_HIST_SPARSE. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_HIST_UNIFORM">
            <summary>
            Value = 1. should be used as a parameter only it turns to CV_HIST_UNIFORM_FLAG of hist->type 
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_TERMCRIT_ITER">
            <summary>
            Value = 1. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_TERMCRIT_NUMBER">
            <summary>
            Value = CV_TERMCRIT_ITER. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_TERMCRIT_EPS">
            <summary>
            Value = 2. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_STORAGE_MAGIC_VAL">
            <summary>
            Value = 0x42890000. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_TYPE_NAME_SEQ">
            <summary>
            Value = opencv-sequence. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_TYPE_NAME_SEQ_TREE">
            <summary>
            Value = opencv-sequence-tree. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_SET_ELEM_IDX_MASK">
            <summary>
            Value = ((1&lt;&lt;26)-1). No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_SET_ELEM_FREE_FLAG">
            <summary>
            Value = (1&lt;&lt;(sizeof(int)8-1)). No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_TYPE_NAME_GRAPH">
            <summary>
            Value = opencv-graph. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_SEQ_MAGIC_VAL">
            <summary>
            Value = 0x42990000. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_SET_MAGIC_VAL">
            <summary>
            Value = 0x42980000. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_SEQ_ELTYPE_BITS">
            <summary>
            Value = 9. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_SEQ_ELTYPE_MASK">
            <summary>
            Value = ((1&lt;&lt;CV_SEQ_ELTYPE_BITS)-1). No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_SEQ_ELTYPE_GENERIC">
            <summary>
            Value = 0. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_SEQ_ELTYPE_PTR">
            <summary>
            Value = CV_USRTYPE1. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_SEQ_ELTYPE_PPOINT">
            <summary>
            Value = CV_SEQ_ELTYPE_PTR. &amp;(x y) 
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_SEQ_ELTYPE_GRAPH_EDGE">
            <summary>
            Value = 0.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_SEQ_ELTYPE_GRAPH_VERTEX">
            <summary>
            Value = 0. first_edge &amp;(x y) 
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_SEQ_ELTYPE_TRIAN_ATR">
            <summary>
            Value = 0. vertex of the binary tree 
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_SEQ_ELTYPE_CONNECTED_COMP">
            <summary>
            Value = 0. connected component 
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_SEQ_KIND_BITS">
            <summary>
            Value = 3. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_SEQ_KIND_MASK">
            <summary>
            Value = (((1&lt;&lt;CV_SEQ_KIND_BITS)-1)&lt;&lt;CV_SEQ_ELTYPE_BITS). No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_SEQ_KIND_GENERIC">
            <summary>
            Value = (0&lt;&lt;CV_SEQ_ELTYPE_BITS). No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_SEQ_KIND_CURVE">
            <summary>
            Value = (1&lt;&lt;CV_SEQ_ELTYPE_BITS). No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_SEQ_KIND_BIN_TREE">
            <summary>
            Value = (2&lt;&lt;CV_SEQ_ELTYPE_BITS). No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_SEQ_KIND_GRAPH">
            <summary>
            Value = (3&lt;&lt;CV_SEQ_ELTYPE_BITS). No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_SEQ_KIND_SUBDIV2D">
            <summary>
            Value = (4&lt;&lt;CV_SEQ_ELTYPE_BITS). No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_SEQ_FLAG_SHIFT">
            <summary>
            Value = (CV_SEQ_KIND_BITS+CV_SEQ_ELTYPE_BITS). No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_SEQ_FLAG_CLOSED">
            <summary>
            Value = (1&lt;&lt;CV_SEQ_FLAG_SHIFT). No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_SEQ_FLAG_SIMPLE">
            <summary>
            Value = (2&lt;&lt;CV_SEQ_FLAG_SHIFT). No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_SEQ_FLAG_CONVEX">
            <summary>
            Value = (4&lt;&lt;CV_SEQ_FLAG_SHIFT). No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_SEQ_FLAG_HOLE">
            <summary>
            Value = (8&lt;&lt;CV_SEQ_FLAG_SHIFT). No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_GRAPH_FLAG_ORIENTED">
            <summary>
            Value = (1&lt;&lt;CV_SEQ_FLAG_SHIFT). No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_GRAPH">
            <summary>
            Value = CV_SEQ_KIND_GRAPH. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_ORIENTED_GRAPH">
            <summary>
            Value = (CV_SEQ_KIND_GRAPH|CV_GRAPH_FLAG_ORIENTED). No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_SEQ_POLYGON_TREE">
            <summary>
            Value = (CV_SEQ_KIND_BIN_TREE|CV_SEQ_ELTYPE_TRIAN_ATR). No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_SEQ_CONNECTED_COMP">
            <summary>
            Value = (CV_SEQ_KIND_GENERIC|CV_SEQ_ELTYPE_CONNECTED_COMP). No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_STORAGE_READ">
            <summary>
            Value = 0. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_STORAGE_WRITE">
            <summary>
            Value = 1. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_STORAGE_WRITE_TEXT">
            <summary>
            Value = CV_STORAGE_WRITE. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_STORAGE_WRITE_BINARY">
            <summary>
            Value = CV_STORAGE_WRITE. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_STORAGE_APPEND">
            <summary>
            Value = 2. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_NODE_NONE">
            <summary>
            Value = 0. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_NODE_INT">
            <summary>
            Value = 1. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_NODE_INTEGER">
            <summary>
            Value = CV_NODE_INT. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_NODE_REAL">
            <summary>
            Value = 2. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_NODE_FLOAT">
            <summary>
            Value = CV_NODE_REAL. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_NODE_STR">
            <summary>
            Value = 3. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_NODE_STRING">
            <summary>
            Value = CV_NODE_STR. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_NODE_REF">
            <summary>
            Value = 4. not used 
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_NODE_SEQ">
            <summary>
            Value = 5. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_NODE_MAP">
            <summary>
            Value = 6. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_NODE_TYPE_MASK">
            <summary>
            Value = 7. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_NODE_FLOW">
            <summary>
            Value = 8. used only for writing structures to YAML format 
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_NODE_USER">
            <summary>
            Value = 16. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_NODE_EMPTY">
            <summary>
            Value = 32. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_NODE_NAMED">
            <summary>
            Value = 64. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_NODE_SEQ_SIMPLE">
            <summary>
            Value = 256. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_CN_MAX">
            <summary>
            Value = 64. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_CN_SHIFT">
            <summary>
            Value = 3. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_DEPTH_MAX">
            <summary>
            Value = (1&lt;&lt;CV_CN_SHIFT). No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_8U">
            <summary>
            Value = 0. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_8S">
            <summary>
            Value = 1. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_16U">
            <summary>
            Value = 2. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_16S">
            <summary>
            Value = 3. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_32S">
            <summary>
            Value = 4. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_32F">
            <summary>
            Value = 5. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_64F">
            <summary>
            Value = 6. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_USRTYPE1">
            <summary>
            Value = 7. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_AUTO_STEP">
            <summary>
            Value = 0x7fffffff. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_MAT_CN_MASK">
            <summary>
            Value = ((CV_CN_MAX-1)&lt;&lt;CV_CN_SHIFT). No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_MAT_DEPTH_MASK">
            <summary>
            Value = (CV_DEPTH_MAX-1). No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_MAT_TYPE_MASK">
            <summary>
            Value = (CV_DEPTH_MAXCV_CN_MAX-1). No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_MAT_CONT_FLAG_SHIFT">
            <summary>
            Value = 14. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_MAT_CONT_FLAG">
            <summary>
            Value = (1&lt;&lt;CV_MAT_CONT_FLAG_SHIFT). No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_MAT_TEMP_FLAG_SHIFT">
            <summary>
            Value = 15. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_MAT_TEMP_FLAG">
            <summary>
            Value = (1&lt;&lt;CV_MAT_TEMP_FLAG_SHIFT). No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_MAGIC_MASK">
            <summary>
            Value = 0xFFFF0000. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_MAT_MAGIC_VAL">
            <summary>
            Value = 0x42420000. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_TYPE_NAME_MAT">
            <summary>
            Value = opencv-matrix. No comment available for this member.
            </summary>
        </member>
        <member name="M:CxCore.cxtypes.IPL_IMAGE_MAGIC_VAL">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
        </member>
        <member name="M:CxCore.cxtypes.CV_IS_MATND_HDR(CxCore.CvMatND)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="mat">mat</param>
        </member>
        <member name="M:CxCore.cxtypes.CV_IS_MATND(CxCore.CvMatND)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="mat">mat</param>
        </member>
        <member name="M:CxCore.cxtypes.CV_IS_SPARSE_MAT_HDR(CxCore.CvSparseMat)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="mat">mat</param>
        </member>
        <member name="M:CxCore.cxtypes.CV_IS_SPARSE_MAT(CxCore.CvSparseMat)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="mat">mat</param>
        </member>
        <member name="M:CxCore.cxtypes.CV_NODE_IDX(CxCore.CvSparseMat,CxCore.CvSparseNode)">
            <summary>
            Get Adress of next node. Use cvconvert.xx for conversion. 
            </summary>
            <param name="mat">mat</param>
            <param name="node">node</param>
        </member>
        <member name="M:CxCore.cxtypes.CV_NODE_VAL(CxCore.CvSparseMat,CxCore.CvSparseNode)">
            <summary>
            Gets Value of the Node. Because there are a lot of types possible
            IntPtr is returned and needs to convert to the necessary type. Use
            cvconvert.xx for conversion to the type you expected.
            </summary>
            <param name="mat">mat</param>
            <param name="node">node</param>
        </member>
        <member name="M:CxCore.cxtypes.CV_IS_HIST(CxCore.CvHistogram)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="hist">hist</param>
        </member>
        <member name="M:CxCore.cxtypes.CV_IS_UNIFORM_HIST(CxCore.CvHistogram)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="hist">hist</param>
        </member>
        <member name="M:CxCore.cxtypes.CV_IS_SPARSE_HIST(CxCore.CvHistogram)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="hist">hist</param>
        </member>
        <member name="M:CxCore.cxtypes.CV_HIST_HAS_RANGES(CxCore.CvHistogram)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="hist">hist</param>
        </member>
        <member name="M:CxCore.cxtypes.cvRect(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            offset and size of a rectangle
            </summary>
            <param name="x">x</param>
            <param name="y">y</param>
            <param name="width">width</param>
            <param name="height">height</param>
        </member>
        <member name="M:CxCore.cxtypes.cvRectToROI(CxCore.CvRect,System.Int32)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="rect">rect</param>
            <param name="coi">coi</param>
        </member>
        <member name="M:CxCore.cxtypes.cvROIToRect(CxCore.IplROI)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="roi">roi</param>
        </member>
        <member name="M:CxCore.cxtypes.cvTermCriteria(System.Int32,System.Int32,System.Double)">
            <summary>
            Termination criteria for iterative algorithms
            </summary>
            <param name="type">type</param>
            <param name="max_iter">max_iter</param>
            <param name="epsilon">epsilon</param>
        </member>
        <member name="M:CxCore.cxtypes.cvSlice(System.Int32,System.Int32)">
            <summary>
            A sequence slice
            </summary>
            <param name="start">start</param>
            <param name="end">end</param>
        </member>
        <member name="F:CxCore.cxtypes.CV_WHOLE_SEQ_END_INDEX">
            <summary>
            Value = 0x3fffffff. No comment available. Please check the openCV Documentation.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_WHOLE_SEQ">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
        </member>
        <member name="M:CxCore.cxtypes.cvScalar(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            A container for 1-,2-,3- or 4-tuples of numbers
            </summary>
            <param name="val1">val1</param>
            <param name="val2">val2</param>
            <param name="val3">val3</param>
            <param name="val4">val4</param>
        </member>
        <member name="M:CxCore.cxtypes.cvScalarAll(System.Double)">
            <summary>
            Set all values to same input
            </summary>
            <param name="val">value to be set to all.</param>
        </member>
        <member name="M:CxCore.cxtypes.cvRealScalar(System.Double)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="val1">val1</param>
        </member>
        <member name="M:CxCore.cxtypes.CV_IS_STORAGE(CxCore.CvMemStorage)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="storage">storage</param>
        </member>
        <member name="M:CxCore.cxtypes.CV_IS_SET_ELEM(CxCore.CvSetElem)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="ptr">ptr</param>
        </member>
        <member name="M:CxCore.cxtypes.CV_IS_SEQ(CxCore.CvSeq)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="seq">seq</param>
        </member>
        <member name="M:CxCore.cxtypes.CV_IS_SET(CxCore.CvSet)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="set">set</param>
        </member>
        <member name="M:CxCore.cxtypes.CV_IS_SET(CxCore.CvSeq)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="set">set</param>
        </member>
        <member name="F:CxCore.cxtypes.CV_SEQ_ELTYPE_POINT">
            <summary>
            (x,y)
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_SEQ_ELTYPE_CODE">
            <summary>
            freeman code: 0..7
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_SEQ_ELTYPE_INDEX">
            <summary>
            #(x,y)
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_SEQ_ELTYPE_POINT3D">
            <summary>
            (x,y,z)
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_SEQ_POINT_SET">
            <summary>
            Value = (CV_SEQ_KIND_GENERIC|CV_SEQ_ELTYPE_POINT). No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_SEQ_POINT3D_SET">
            <summary>
            Value = (CV_SEQ_KIND_GENERIC|CV_SEQ_ELTYPE_POINT3D). No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_SEQ_POLYLINE">
            <summary>
            Value = (CV_SEQ_KIND_CURVE|CV_SEQ_ELTYPE_POINT). No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_SEQ_POLYGON">
            <summary>
            Value = (CV_SEQ_FLAG_CLOSED|CV_SEQ_POLYLINE). No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_SEQ_CONTOUR">
            <summary>
            Value = CV_SEQ_POLYGON. No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_SEQ_SIMPLE_POLYGON">
            <summary>
            Value = (CV_SEQ_FLAG_SIMPLE|CV_SEQ_POLYGON). No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_SEQ_CHAIN">
            <summary>
            Value = (CV_SEQ_KIND_CURVE|CV_SEQ_ELTYPE_CODE). No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_SEQ_CHAIN_CONTOUR">
            <summary>
            Value = (CV_SEQ_FLAG_CLOSED|CV_SEQ_CHAIN). No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_SEQ_INDEX">
            <summary>
            sequence of the integer numbers
            </summary>
        </member>
        <member name="M:CxCore.cxtypes.CV_SEQ_ELTYPE(CxCore.CvSeq)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="seq">seq</param>
        </member>
        <member name="M:CxCore.cxtypes.CV_SEQ_KIND(CxCore.CvSeq)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="seq">seq</param>
        </member>
        <member name="M:CxCore.cxtypes.CV_SEQ_KIND(CxCore.CvSet)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="seq">seq</param>
        </member>
        <member name="M:CxCore.cxtypes.CV_IS_SEQ_INDEX(CxCore.CvSeq)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="seq">seq</param>
        </member>
        <member name="M:CxCore.cxtypes.CV_IS_SEQ_CURVE(CxCore.CvSeq)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="seq">seq</param>
        </member>
        <member name="M:CxCore.cxtypes.CV_IS_SEQ_CLOSED(CxCore.CvSeq)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="seq">seq</param>
        </member>
        <member name="M:CxCore.cxtypes.CV_IS_SEQ_CONVEX(CxCore.CvSeq)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="seq">seq</param>
        </member>
        <member name="M:CxCore.cxtypes.CV_IS_SEQ_HOLE(CxCore.CvSeq)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="seq">seq</param>
        </member>
        <member name="M:CxCore.cxtypes.CV_IS_SEQ_SIMPLE(CxCore.CvSeq)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="seq">seq</param>
        </member>
        <member name="M:CxCore.cxtypes.CV_IS_SEQ_POINT_SET(CxCore.CvSeq)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="seq">seq</param>
        </member>
        <member name="M:CxCore.cxtypes.CV_IS_SEQ_POINT_SUBSET(CxCore.CvSeq)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="seq">seq</param>
        </member>
        <member name="M:CxCore.cxtypes.CV_IS_SEQ_POLYLINE(CxCore.CvSeq)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="seq">seq</param>
        </member>
        <member name="M:CxCore.cxtypes.CV_IS_SEQ_POLYGON(CxCore.CvSeq)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="seq">seq</param>
        </member>
        <member name="M:CxCore.cxtypes.CV_IS_SEQ_CHAIN(CxCore.CvSeq)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="seq">seq</param>
        </member>
        <member name="M:CxCore.cxtypes.CV_IS_SEQ_CONTOUR(CxCore.CvSeq)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="seq">seq</param>
        </member>
        <member name="M:CxCore.cxtypes.CV_IS_SEQ_CHAIN_CONTOUR(CxCore.CvSeq)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="seq">seq</param>
        </member>
        <member name="M:CxCore.cxtypes.CV_IS_SEQ_POLYGON_TREE(CxCore.CvSeq)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="seq">seq</param>
        </member>
        <member name="M:CxCore.cxtypes.CV_IS_GRAPH(CxCore.CvSet)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="seq">seq</param>
        </member>
        <member name="M:CxCore.cxtypes.CV_IS_GRAPH_ORIENTED(CxCore.CvSeq)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="seq">seq</param>
        </member>
        <member name="M:CxCore.cxtypes.CV_IS_SUBDIV2D(CxCore.CvSeq)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="seq">seq</param>
        </member>
        <member name="M:CxCore.cxtypes.CV_SEQ_ELEM(CxCore.CvSeq@,System.Int32)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="seq">seq</param>
            <param name="index">index</param>
        </member>
        <member name="M:CxCore.cxtypes.CV_GET_SEQ_ELEM(CxCore.CvSeq@,System.Int32)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="seq">seq</param>
            <param name="index">index</param>
        </member>
        <member name="M:CxCore.cxtypes.CV_WRITE_SEQ_ELEM_VAR(System.IntPtr,CxCore.CvSeqWriter@)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="elem_ptr">elem_ptr</param>
            <param name="writer">writer</param>
        </member>
        <member name="M:CxCore.cxtypes.CV_WRITE_SEQ_ELEM(System.IntPtr,CxCore.CvSeqWriter@)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="elem">elem</param>
            <param name="writer">writer</param>
        </member>
        <member name="M:CxCore.cxtypes.CV_NEXT_SEQ_ELEM(System.Int32,CxCore.CvSeqReader@)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="elem_size">elem_size</param>
            <param name="reader">reader</param>
        </member>
        <member name="M:CxCore.cxtypes.CV_PREV_SEQ_ELEM(System.Int32,CxCore.CvSeqReader@)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="elem_size">elem_size</param>
            <param name="reader">reader</param>
        </member>
        <member name="M:CxCore.cxtypes.CV_READ_SEQ_ELEM(CxCore.CvPoint@,CxCore.CvSeqReader@)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="point">point</param>
            <param name="reader">reader</param>
        </member>
        <member name="M:CxCore.cxtypes.CV_REV_READ_SEQ_ELEM(CxCore.CvPoint@,CxCore.CvSeqReader@)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="point">point</param>
            <param name="reader">reader</param>
        </member>
        <member name="M:CxCore.cxtypes.CV_NEXT_GRAPH_EDGE(CxCore.CvGraphEdge@,CxCore.CvGraphVtx@)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="edge">edge</param>
            <param name="vertex">vertex</param>
        </member>
        <member name="M:CxCore.cxtypes.CV_NODE_TYPE(System.Int32)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="flags">flags</param>
        </member>
        <member name="M:CxCore.cxtypes.CV_NODE_IS_INT(System.Int32)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="flags">flags</param>
        </member>
        <member name="M:CxCore.cxtypes.CV_NODE_IS_REAL(System.Int32)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="flags">flags</param>
        </member>
        <member name="M:CxCore.cxtypes.CV_NODE_IS_STRING(System.Int32)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="flags">flags</param>
        </member>
        <member name="M:CxCore.cxtypes.CV_NODE_IS_SEQ(System.Int32)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="flags">flags</param>
        </member>
        <member name="M:CxCore.cxtypes.CV_NODE_IS_MAP(System.Int32)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="flags">flags</param>
        </member>
        <member name="M:CxCore.cxtypes.CV_NODE_IS_COLLECTION(System.Int32)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="flags">flags</param>
        </member>
        <member name="M:CxCore.cxtypes.CV_NODE_IS_FLOW(System.Int32)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="flags">flags</param>
        </member>
        <member name="M:CxCore.cxtypes.CV_NODE_IS_EMPTY(System.Int32)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="flags">flags</param>
        </member>
        <member name="M:CxCore.cxtypes.CV_NODE_IS_USER(System.Int32)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="flags">flags</param>
        </member>
        <member name="M:CxCore.cxtypes.CV_NODE_HAS_NAME(System.Int32)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="flags">flags</param>
        </member>
        <member name="M:CxCore.cxtypes.CV_MAKETYPE(System.Int32,System.Int32)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="depth">depth</param>
            <param name="cn">cn</param>
        </member>
        <member name="M:CxCore.cxtypes.CV_MAKE_TYPE(System.Int32,System.Int32)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="depth">depth</param>
            <param name="cn">cn</param>
        </member>
        <member name="F:CxCore.cxtypes.CV_8UC1">
            <summary>
            Value = CV_MAKETYPE(CV_8U1). No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_8UC2">
            <summary>
            Value = CV_MAKETYPE(CV_8U2). No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_8UC3">
            <summary>
            Value = CV_MAKETYPE(CV_8U3). No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_8UC4">
            <summary>
            Value = CV_MAKETYPE(CV_8U4). No comment available for this member.
            </summary>
        </member>
        <member name="M:CxCore.cxtypes.CV_8UC(System.Int32)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="n">n</param>
        </member>
        <member name="F:CxCore.cxtypes.CV_8SC1">
            <summary>
            Value = CV_MAKETYPE(CV_8S1). No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_8SC2">
            <summary>
            Value = CV_MAKETYPE(CV_8S2). No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_8SC3">
            <summary>
            Value = CV_MAKETYPE(CV_8S3). No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_8SC4">
            <summary>
            Value = CV_MAKETYPE(CV_8S4). No comment available for this member.
            </summary>
        </member>
        <member name="M:CxCore.cxtypes.CV_8SC(System.Int32)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="n">n</param>
        </member>
        <member name="F:CxCore.cxtypes.CV_16UC1">
            <summary>
            Value = CV_MAKETYPE(CV_16U1). No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_16UC2">
            <summary>
            Value = CV_MAKETYPE(CV_16U2). No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_16UC3">
            <summary>
            Value = CV_MAKETYPE(CV_16U3). No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_16UC4">
            <summary>
            Value = CV_MAKETYPE(CV_16U4). No comment available for this member.
            </summary>
        </member>
        <member name="M:CxCore.cxtypes.CV_16UC(System.Int32)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="n">n</param>
        </member>
        <member name="F:CxCore.cxtypes.CV_16SC1">
            <summary>
            Value = CV_MAKETYPE(CV_16S1). No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_16SC2">
            <summary>
            Value = CV_MAKETYPE(CV_16S2). No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_16SC3">
            <summary>
            Value = CV_MAKETYPE(CV_16S3). No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_16SC4">
            <summary>
            Value = CV_MAKETYPE(CV_16S4). No comment available for this member.
            </summary>
        </member>
        <member name="M:CxCore.cxtypes.CV_16SC(System.Int32)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="n">n</param>
        </member>
        <member name="F:CxCore.cxtypes.CV_32SC1">
            <summary>
            Value = CV_MAKETYPE(CV_32S1). No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_32SC2">
            <summary>
            Value = CV_MAKETYPE(CV_32S2). No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_32SC3">
            <summary>
            Value = CV_MAKETYPE(CV_32S3). No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_32SC4">
            <summary>
            Value = CV_MAKETYPE(CV_32S4). No comment available for this member.
            </summary>
        </member>
        <member name="M:CxCore.cxtypes.CV_32SC(System.Int32)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="n">n</param>
        </member>
        <member name="F:CxCore.cxtypes.CV_32FC1">
            <summary>
            Value = CV_MAKETYPE(CV_32F1). No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_32FC2">
            <summary>
            Value = CV_MAKETYPE(CV_32F2). No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_32FC3">
            <summary>
            Value = CV_MAKETYPE(CV_32F3). No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_32FC4">
            <summary>
            Value = CV_MAKETYPE(CV_32F4). No comment available for this member.
            </summary>
        </member>
        <member name="M:CxCore.cxtypes.CV_32FC(System.Int32)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="n">n</param>
        </member>
        <member name="F:CxCore.cxtypes.CV_64FC1">
            <summary>
            Value = CV_MAKETYPE(CV_64F1). No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_64FC2">
            <summary>
            Value = CV_MAKETYPE(CV_64F2). No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_64FC3">
            <summary>
            Value = CV_MAKETYPE(CV_64F3). No comment available for this member.
            </summary>
        </member>
        <member name="F:CxCore.cxtypes.CV_64FC4">
            <summary>
            Value = CV_MAKETYPE(CV_64F4). No comment available for this member.
            </summary>
        </member>
        <member name="M:CxCore.cxtypes.CV_64FC(System.Int32)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="n">n</param>
        </member>
        <member name="F:CxCore.cxtypes.CV_WHOLE_ARR">
            <summary>
            Construct a new CvSlice Object: CV_WHOLE_ARR = new CvSlice(0, 0x3fffffff);
            </summary>
        </member>
        <member name="M:CxCore.cxtypes.CV_MAT_CN(System.Int32)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="flags">flags</param>
        </member>
        <member name="M:CxCore.cxtypes.CV_MAT_DEPTH(System.Int32)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="flags">flags</param>
        </member>
        <member name="M:CxCore.cxtypes.CV_MAT_TYPE(System.Int32)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="flags">flags</param>
        </member>
        <member name="M:CxCore.cxtypes.CV_IS_MAT_CONT(System.Int32)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="flags">flags</param>
        </member>
        <member name="M:CxCore.cxtypes.CV_IS_CONT_MAT(System.Int32)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="flags">flags</param>
        </member>
        <member name="M:CxCore.cxtypes.CV_IS_TEMP_MAT(System.Int32)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="flags">flags</param>
        </member>
        <member name="M:CxCore.cxtypes.CvRNG(System.Int32)">
            <summary>
            Initializes random number generator state
            </summary>
            <param name="seed">64-bit value used to initiate a random sequence. </param>
        </member>
        <member name="M:CxCore.cxtypes.CvRNG">
            <summary>
            Initializes random number generator state
            </summary>
        </member>
        <member name="M:CxCore.cxtypes.CV_IS_MAT_HDR(CxCore.CvMat)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="mat">mat</param>
        </member>
        <member name="M:CxCore.cxtypes.CV_IS_MAT(CxCore.CvMat)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="mat">mat</param>
        </member>
        <member name="M:CxCore.cxtypes.CV_IS_MASK_ARR(CxCore.CvMat)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="mat">mat</param>
        </member>
        <member name="M:CxCore.cxtypes.CV_ARE_TYPES_EQ(CxCore.CvMat,CxCore.CvMat)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="mat1">mat1</param>
            <param name="mat2">mat2</param>
        </member>
        <member name="M:CxCore.cxtypes.CV_ARE_CNS_EQ(CxCore.CvMat,CxCore.CvMat)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="mat1">mat1</param>
            <param name="mat2">mat2</param>
        </member>
        <member name="M:CxCore.cxtypes.CV_ARE_DEPTHS_EQ(CxCore.CvMat,CxCore.CvMat)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="mat1">mat1</param>
            <param name="mat2">mat2</param>
        </member>
        <member name="M:CxCore.cxtypes.CV_ARE_SIZES_EQ(CxCore.CvMat,CxCore.CvMat)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="mat1">mat1</param>
            <param name="mat2">mat2</param>
        </member>
        <member name="M:CxCore.cxtypes.CV_IS_MAT_CONST(CxCore.CvMat)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="mat">mat</param>
        </member>
        <member name="M:CxCore.cxtypes.CV_ELEM_SIZE1(System.Int32)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="type">type</param>
        </member>
        <member name="M:CxCore.cxtypes.CV_ELEM_SIZE(System.Int32)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="type">type</param>
        </member>
        <member name="M:CxCore.cxtypes.CvMat(System.Int32,System.Int32,System.Int32)">
            <summary>
            Multi-channel matrix
            </summary>
            <param name="rows">rows</param>
            <param name="cols">cols</param>
            <param name="type">type</param>
        </member>
        <member name="M:CxCore.cxtypes.CV_MAT_ELEM_PTR_FAST(CxCore.CvMat@,System.Int32,System.Int32,System.Int32)">
            <summary>
            Return the pointer to specific element
            </summary>
            <param name="mat">Mat Array</param>
            <param name="row">Row</param>
            <param name="col">Column</param>
            <param name="pix_size">Pixel Size, e.g. 4 for integer</param>
        </member>
        <member name="M:CxCore.cxtypes.CV_MAT_ELEM_PTR(CxCore.CvMat@,System.Int32,System.Int32)">
            <summary>
            Return the pointer to specific element
            </summary>
            <param name="mat">Mat Array</param>
            <param name="row">Row</param>
            <param name="col">Column</param>
        </member>
        <member name="M:CxCore.cxtypes.CV_MAT_ELEM_BYTE(CxCore.CvMat@,System.Int32,System.Int32)">
            <summary>
            Return the element at a specific position
            </summary>
            <param name="mat">Mat Array</param>
            <param name="row">Row</param>
            <param name="col">Column</param>
        </member>
        <member name="M:CxCore.cxtypes.CV_MAT_ELEM_INT(CxCore.CvMat@,System.Int32,System.Int32)">
            <summary>
            Return the element at a specific position
            </summary>
            <param name="mat">Mat Array</param>
            <param name="row">Row</param>
            <param name="col">Column</param>
        </member>
        <member name="M:CxCore.cxtypes.CV_MAT_ELEM_FL(CxCore.CvMat@,System.Int32,System.Int32)">
            <summary>
            Return the element at a specific position
            </summary>
            <param name="mat">Mat Array</param>
            <param name="row">Row</param>
            <param name="col">Column</param>
        </member>
        <member name="M:CxCore.cxtypes.CV_MAT_ELEM_DBL(CxCore.CvMat@,System.Int32,System.Int32)">
            <summary>
            Return the element at a specific position
            </summary>
            <param name="mat">Mat Array</param>
            <param name="row">Row</param>
            <param name="col">Column</param>
        </member>
        <member name="M:CxCore.cxtypes.cvmGet(CxCore.CvMat,System.Int32,System.Int32)">
            <summary>
            Return the particular element of single-channel floating-point matrix
            </summary>
            <param name="mat">Input matrix. </param>
            <param name="row">The zero-based index of row. </param>
            <param name="col">The zero-based index of column. </param>
        </member>
        <member name="M:CxCore.cxtypes.cvmSet(CxCore.CvMat@,System.Int32,System.Int32,System.Double)">
            <summary>
            Return the particular element of single-channel floating-point matrix
            </summary>
            <param name="mat">The matrix. </param>
            <param name="row">The zero-based index of row. </param>
            <param name="col">The zero-based index of column. </param>
            <param name="value">The new value of the matrix element </param>
        </member>
        <member name="M:CxCore.cxtypes.cvCvToIplDepth(System.Int32)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="type">type</param>
        </member>
        <member name="M:CxCore.cxtypes.CvPoint(System.Int32,System.Int32)">
            <summary>
            2D point with integer coordinates
            </summary>
            <param name="x">x</param>
            <param name="y">y</param>
        </member>
        <member name="M:CxCore.cxtypes.CvPoint2D32f(System.Double,System.Double)">
            <summary>
            2D point with floating-point coordinates
            </summary>
            <param name="x">x</param>
            <param name="y">y</param>
        </member>
        <member name="M:CxCore.cxtypes.CvPointTo32f(CxCore.CvPoint)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="point">point</param>
        </member>
        <member name="M:CxCore.cxtypes.CvPointFrom32f(CxCore.CvPoint2D32f)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="point">point</param>
        </member>
        <member name="M:CxCore.cxtypes.CvPoint3D32f(System.Double,System.Double,System.Double)">
            <summary>
            3D point with floating-point coordinates
            </summary>
            <param name="x">x</param>
            <param name="y">y</param>
            <param name="z">z</param>
        </member>
        <member name="M:CxCore.cxtypes.CvPoint2D64f(System.Double,System.Double)">
            <summary>
            2D point with double precision floating-point coordinates
            </summary>
            <param name="x">x</param>
            <param name="y">y</param>
        </member>
        <member name="M:CxCore.cxtypes.CvPoint3D64f(System.Double,System.Double,System.Double)">
            <summary>
            3D point with double precision floating-point coordinates
            </summary>
            <param name="x">x</param>
            <param name="y">y</param>
            <param name="z">z</param>
        </member>
        <member name="M:CxCore.cxtypes.CvSize(System.Int32,System.Int32)">
            <summary>
            pixel-accurate size of a rectangle
            </summary>
            <param name="width">width</param>
            <param name="height">height</param>
        </member>
        <member name="M:CxCore.cxtypes.CvSize2D32f(System.Double,System.Double)">
            <summary>
            sub-pixel accurate size of a rectangle
            </summary>
            <param name="width">width</param>
            <param name="height">height</param>
        </member>
        <member name="M:CxCore.cxtypes.CvMat(System.Int32,System.Int32,System.Int32,System.IntPtr)">
            <summary>
            Multi-channel matrix
            </summary>
            <param name="rows">rows</param>
            <param name="cols">cols</param>
            <param name="type">type</param>
            <param name="data">data</param>
        </member>
        <member name="T:MachineLearning.CvRTrees">
            <summary>
            Random Trees
            </summary>
        </member>
        <member name="M:MachineLearning.CvRTrees.Finalize">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvRTrees.Dispose">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvRTrees.#ctor">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvRTrees.train(CxCore.CvMat,System.Int32,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,MachineLearning.CvRTParams)">
            <summary>
            Trains Random Trees model
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_tflag">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_sample_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_type">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_missing_mask">No comment available for this member. Please check the openCV documenation.</param>
            <param name="arg7">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvRTrees.train(CxCore.CvMat,System.Int32,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat)">
            <summary>
            Trains Random Trees model
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_tflag">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_sample_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_type">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_missing_mask">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvRTrees.train(CxCore.CvMat,System.Int32,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat)">
            <summary>
            Trains Random Trees model
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_tflag">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_sample_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_type">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvRTrees.train(CxCore.CvMat,System.Int32,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat)">
            <summary>
            Trains Random Trees model
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_tflag">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_sample_idx">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvRTrees.train(CxCore.CvMat,System.Int32,CxCore.CvMat,CxCore.CvMat)">
            <summary>
            Trains Random Trees model
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_tflag">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_idx">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvRTrees.train(CxCore.CvMat,System.Int32,CxCore.CvMat)">
            <summary>
            Trains Random Trees model
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_tflag">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvRTrees.predict(CxCore.CvMat,CxCore.CvMat)">
            <summary>
            Predicts the output for the input sample
            </summary>
            <param name="sample">No comment available for this member. Please check the openCV documenation.</param>
            <param name="missing">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvRTrees.predict(CxCore.CvMat)">
            <summary>
            Predicts the output for the input sample
            </summary>
            <param name="sample">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvRTrees.clear">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvRTrees.get_var_importance">
            <summary>
            Retrieves the variable importance array
            </summary>
        </member>
        <member name="M:MachineLearning.CvRTrees.get_proximity(CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat)">
            <summary>
            Retrieves proximitity measure between two training samples
            </summary>
            <param name="sample1">No comment available for this member. Please check the openCV documenation.</param>
            <param name="sample2">No comment available for this member. Please check the openCV documenation.</param>
            <param name="missing1">No comment available for this member. Please check the openCV documenation.</param>
            <param name="missing2">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvRTrees.get_proximity(CxCore.CvMat,CxCore.CvMat,CxCore.CvMat)">
            <summary>
            Retrieves proximitity measure between two training samples
            </summary>
            <param name="sample1">No comment available for this member. Please check the openCV documenation.</param>
            <param name="sample2">No comment available for this member. Please check the openCV documenation.</param>
            <param name="missing1">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvRTrees.get_proximity(CxCore.CvMat,CxCore.CvMat)">
            <summary>
            Retrieves proximitity measure between two training samples
            </summary>
            <param name="sample1">No comment available for this member. Please check the openCV documenation.</param>
            <param name="sample2">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvRTrees.get_active_var_mask">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvRTrees.get_rng">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvRTrees.get_tree_count">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvRTrees.get_tree(System.Int32)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="i">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="T:MachineLearning.CvRTParams">
            <summary>
            Training Parameters of Random Trees
            </summary>
        </member>
        <member name="T:MachineLearning.CvDTreeParams">
            <summary>
            Decision tree training parameters
            </summary>
        </member>
        <member name="F:MachineLearning.CvDTreeParams.swigCMemOwn">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvDTreeParams.Finalize">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvDTreeParams.Dispose">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvDTreeParams.#ctor">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvDTreeParams.#ctor(System.Int32,System.Int32,System.Single,System.Boolean,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Single[])">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="_max_depth">This parameter specifies the maximum possible depth of the tree. That is the training algorithms attempts to split a node while its depth is less than max_depth . The actual depthmay be smaller if the other termination criteria are met (see the outline of the training procedure in the beginning of the section), and/or if the tree is pruned. </param>
            <param name="_min_sample_count">A node is not split if the number of samples directed to the node is less than the parameter value. </param>
            <param name="_regression_accuracy">Another stop criteria - only for regression trees. As soon as the estimated node value differs from the node training samples responses by less than the parameter value, the node is not split further. </param>
            <param name="_use_surrogates">If true , surrogate splits are built. Surrogate splits are needed to handle missing measurements and for variable importance estimation. </param>
            <param name="_max_categories">If a discrete variable, on which the training procedure tries to make a split, takes more than max_categories values, the precise best subset estimation may take a very long time (as the algorithm is exponential). Instead, many decision trees engines (including ML) try to find sub-optimal split in this case by clustering all the samples into max_categories clusters (i.e. some categories are merged together). Note that this technique is used only in N(>2) -class classification problems. In case of regression and 2-class classification the optimal split can be found efficiently without employing clustering, thus the parameter is not used in these cases. </param>
            <param name="_cv_folds">If this parameter is >1, the tree is pruned using cv_folds -fold cross validation. </param>
            <param name="_use_1se_rule">If true , the tree is truncated a bit more by the pruning procedure. That leads to compact, and more resistant to the training data noise, but a bit less accurate decision tree. </param>
            <param name="_truncate_pruned_tree">If true , the cut off nodes (with Tn ≤ CvDTree::pruned_tree_idx ) are physically removed from the tree. Otherwise they are kept, and by decreasing CvDTree::pruned_tree_idx (e.g. setting it to -1) it is still possible to get the results from the original unpruned (or pruned less aggressively) tree. </param>
            <param name="_priors">The array of a priori class probabilities, sorted by the class label value. The parameter can be used to tune the decision tree preferences toward a certain class. For example, if users want to detect some rare anomaly occurrence, the training base will likely contain much more normal cases than anomalies, soa very good classification performance will be achieved just by considering every case as normal. To avoid this, the priorscan be specified, where the anomaly probability is artificially increased (up to 0.5 or even greater), so the weight of the misclassified anomaliesbecomes much bigger, and the tree is adjusted properly. A note about memory management: the field priors is a pointer to the array of floats. The array should be allocated by user, and released just after the CvDTreeParams structure is passed to CvDTreeTrainData or CvDTree constructors/methods (as the methods make a copy of the array). </param>
        </member>
        <member name="P:MachineLearning.CvDTreeParams.max_categories">
            <summary>
            If a discrete variable, on which the training procedure tries to make a split, takes more than max_categories values, the precise best subset estimation may take a very long time (as the algorithm is exponential). Instead, many decision trees engines (including ML) try to find sub-optimal split in this case by clustering all the samples into max_categories clusters (i.e. some categories are merged together). Note that this technique is used only in N(>2) -class classification problems. In case of regression and 2-class classification the optimal split can be found efficiently without employing clustering, thus the parameter is not used in these cases. 
            </summary>
        </member>
        <member name="P:MachineLearning.CvDTreeParams.max_depth">
            <summary>
            This parameter specifies the maximum possible depth of the tree. That is the training algorithms attempts to split a node while its depth is less than max_depth . The actual depthmay be smaller if the other termination criteria are met (see the outline of the training procedure in the beginning of the section), and/or if the tree is pruned. 
            </summary>
        </member>
        <member name="P:MachineLearning.CvDTreeParams.min_sample_count">
            <summary>
            A node is not split if the number of samples directed to the node is less than the parameter value. 
            </summary>
        </member>
        <member name="P:MachineLearning.CvDTreeParams.cv_folds">
            <summary>
            If this parameter is >1, the tree is pruned using cv_folds -fold cross validation. 
            </summary>
        </member>
        <member name="P:MachineLearning.CvDTreeParams.use_surrogates">
            <summary>
            If true , surrogate splits are built. Surrogate splits are needed to handle missing measurements and for variable importance estimation. 
            </summary>
        </member>
        <member name="P:MachineLearning.CvDTreeParams.use_1se_rule">
            <summary>
            If true , the tree is truncated a bit more by the pruning procedure. That leads to compact, and more resistant to the training data noise, but a bit less accurate decision tree. 
            </summary>
        </member>
        <member name="P:MachineLearning.CvDTreeParams.truncate_pruned_tree">
            <summary>
            If true , the cut off nodes (with Tn ≤ CvDTree::pruned_tree_idx ) are physically removed from the tree. Otherwise they are kept, and by decreasing CvDTree::pruned_tree_idx (e.g. setting it to -1) it is still possible to get the results from the original unpruned (or pruned less aggressively) tree. 
            </summary>
        </member>
        <member name="P:MachineLearning.CvDTreeParams.regression_accuracy">
            <summary>
            Another stop criteria - only for regression trees. As soon as the estimated node value differs from the node training samples responses by less than the parameter value, the node is not split further. 
            </summary>
        </member>
        <member name="P:MachineLearning.CvDTreeParams.priors">
            <summary>
            The array of a priori class probabilities, sorted by the class label value. The parameter can be used to tune the decision tree preferences toward a certain class. For example, if users want to detect some rare anomaly occurrence, the training base will likely contain much more normal cases than anomalies, soa very good classification performance will be achieved just by considering every case as normal. To avoid this, the priorscan be specified, where the anomaly probability is artificially increased (up to 0.5 or even greater), so the weight of the misclassified anomaliesbecomes much bigger, and the tree is adjusted properly. A note about memory management: the field priors is a pointer to the array of floats. The array should be allocated by user, and released just after the CvDTreeParams structure is passed to CvDTreeTrainData or CvDTree constructors/methods (as the methods make a copy of the array). 
            </summary>
        </member>
        <member name="M:MachineLearning.CvRTParams.Finalize">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvRTParams.Dispose">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvRTParams.#ctor">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvRTParams.#ctor(System.Int32,System.Int32,System.Single,System.Boolean,System.Int32,System.Single[],System.Boolean,System.Int32,System.Int32,System.Single,System.Int32)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="_max_depth">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_min_sample_count">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_regression_accuracy">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_use_surrogates">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_max_categories">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_priors">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_calc_var_importance">If it is set, then variable importance is computed by the training procedure. To retrieve the computed variable importance array, call the method CvRTrees::get_var_importance() . </param>
            <param name="_nactive_vars">The number of variables that are randomly selected at each tree node and that are used to find the best split(s). </param>
            <param name="max_num_of_trees_in_the_forest">No comment available for this member. Please check the openCV documenation.</param>
            <param name="forest_accuracy">No comment available for this member. Please check the openCV documenation.</param>
            <param name="termcrit_type">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="P:MachineLearning.CvRTParams.calc_var_importance">
            <summary>
            If it is set, then variable importance is computed by the training procedure. To retrieve the computed variable importance array, call the method CvRTrees::get_var_importance() . 
            </summary>
        </member>
        <member name="P:MachineLearning.CvRTParams.nactive_vars">
            <summary>
            The number of variables that are randomly selected at each tree node and that are used to find the best split(s). 
            </summary>
        </member>
        <member name="P:MachineLearning.CvRTParams.term_crit">
            <summary>
            Termination criteria for growing the forest: term_crit.max_iter is the maximum number of trees in the forest (see also max_tree_count parameter of the constructor , by default it is set to 50) term_crit.epsilon is the sufficient accuracy ( OOB error ). Consider the set of the feature vectors {x 1 , x 2 ,..., x N }: N vectors from d -dimensional Euclidean space drawn from a Gaussian mixture: where m is the number of mixtures, p k is the normal distribution density with the mean a k and covariance matrix S k , π k is the weight of k-th mixture.Given the number of mixtures m and the samples {x i , i=1..N} the algorithm finds the maximum-likelihood estimates (MLE) of the all the mixture parameters, i.e. a k , S k and π k : EM algorithm is an iterative procedure. Each iteration of it includes two steps.At the first step (Expectation-step, or E-step), we find a probability p i,k (denoted α i,k in the formula below)of sample #i to belong to mixture #k using the currently available mixture parameter estimates: At the second step (Maximization-step, or M-step) the mixture parameter estimatesare refined using the computed probabilities: Alternatively, the algorithm may start with M-step when initial values for p i,k can be provided. Another alternative, when p i,k are unknown,is to use a simpler clustering algorithm to pre-cluster the input samples and thus obtaininitial p i,k . Often (and in ML) k-means algorithm is used for that purpose. One of the main that EM algorithm should deal with is the large number of parameters to estimate.The majority of the parameters sits in covariation matrices, which are d×d elements each(where d is the feature space dimensionality). However, in many practical problemsthe covariation matrices are close to diagonal, or even to μ k *I ,where I is identity matrix and μ k is mixture-dependent "scale" parameter.So a robust computation scheme could be to start with the harder constraints onthe covariation matrices and then use the estimated parameters as an input fora less constrained optimization problem (often a diagonal covariation matrix is already a good enoughapproximation). References: [Bilmes98] J. A. Bilmes. A Gentle Tutorial of the EM Algorithm and its Application to ParameterEstimation for Gaussian Mixture and Hidden Markov Models.Technical Report TR-97-021,International Computer Science Institute and Computer Science Division,University of California at Berkeley, April 1998. CvEMParams Parameters of EM algorithm struct CvEMParams{ CvEMParams() : nclusters(10), cov_mat_type(CvEM::COV_MAT_DIAGONAL), start_step(CvEM::START_AUTO_STEP), probs(0), weights(0), means(0), covs(0) { term_crit=cvTermCriteria( CV_TERMCRIT_ITER+CV_TERMCRIT_EPS, 100, FLT_EPSILON ); } CvEMParams( int _nclusters, int _cov_mat_type=1/*CvEM::COV_MAT_DIAGONAL*/, int _start_step=0/*CvEM::START_AUTO_STEP*/, CvTermCriteria _term_crit=cvTermCriteria(CV_TERMCRIT_ITER+CV_TERMCRIT_EPS, 100, FLT_EPSILON), CvMat* _probs=0, CvMat* _weights=0, CvMat* _means=0, CvMat** _covs=0 ) : nclusters(_nclusters), cov_mat_type(_cov_mat_type), start_step(_start_step), probs(_probs), weights(_weights), means(_means), covs(_covs), term_crit(_term_crit) {} int nclusters; int cov_mat_type; int start_step; const CvMat* probs; const CvMat* weights; const CvMat* means; const CvMat** covs; CvTermCriteria term_crit;}; Termination criteria of the procedure. EM algorithm stops either after a certain number of iterations ( term_crit.num_iter ), or when the parameters change too little (no more than term_crit.epsilon ) from iteration to iteration. 
            </summary>
        </member>
        <member name="T:MachineLearning.CvANN_MLP">
            <summary>
            MLP model
            </summary>
        </member>
        <member name="M:MachineLearning.CvANN_MLP.Finalize">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvANN_MLP.Dispose">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvANN_MLP.#ctor">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvANN_MLP.#ctor(CxCore.CvMat,System.Int32,System.Double,System.Double)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="_layer_sizes">The integer vector specifies the number of neurons in each layer including the input and output layers. </param>
            <param name="_activ_func">Specifies the activation function for each neuron; one of CvANN_MLP::IDENTITY , CvANN_MLP::SIGMOID_SYM and CvANN_MLP::GAUSSIAN . </param>
            <param name="_f_param1">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_f_param2">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvANN_MLP.#ctor(CxCore.CvMat,System.Int32,System.Double)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="_layer_sizes">The integer vector specifies the number of neurons in each layer including the input and output layers. </param>
            <param name="_activ_func">Specifies the activation function for each neuron; one of CvANN_MLP::IDENTITY , CvANN_MLP::SIGMOID_SYM and CvANN_MLP::GAUSSIAN . </param>
            <param name="_f_param1">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvANN_MLP.#ctor(CxCore.CvMat,System.Int32)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="_layer_sizes">The integer vector specifies the number of neurons in each layer including the input and output layers. </param>
            <param name="_activ_func">Specifies the activation function for each neuron; one of CvANN_MLP::IDENTITY , CvANN_MLP::SIGMOID_SYM and CvANN_MLP::GAUSSIAN . </param>
        </member>
        <member name="M:MachineLearning.CvANN_MLP.#ctor(CxCore.CvMat)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="_layer_sizes">The integer vector specifies the number of neurons in each layer including the input and output layers. </param>
        </member>
        <member name="M:MachineLearning.CvANN_MLP.create(CxCore.CvMat,System.Int32,System.Double,System.Double)">
            <summary>
            Constructs the MLP with the specified topology
            </summary>
            <param name="_layer_sizes">The integer vector specifies the number of neurons in each layer including the input and output layers. </param>
            <param name="_activ_func">Specifies the activation function for each neuron; one of CvANN_MLP::IDENTITY , CvANN_MLP::SIGMOID_SYM and CvANN_MLP::GAUSSIAN . </param>
            <param name="_f_param1">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_f_param2">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvANN_MLP.create(CxCore.CvMat,System.Int32,System.Double)">
            <summary>
            Constructs the MLP with the specified topology
            </summary>
            <param name="_layer_sizes">The integer vector specifies the number of neurons in each layer including the input and output layers. </param>
            <param name="_activ_func">Specifies the activation function for each neuron; one of CvANN_MLP::IDENTITY , CvANN_MLP::SIGMOID_SYM and CvANN_MLP::GAUSSIAN . </param>
            <param name="_f_param1">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvANN_MLP.create(CxCore.CvMat,System.Int32)">
            <summary>
            Constructs the MLP with the specified topology
            </summary>
            <param name="_layer_sizes">The integer vector specifies the number of neurons in each layer including the input and output layers. </param>
            <param name="_activ_func">Specifies the activation function for each neuron; one of CvANN_MLP::IDENTITY , CvANN_MLP::SIGMOID_SYM and CvANN_MLP::GAUSSIAN . </param>
        </member>
        <member name="M:MachineLearning.CvANN_MLP.create(CxCore.CvMat)">
            <summary>
            Constructs the MLP with the specified topology
            </summary>
            <param name="_layer_sizes">The integer vector specifies the number of neurons in each layer including the input and output layers. </param>
        </member>
        <member name="M:MachineLearning.CvANN_MLP.train(CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,MachineLearning.CvANN_MLP_TrainParams,System.Int32)">
            <summary>
            Trains/updates MLP
            </summary>
            <param name="_inputs">A floating-point matrix of input vectors, one vector per row. </param>
            <param name="_outputs">A floating-point matrix of the corresponding output vectors, one vector per row. </param>
            <param name="_sample_weights">(RPROP only) The optional floating-point vector of weights for each sample. Some samples may be more important than others for training, e.g. user may want to gain the weight of certain classes to find the right balance between hit-rate and false-alarm rate etc. </param>
            <param name="_sample_idx">The optional integer vector indicating the samples (i.e. rows of _inputs and _outputs ) that are taken into account. </param>
            <param name="_params">The training params. See CvANN_MLP_TrainParams description. </param>
            <param name="flags">The various parameters to control the training algorithm. May be a combination of the following: UPDATE_WEIGHTS = 1 - algorithm updates the network weights, rather than computes them from scratch (in the latter case the weights areinitialized using Nguyen-Widrow algorithm). NO_INPUT_SCALE - algorithm does not normalize the input vectors. If this flag is not set, the training algorithm normalizes each input feature independently, shifting its mean value to 0 and making the standard deviation =1 . If the network is assumed to be updated frequently, the new training data could be much different from original one. In this case user should take care of proper normalization. NO_OUTPUT_SCALE - algorithm does not normalize the output vectors. If the flag is not set, the training algorithm normalizes each output features independently, bytransforming it to the certain range depending on the activation function used. </param>
        </member>
        <member name="M:MachineLearning.CvANN_MLP.train(CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,MachineLearning.CvANN_MLP_TrainParams)">
            <summary>
            Trains/updates MLP
            </summary>
            <param name="_inputs">A floating-point matrix of input vectors, one vector per row. </param>
            <param name="_outputs">A floating-point matrix of the corresponding output vectors, one vector per row. </param>
            <param name="_sample_weights">(RPROP only) The optional floating-point vector of weights for each sample. Some samples may be more important than others for training, e.g. user may want to gain the weight of certain classes to find the right balance between hit-rate and false-alarm rate etc. </param>
            <param name="_sample_idx">The optional integer vector indicating the samples (i.e. rows of _inputs and _outputs ) that are taken into account. </param>
            <param name="_params">The training params. See CvANN_MLP_TrainParams description. </param>
        </member>
        <member name="M:MachineLearning.CvANN_MLP.train(CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat)">
            <summary>
            Trains/updates MLP
            </summary>
            <param name="_inputs">A floating-point matrix of input vectors, one vector per row. </param>
            <param name="_outputs">A floating-point matrix of the corresponding output vectors, one vector per row. </param>
            <param name="_sample_weights">(RPROP only) The optional floating-point vector of weights for each sample. Some samples may be more important than others for training, e.g. user may want to gain the weight of certain classes to find the right balance between hit-rate and false-alarm rate etc. </param>
            <param name="_sample_idx">The optional integer vector indicating the samples (i.e. rows of _inputs and _outputs ) that are taken into account. </param>
        </member>
        <member name="M:MachineLearning.CvANN_MLP.train(CxCore.CvMat,CxCore.CvMat,CxCore.CvMat)">
            <summary>
            Trains/updates MLP
            </summary>
            <param name="_inputs">A floating-point matrix of input vectors, one vector per row. </param>
            <param name="_outputs">A floating-point matrix of the corresponding output vectors, one vector per row. </param>
            <param name="_sample_weights">(RPROP only) The optional floating-point vector of weights for each sample. Some samples may be more important than others for training, e.g. user may want to gain the weight of certain classes to find the right balance between hit-rate and false-alarm rate etc. </param>
        </member>
        <member name="M:MachineLearning.CvANN_MLP.predict(CxCore.CvMat,CxCore.CvMat)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="_inputs">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_outputs">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvANN_MLP.clear">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvANN_MLP.get_layer_count">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvANN_MLP.get_layer_sizes">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvANN_MLP.get_weights(System.Int32)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="layer">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="F:MachineLearning.CvANN_MLP.IDENTITY">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:MachineLearning.CvANN_MLP.SIGMOID_SYM">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:MachineLearning.CvANN_MLP.GAUSSIAN">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:MachineLearning.CvANN_MLP.UPDATE_WEIGHTS">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:MachineLearning.CvANN_MLP.NO_INPUT_SCALE">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:MachineLearning.CvANN_MLP.NO_OUTPUT_SCALE">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="T:CvMisc.cvmisc">
            <summary>
            Miscellaneous addons and types.
            </summary>
        </member>
        <member name="F:CvMisc.cvmisc.CV_ORIGIN_TL">
            <summary>
            Value = 0; No further comment available.
            </summary>
        </member>
        <member name="F:CvMisc.cvmisc.CV_ORIGIN_BL">
            <summary>
            Value = 1; No further comment available.
            </summary>
        </member>
        <member name="T:MachineLearning.CvDTreeSplit">
            <summary>
            Decision tree node split
            </summary>
        </member>
        <member name="F:MachineLearning.CvDTreeSplit.swigCMemOwn">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvDTreeSplit.Finalize">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvDTreeSplit.Dispose">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="P:MachineLearning.CvDTreeSplit.var_idx">
            <summary>
            Index of the variable used in the split 
            </summary>
        </member>
        <member name="P:MachineLearning.CvDTreeSplit.inversed">
            <summary>
            When it equals to 1, the inverse split rule is used(i.e. left and right branches are exchanged in the expressions below) 
            </summary>
        </member>
        <member name="P:MachineLearning.CvDTreeSplit.quality">
            <summary>
            The split quality, a positive number. It is used to choose the best primary split, then to choose and sort the surrogate splits.After the tree is constructed, it is also used to compute variable importance. 
            </summary>
        </member>
        <member name="P:MachineLearning.CvDTreeSplit.next">
            <summary>
            Pointer to the next split in the node split list. 
            </summary>
        </member>
        <member name="T:MachineLearning.CvDTreeNode">
            <summary>
            Decision tree node
            </summary>
        </member>
        <member name="F:MachineLearning.CvDTreeNode.swigCMemOwn">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvDTreeNode.Finalize">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvDTreeNode.Dispose">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="P:MachineLearning.CvDTreeNode.class_idx">
            <summary>
            The assigned to the node normalized class index (to 0..class_count-1 range), it is used internally in classification trees and tree ensembles. 
            </summary>
        </member>
        <member name="P:MachineLearning.CvDTreeNode.Tn">
            <summary>
            The tree index in a ordered sequence of trees. The indices are used during and after the pruning procedure. The root node has the maximum value Tn of the whole tree, child nodes have Tn less than or equal to the parent's Tn , and the nodes with Tn≤ CvDTree ::pruned_tree_idx are not taken into consideration at the prediction stage (the corresponding branches areconsidered as cut-off), even if they have not been physically deleted from the tree at the pruning stage. 
            </summary>
        </member>
        <member name="P:MachineLearning.CvDTreeNode.value">
            <summary>
            The value assigned to the tree node. It is either a class label, or the estimated function value. 
            </summary>
        </member>
        <member name="P:MachineLearning.CvDTreeNode.parent">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="P:MachineLearning.CvDTreeNode.left">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="P:MachineLearning.CvDTreeNode.right">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="P:MachineLearning.CvDTreeNode.split">
            <summary>
            Pointer to the first (primary) split. 
            </summary>
        </member>
        <member name="P:MachineLearning.CvDTreeNode.sample_count">
            <summary>
            The number of samples that fall into the node at the training stage. It is used to resolve the difficult cases - when the variable for the primary split is missing, and all the variables for other surrogate splits aremissing too, the sample is directed to the left if left->sample_count>right->sample_count and to the right otherwise. 
            </summary>
        </member>
        <member name="P:MachineLearning.CvDTreeNode.depth">
            <summary>
            The node depth, the root node depth is 0, the child nodes depth is the parent's depth + 1. 
            </summary>
        </member>
        <member name="T:MachineLearning.CvEMParams">
            <summary>
            Parameters of EM algorithm
            </summary>
        </member>
        <member name="F:MachineLearning.CvEMParams.swigCMemOwn">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvEMParams.Finalize">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvEMParams.Dispose">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvEMParams.#ctor">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvEMParams.#ctor(System.Int32,System.Int32,System.Int32,CxCore.CvTermCriteria,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,System.IntPtr)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="_nclusters">The number of mixtures. Some of EM implementation could determine the optimal number of mixtures within a specified value range, but that is not the case in ML yet. </param>
            <param name="_cov_mat_type">The type of the mixture covariation matrices; should be one of the following: CvEM::COV_MAT_GENERIC - a covariation matrix of each mixture may be arbitrary symmetrical positively defined matrix, so the number of free parameters in each matrix is about d 2 /2. It is not recommended to use this option, unless there is pretty accurate initial estimation of the parameters and/or a huge number of training samples. CvEM::COV_MAT_DIAGONAL - a covariation matrix of each mixture may be arbitrary diagonal matrix with positive diagonal elements, that is, non-diagonal elements are forced to be 0's, so the number of free parameters is d for each matrix. This is most commonly used option yielding good estimation results. CvEM::COV_MAT_SPHERICAL - a covariation matrix of each mixture is a scaled identity matrix, μ k *I , so the only parameter to be estimated is μ k . The option may be used in special cases, when the constraint is relevant, or as a first step in the optimization (e.g. in case when the data is preprocessed with PCA ). The results of such preliminary estimation may be passed again to the optimization procedure, this time with cov_mat_type=CvEM::COV_MAT_DIAGONAL . </param>
            <param name="_start_step">The initial step the algorithm starts from; should be one of the following: CvEM::START_E_STEP - the algorithm starts with E-step. At least, the initial values of mean vectors, CvEMParams::means must be passed. Optionally, the user may also provide initial values for weights ( CvEMParams::weights ) and/or covariation matrices ( CvEMParams::covs ). CvEM::START_M_STEP - the algorithm starts with M-step. The initial probabilities p i,k must be provided. CvEM::START_AUTO_STEP - No values are required from the user, k-means algorithm is used to estimate initial mixtures parameters. </param>
            <param name="_term_crit">Termination criteria of the procedure. EM algorithm stops either after a certain number of iterations ( term_crit.num_iter ), or when the parameters change too little (no more than term_crit.epsilon ) from iteration to iteration. </param>
            <param name="_probs">Initial probabilities p i,k ; are used (and must be not NULL) only when start_step=CvEM::START_M_STEP . </param>
            <param name="_weights">Initial mixture weights π k ; are used (if not NULL) only when start_step=CvEM::START_E_STEP . </param>
            <param name="_means">Initial mixture means a k ; are used (and must be not NULL) only when start_step=CvEM::START_E_STEP . </param>
            <param name="_covs">Initial mixture covariation matrices S k ; are used (if not NULL) only when start_step=CvEM::START_E_STEP . </param>
        </member>
        <member name="M:MachineLearning.CvEMParams.#ctor(System.Int32,System.Int32,System.Int32,CxCore.CvTermCriteria,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="_nclusters">The number of mixtures. Some of EM implementation could determine the optimal number of mixtures within a specified value range, but that is not the case in ML yet. </param>
            <param name="_cov_mat_type">The type of the mixture covariation matrices; should be one of the following: CvEM::COV_MAT_GENERIC - a covariation matrix of each mixture may be arbitrary symmetrical positively defined matrix, so the number of free parameters in each matrix is about d 2 /2. It is not recommended to use this option, unless there is pretty accurate initial estimation of the parameters and/or a huge number of training samples. CvEM::COV_MAT_DIAGONAL - a covariation matrix of each mixture may be arbitrary diagonal matrix with positive diagonal elements, that is, non-diagonal elements are forced to be 0's, so the number of free parameters is d for each matrix. This is most commonly used option yielding good estimation results. CvEM::COV_MAT_SPHERICAL - a covariation matrix of each mixture is a scaled identity matrix, μ k *I , so the only parameter to be estimated is μ k . The option may be used in special cases, when the constraint is relevant, or as a first step in the optimization (e.g. in case when the data is preprocessed with PCA ). The results of such preliminary estimation may be passed again to the optimization procedure, this time with cov_mat_type=CvEM::COV_MAT_DIAGONAL . </param>
            <param name="_start_step">The initial step the algorithm starts from; should be one of the following: CvEM::START_E_STEP - the algorithm starts with E-step. At least, the initial values of mean vectors, CvEMParams::means must be passed. Optionally, the user may also provide initial values for weights ( CvEMParams::weights ) and/or covariation matrices ( CvEMParams::covs ). CvEM::START_M_STEP - the algorithm starts with M-step. The initial probabilities p i,k must be provided. CvEM::START_AUTO_STEP - No values are required from the user, k-means algorithm is used to estimate initial mixtures parameters. </param>
            <param name="_term_crit">Termination criteria of the procedure. EM algorithm stops either after a certain number of iterations ( term_crit.num_iter ), or when the parameters change too little (no more than term_crit.epsilon ) from iteration to iteration. </param>
            <param name="_probs">Initial probabilities p i,k ; are used (and must be not NULL) only when start_step=CvEM::START_M_STEP . </param>
            <param name="_weights">Initial mixture weights π k ; are used (if not NULL) only when start_step=CvEM::START_E_STEP . </param>
            <param name="_means">Initial mixture means a k ; are used (and must be not NULL) only when start_step=CvEM::START_E_STEP . </param>
        </member>
        <member name="M:MachineLearning.CvEMParams.#ctor(System.Int32,System.Int32,System.Int32,CxCore.CvTermCriteria,CxCore.CvMat,CxCore.CvMat)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="_nclusters">The number of mixtures. Some of EM implementation could determine the optimal number of mixtures within a specified value range, but that is not the case in ML yet. </param>
            <param name="_cov_mat_type">The type of the mixture covariation matrices; should be one of the following: CvEM::COV_MAT_GENERIC - a covariation matrix of each mixture may be arbitrary symmetrical positively defined matrix, so the number of free parameters in each matrix is about d 2 /2. It is not recommended to use this option, unless there is pretty accurate initial estimation of the parameters and/or a huge number of training samples. CvEM::COV_MAT_DIAGONAL - a covariation matrix of each mixture may be arbitrary diagonal matrix with positive diagonal elements, that is, non-diagonal elements are forced to be 0's, so the number of free parameters is d for each matrix. This is most commonly used option yielding good estimation results. CvEM::COV_MAT_SPHERICAL - a covariation matrix of each mixture is a scaled identity matrix, μ k *I , so the only parameter to be estimated is μ k . The option may be used in special cases, when the constraint is relevant, or as a first step in the optimization (e.g. in case when the data is preprocessed with PCA ). The results of such preliminary estimation may be passed again to the optimization procedure, this time with cov_mat_type=CvEM::COV_MAT_DIAGONAL . </param>
            <param name="_start_step">The initial step the algorithm starts from; should be one of the following: CvEM::START_E_STEP - the algorithm starts with E-step. At least, the initial values of mean vectors, CvEMParams::means must be passed. Optionally, the user may also provide initial values for weights ( CvEMParams::weights ) and/or covariation matrices ( CvEMParams::covs ). CvEM::START_M_STEP - the algorithm starts with M-step. The initial probabilities p i,k must be provided. CvEM::START_AUTO_STEP - No values are required from the user, k-means algorithm is used to estimate initial mixtures parameters. </param>
            <param name="_term_crit">Termination criteria of the procedure. EM algorithm stops either after a certain number of iterations ( term_crit.num_iter ), or when the parameters change too little (no more than term_crit.epsilon ) from iteration to iteration. </param>
            <param name="_probs">Initial probabilities p i,k ; are used (and must be not NULL) only when start_step=CvEM::START_M_STEP . </param>
            <param name="_weights">Initial mixture weights π k ; are used (if not NULL) only when start_step=CvEM::START_E_STEP . </param>
        </member>
        <member name="M:MachineLearning.CvEMParams.#ctor(System.Int32,System.Int32,System.Int32,CxCore.CvTermCriteria,CxCore.CvMat)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="_nclusters">The number of mixtures. Some of EM implementation could determine the optimal number of mixtures within a specified value range, but that is not the case in ML yet. </param>
            <param name="_cov_mat_type">The type of the mixture covariation matrices; should be one of the following: CvEM::COV_MAT_GENERIC - a covariation matrix of each mixture may be arbitrary symmetrical positively defined matrix, so the number of free parameters in each matrix is about d 2 /2. It is not recommended to use this option, unless there is pretty accurate initial estimation of the parameters and/or a huge number of training samples. CvEM::COV_MAT_DIAGONAL - a covariation matrix of each mixture may be arbitrary diagonal matrix with positive diagonal elements, that is, non-diagonal elements are forced to be 0's, so the number of free parameters is d for each matrix. This is most commonly used option yielding good estimation results. CvEM::COV_MAT_SPHERICAL - a covariation matrix of each mixture is a scaled identity matrix, μ k *I , so the only parameter to be estimated is μ k . The option may be used in special cases, when the constraint is relevant, or as a first step in the optimization (e.g. in case when the data is preprocessed with PCA ). The results of such preliminary estimation may be passed again to the optimization procedure, this time with cov_mat_type=CvEM::COV_MAT_DIAGONAL . </param>
            <param name="_start_step">The initial step the algorithm starts from; should be one of the following: CvEM::START_E_STEP - the algorithm starts with E-step. At least, the initial values of mean vectors, CvEMParams::means must be passed. Optionally, the user may also provide initial values for weights ( CvEMParams::weights ) and/or covariation matrices ( CvEMParams::covs ). CvEM::START_M_STEP - the algorithm starts with M-step. The initial probabilities p i,k must be provided. CvEM::START_AUTO_STEP - No values are required from the user, k-means algorithm is used to estimate initial mixtures parameters. </param>
            <param name="_term_crit">Termination criteria of the procedure. EM algorithm stops either after a certain number of iterations ( term_crit.num_iter ), or when the parameters change too little (no more than term_crit.epsilon ) from iteration to iteration. </param>
            <param name="_probs">Initial probabilities p i,k ; are used (and must be not NULL) only when start_step=CvEM::START_M_STEP . </param>
        </member>
        <member name="M:MachineLearning.CvEMParams.#ctor(System.Int32,System.Int32,System.Int32,CxCore.CvTermCriteria)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="_nclusters">The number of mixtures. Some of EM implementation could determine the optimal number of mixtures within a specified value range, but that is not the case in ML yet. </param>
            <param name="_cov_mat_type">The type of the mixture covariation matrices; should be one of the following: CvEM::COV_MAT_GENERIC - a covariation matrix of each mixture may be arbitrary symmetrical positively defined matrix, so the number of free parameters in each matrix is about d 2 /2. It is not recommended to use this option, unless there is pretty accurate initial estimation of the parameters and/or a huge number of training samples. CvEM::COV_MAT_DIAGONAL - a covariation matrix of each mixture may be arbitrary diagonal matrix with positive diagonal elements, that is, non-diagonal elements are forced to be 0's, so the number of free parameters is d for each matrix. This is most commonly used option yielding good estimation results. CvEM::COV_MAT_SPHERICAL - a covariation matrix of each mixture is a scaled identity matrix, μ k *I , so the only parameter to be estimated is μ k . The option may be used in special cases, when the constraint is relevant, or as a first step in the optimization (e.g. in case when the data is preprocessed with PCA ). The results of such preliminary estimation may be passed again to the optimization procedure, this time with cov_mat_type=CvEM::COV_MAT_DIAGONAL . </param>
            <param name="_start_step">The initial step the algorithm starts from; should be one of the following: CvEM::START_E_STEP - the algorithm starts with E-step. At least, the initial values of mean vectors, CvEMParams::means must be passed. Optionally, the user may also provide initial values for weights ( CvEMParams::weights ) and/or covariation matrices ( CvEMParams::covs ). CvEM::START_M_STEP - the algorithm starts with M-step. The initial probabilities p i,k must be provided. CvEM::START_AUTO_STEP - No values are required from the user, k-means algorithm is used to estimate initial mixtures parameters. </param>
            <param name="_term_crit">Termination criteria of the procedure. EM algorithm stops either after a certain number of iterations ( term_crit.num_iter ), or when the parameters change too little (no more than term_crit.epsilon ) from iteration to iteration. </param>
        </member>
        <member name="M:MachineLearning.CvEMParams.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="_nclusters">The number of mixtures. Some of EM implementation could determine the optimal number of mixtures within a specified value range, but that is not the case in ML yet. </param>
            <param name="_cov_mat_type">The type of the mixture covariation matrices; should be one of the following: CvEM::COV_MAT_GENERIC - a covariation matrix of each mixture may be arbitrary symmetrical positively defined matrix, so the number of free parameters in each matrix is about d 2 /2. It is not recommended to use this option, unless there is pretty accurate initial estimation of the parameters and/or a huge number of training samples. CvEM::COV_MAT_DIAGONAL - a covariation matrix of each mixture may be arbitrary diagonal matrix with positive diagonal elements, that is, non-diagonal elements are forced to be 0's, so the number of free parameters is d for each matrix. This is most commonly used option yielding good estimation results. CvEM::COV_MAT_SPHERICAL - a covariation matrix of each mixture is a scaled identity matrix, μ k *I , so the only parameter to be estimated is μ k . The option may be used in special cases, when the constraint is relevant, or as a first step in the optimization (e.g. in case when the data is preprocessed with PCA ). The results of such preliminary estimation may be passed again to the optimization procedure, this time with cov_mat_type=CvEM::COV_MAT_DIAGONAL . </param>
            <param name="_start_step">The initial step the algorithm starts from; should be one of the following: CvEM::START_E_STEP - the algorithm starts with E-step. At least, the initial values of mean vectors, CvEMParams::means must be passed. Optionally, the user may also provide initial values for weights ( CvEMParams::weights ) and/or covariation matrices ( CvEMParams::covs ). CvEM::START_M_STEP - the algorithm starts with M-step. The initial probabilities p i,k must be provided. CvEM::START_AUTO_STEP - No values are required from the user, k-means algorithm is used to estimate initial mixtures parameters. </param>
        </member>
        <member name="M:MachineLearning.CvEMParams.#ctor(System.Int32,System.Int32)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="_nclusters">The number of mixtures. Some of EM implementation could determine the optimal number of mixtures within a specified value range, but that is not the case in ML yet. </param>
            <param name="_cov_mat_type">The type of the mixture covariation matrices; should be one of the following: CvEM::COV_MAT_GENERIC - a covariation matrix of each mixture may be arbitrary symmetrical positively defined matrix, so the number of free parameters in each matrix is about d 2 /2. It is not recommended to use this option, unless there is pretty accurate initial estimation of the parameters and/or a huge number of training samples. CvEM::COV_MAT_DIAGONAL - a covariation matrix of each mixture may be arbitrary diagonal matrix with positive diagonal elements, that is, non-diagonal elements are forced to be 0's, so the number of free parameters is d for each matrix. This is most commonly used option yielding good estimation results. CvEM::COV_MAT_SPHERICAL - a covariation matrix of each mixture is a scaled identity matrix, μ k *I , so the only parameter to be estimated is μ k . The option may be used in special cases, when the constraint is relevant, or as a first step in the optimization (e.g. in case when the data is preprocessed with PCA ). The results of such preliminary estimation may be passed again to the optimization procedure, this time with cov_mat_type=CvEM::COV_MAT_DIAGONAL . </param>
        </member>
        <member name="M:MachineLearning.CvEMParams.#ctor(System.Int32)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="_nclusters">The number of mixtures. Some of EM implementation could determine the optimal number of mixtures within a specified value range, but that is not the case in ML yet. </param>
        </member>
        <member name="P:MachineLearning.CvEMParams.nclusters">
            <summary>
            The number of mixtures. Some of EM implementation could determine the optimal number of mixtures within a specified value range, but that is not the case in ML yet. 
            </summary>
        </member>
        <member name="P:MachineLearning.CvEMParams.cov_mat_type">
            <summary>
            The type of the mixture covariation matrices; should be one of the following: CvEM::COV_MAT_GENERIC - a covariation matrix of each mixture may be arbitrary symmetrical positively defined matrix, so the number of free parameters in each matrix is about d 2 /2. It is not recommended to use this option, unless there is pretty accurate initial estimation of the parameters and/or a huge number of training samples. CvEM::COV_MAT_DIAGONAL - a covariation matrix of each mixture may be arbitrary diagonal matrix with positive diagonal elements, that is, non-diagonal elements are forced to be 0's, so the number of free parameters is d for each matrix. This is most commonly used option yielding good estimation results. CvEM::COV_MAT_SPHERICAL - a covariation matrix of each mixture is a scaled identity matrix, μ k *I , so the only parameter to be estimated is μ k . The option may be used in special cases, when the constraint is relevant, or as a first step in the optimization (e.g. in case when the data is preprocessed with PCA ). The results of such preliminary estimation may be passed again to the optimization procedure, this time with cov_mat_type=CvEM::COV_MAT_DIAGONAL . 
            </summary>
        </member>
        <member name="P:MachineLearning.CvEMParams.start_step">
            <summary>
            The initial step the algorithm starts from; should be one of the following: CvEM::START_E_STEP - the algorithm starts with E-step. At least, the initial values of mean vectors, CvEMParams::means must be passed. Optionally, the user may also provide initial values for weights ( CvEMParams::weights ) and/or covariation matrices ( CvEMParams::covs ). CvEM::START_M_STEP - the algorithm starts with M-step. The initial probabilities p i,k must be provided. CvEM::START_AUTO_STEP - No values are required from the user, k-means algorithm is used to estimate initial mixtures parameters. 
            </summary>
        </member>
        <member name="P:MachineLearning.CvEMParams.probs">
            <summary>
            Initial probabilities p i,k ; are used (and must be not NULL) only when start_step=CvEM::START_M_STEP . 
            </summary>
        </member>
        <member name="P:MachineLearning.CvEMParams.weights">
            <summary>
            Initial mixture weights π k ; are used (if not NULL) only when start_step=CvEM::START_E_STEP . 
            </summary>
        </member>
        <member name="P:MachineLearning.CvEMParams.means">
            <summary>
            Initial mixture means a k ; are used (and must be not NULL) only when start_step=CvEM::START_E_STEP . 
            </summary>
        </member>
        <member name="P:MachineLearning.CvEMParams.covs">
            <summary>
            Initial mixture covariation matrices S k ; are used (if not NULL) only when start_step=CvEM::START_E_STEP . 
            </summary>
        </member>
        <member name="P:MachineLearning.CvEMParams.term_crit">
            <summary>
            Termination criteria of the procedure. EM algorithm stops either after a certain number of iterations ( term_crit.num_iter ), or when the parameters change too little (no more than term_crit.epsilon ) from iteration to iteration. 
            </summary>
        </member>
        <member name="T:MachineLearning.CvDTreeTrainData">
            <summary>
            Decision tree training data and shared data for tree ensembles
            </summary>
        </member>
        <member name="F:MachineLearning.CvDTreeTrainData.swigCMemOwn">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvDTreeTrainData.Finalize">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvDTreeTrainData.Dispose">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvDTreeTrainData.#ctor">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvDTreeTrainData.#ctor(CxCore.CvMat,System.Int32,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,MachineLearning.CvDTreeParams,System.Boolean,System.Boolean)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_tflag">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_sample_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_type">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_missing_mask">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_params">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_shared">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_add_labels">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvDTreeTrainData.#ctor(CxCore.CvMat,System.Int32,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,MachineLearning.CvDTreeParams,System.Boolean)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_tflag">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_sample_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_type">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_missing_mask">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_params">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_shared">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvDTreeTrainData.#ctor(CxCore.CvMat,System.Int32,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,MachineLearning.CvDTreeParams)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_tflag">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_sample_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_type">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_missing_mask">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_params">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvDTreeTrainData.#ctor(CxCore.CvMat,System.Int32,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_tflag">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_sample_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_type">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_missing_mask">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvDTreeTrainData.#ctor(CxCore.CvMat,System.Int32,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_tflag">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_sample_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_type">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvDTreeTrainData.#ctor(CxCore.CvMat,System.Int32,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_tflag">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_sample_idx">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvDTreeTrainData.#ctor(CxCore.CvMat,System.Int32,CxCore.CvMat,CxCore.CvMat)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_tflag">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_idx">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvDTreeTrainData.#ctor(CxCore.CvMat,System.Int32,CxCore.CvMat)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_tflag">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvDTreeTrainData.set_data(CxCore.CvMat,System.Int32,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,MachineLearning.CvDTreeParams,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_tflag">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_sample_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_type">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_missing_mask">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_params">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_shared">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_add_labels">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_update_data">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvDTreeTrainData.set_data(CxCore.CvMat,System.Int32,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,MachineLearning.CvDTreeParams,System.Boolean,System.Boolean)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_tflag">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_sample_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_type">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_missing_mask">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_params">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_shared">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_add_labels">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvDTreeTrainData.set_data(CxCore.CvMat,System.Int32,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,MachineLearning.CvDTreeParams,System.Boolean)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_tflag">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_sample_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_type">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_missing_mask">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_params">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_shared">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvDTreeTrainData.set_data(CxCore.CvMat,System.Int32,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,MachineLearning.CvDTreeParams)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_tflag">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_sample_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_type">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_missing_mask">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_params">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvDTreeTrainData.set_data(CxCore.CvMat,System.Int32,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_tflag">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_sample_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_type">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_missing_mask">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvDTreeTrainData.set_data(CxCore.CvMat,System.Int32,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_tflag">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_sample_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_type">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvDTreeTrainData.set_data(CxCore.CvMat,System.Int32,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_tflag">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_sample_idx">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvDTreeTrainData.set_data(CxCore.CvMat,System.Int32,CxCore.CvMat,CxCore.CvMat)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_tflag">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_idx">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvDTreeTrainData.set_data(CxCore.CvMat,System.Int32,CxCore.CvMat)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_tflag">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvDTreeTrainData.get_vectors(CxCore.CvMat,System.Single[],System.Byte[],System.Single[],System.Boolean)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="_subsample_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="values">No comment available for this member. Please check the openCV documenation.</param>
            <param name="missing">No comment available for this member. Please check the openCV documenation.</param>
            <param name="responses">No comment available for this member. Please check the openCV documenation.</param>
            <param name="get_class_idx">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvDTreeTrainData.get_vectors(CxCore.CvMat,System.Single[],System.Byte[],System.Single[])">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="_subsample_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="values">No comment available for this member. Please check the openCV documenation.</param>
            <param name="missing">No comment available for this member. Please check the openCV documenation.</param>
            <param name="responses">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvDTreeTrainData.subsample_data(CxCore.CvMat)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="_subsample_idx">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvDTreeTrainData.write_params(CxCore.CvFileStorage)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="fs">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvDTreeTrainData.read_params(CxCore.CvFileStorage,CxCore.CvFileNode)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="fs">No comment available for this member. Please check the openCV documenation.</param>
            <param name="node">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvDTreeTrainData.clear">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvDTreeTrainData.get_num_classes">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvDTreeTrainData.get_var_type(System.Int32)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="vi">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvDTreeTrainData.get_work_var_count">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvDTreeTrainData.get_class_labels(MachineLearning.CvDTreeNode)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="n">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvDTreeTrainData.get_ord_responses(MachineLearning.CvDTreeNode)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="n">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvDTreeTrainData.get_labels(MachineLearning.CvDTreeNode)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="n">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvDTreeTrainData.get_cat_var_data(MachineLearning.CvDTreeNode,System.Int32)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="n">No comment available for this member. Please check the openCV documenation.</param>
            <param name="vi">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvDTreeTrainData.get_ord_var_data(MachineLearning.CvDTreeNode,System.Int32)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="n">No comment available for this member. Please check the openCV documenation.</param>
            <param name="vi">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvDTreeTrainData.get_child_buf_idx(MachineLearning.CvDTreeNode)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="n">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvDTreeTrainData.set_params(MachineLearning.CvDTreeParams)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="arg0">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvDTreeTrainData.new_node(MachineLearning.CvDTreeNode,System.Int32,System.Int32,System.Int32)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="parent">No comment available for this member. Please check the openCV documenation.</param>
            <param name="count">No comment available for this member. Please check the openCV documenation.</param>
            <param name="storage_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="offset">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvDTreeTrainData.new_split_ord(System.Int32,System.Single,System.Int32,System.Int32,System.Single)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="vi">No comment available for this member. Please check the openCV documenation.</param>
            <param name="cmp_val">No comment available for this member. Please check the openCV documenation.</param>
            <param name="split_point">No comment available for this member. Please check the openCV documenation.</param>
            <param name="inversed">No comment available for this member. Please check the openCV documenation.</param>
            <param name="quality">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvDTreeTrainData.new_split_cat(System.Int32,System.Single)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="vi">No comment available for this member. Please check the openCV documenation.</param>
            <param name="quality">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvDTreeTrainData.free_node_data(MachineLearning.CvDTreeNode)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="node">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvDTreeTrainData.free_train_data">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvDTreeTrainData.free_node(MachineLearning.CvDTreeNode)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="node">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="P:MachineLearning.CvDTreeTrainData.sample_count">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="P:MachineLearning.CvDTreeTrainData.var_all">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="P:MachineLearning.CvDTreeTrainData.var_count">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="P:MachineLearning.CvDTreeTrainData.max_c_count">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="P:MachineLearning.CvDTreeTrainData.ord_var_count">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="P:MachineLearning.CvDTreeTrainData.cat_var_count">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="P:MachineLearning.CvDTreeTrainData.have_labels">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="P:MachineLearning.CvDTreeTrainData.have_priors">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="P:MachineLearning.CvDTreeTrainData.is_classifier">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="P:MachineLearning.CvDTreeTrainData.buf_count">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="P:MachineLearning.CvDTreeTrainData.buf_size">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="P:MachineLearning.CvDTreeTrainData.shared">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="P:MachineLearning.CvDTreeTrainData.cat_count">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="P:MachineLearning.CvDTreeTrainData.cat_ofs">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="P:MachineLearning.CvDTreeTrainData.cat_map">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="P:MachineLearning.CvDTreeTrainData.counts">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="P:MachineLearning.CvDTreeTrainData.buf">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="P:MachineLearning.CvDTreeTrainData.direction">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="P:MachineLearning.CvDTreeTrainData.split_buf">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="P:MachineLearning.CvDTreeTrainData.var_idx">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="P:MachineLearning.CvDTreeTrainData.var_type">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="P:MachineLearning.CvDTreeTrainData.priors">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="P:MachineLearning.CvDTreeTrainData.priors_mult">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="P:MachineLearning.CvDTreeTrainData._params">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="P:MachineLearning.CvDTreeTrainData.tree_storage">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="P:MachineLearning.CvDTreeTrainData.temp_storage">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="P:MachineLearning.CvDTreeTrainData.data_root">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="P:MachineLearning.CvDTreeTrainData.node_heap">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="P:MachineLearning.CvDTreeTrainData.split_heap">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="P:MachineLearning.CvDTreeTrainData.cv_heap">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="P:MachineLearning.CvDTreeTrainData.nv_heap">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="P:MachineLearning.CvDTreeTrainData.rng">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="T:MachineLearning.CvParamGrid">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
        </member>
        <member name="F:MachineLearning.CvParamGrid.swigCMemOwn">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvParamGrid.Finalize">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvParamGrid.Dispose">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvParamGrid.#ctor">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvParamGrid.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="_min_val">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_max_val">No comment available for this member. Please check the openCV documenation.</param>
            <param name="log_step">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvParamGrid.check">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:MachineLearning.CvParamGrid.SVM_C">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:MachineLearning.CvParamGrid.SVM_GAMMA">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:MachineLearning.CvParamGrid.SVM_P">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:MachineLearning.CvParamGrid.SVM_NU">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:MachineLearning.CvParamGrid.SVM_COEF">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:MachineLearning.CvParamGrid.SVM_DEGREE">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="P:MachineLearning.CvParamGrid.min_val">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="P:MachineLearning.CvParamGrid.max_val">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="P:MachineLearning.CvParamGrid.step">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="T:Cv.CvPoint2D64d">
            <summary>
            A Point double in 3 D Space
            </summary>
        </member>
        <member name="F:Cv.CvPoint2D64d.x">
            <summary>
            x coordinate
            </summary>
        </member>
        <member name="F:Cv.CvPoint2D64d.y">
            <summary>
            y coordinate
            </summary>
        </member>
        <member name="T:Cv.CvPoint3D64d">
            <summary>
            A Point double in 3 D Space
            </summary>
        </member>
        <member name="F:Cv.CvPoint3D64d.x">
            <summary>
            x coordinate
            </summary>
        </member>
        <member name="F:Cv.CvPoint3D64d.y">
            <summary>
            y coordinate
            </summary>
        </member>
        <member name="F:Cv.CvPoint3D64d.z">
            <summary>
            z coordinate
            </summary>
        </member>
        <member name="T:Cv.CvMoments">
            <summary>
            Encasulates all Moments
            </summary>
        </member>
        <member name="F:Cv.CvMoments.m00">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvMoments.m10">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvMoments.m01">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvMoments.m20">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvMoments.m11">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvMoments.m02">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvMoments.m30">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvMoments.m21">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvMoments.m12">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvMoments.m03">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvMoments.mu20">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvMoments.mu11">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvMoments.mu02">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvMoments.mu30">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvMoments.mu21">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvMoments.mu12">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvMoments.mu03">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvMoments.inv_sqrt_m00">
            <summary>
            m00 = 0 1 sqrt(m00) : 0 
            </summary>
        </member>
        <member name="T:Cv.CvHuMoments">
            <summary>
            Hu invariants
            </summary>
        </member>
        <member name="F:Cv.CvHuMoments.hu1">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvHuMoments.hu2">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvHuMoments.hu3">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvHuMoments.hu4">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvHuMoments.hu5">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvHuMoments.hu6">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvHuMoments.hu7">
            <summary>
            Hu invariants 
            </summary>
        </member>
        <member name="T:Cv.CvConnectedComp">
            <summary>
            Connected Component
            </summary>
        </member>
        <member name="F:Cv.CvConnectedComp.area">
            <summary>
            area of the connected component 
            </summary>
        </member>
        <member name="F:Cv.CvConnectedComp.value">
            <summary>
            average color of the connected component 
            </summary>
        </member>
        <member name="F:Cv.CvConnectedComp.rect">
            <summary>
            ROI of the component 
            </summary>
        </member>
        <member name="F:Cv.CvConnectedComp.contour">
            <summary>
            optional component boundary 
            (the contour might have child contours corresponding to the holes) 
            </summary>
        </member>
        <member name="T:Cv.CvContourInfo">
            <summary>
            Contour Info
            </summary>
        </member>
        <member name="F:Cv.CvContourInfo.flags">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvContourInfo.next">
            <summary>
            next contour with the same mark value 
            </summary>
        </member>
        <member name="F:Cv.CvContourInfo.parent">
            <summary>
            information about parent contour 
            </summary>
        </member>
        <member name="F:Cv.CvContourInfo.contour">
            <summary>
            corresponding contour (may be 0 if rejected) 
            </summary>
        </member>
        <member name="F:Cv.CvContourInfo.rect">
            <summary>
            bounding rectangle 
            </summary>
        </member>
        <member name="F:Cv.CvContourInfo.origin">
            <summary>
            origin point (where the contour was traced from) 
            </summary>
        </member>
        <member name="F:Cv.CvContourInfo.is_hole">
            <summary>
            hole flag 
            </summary>
        </member>
        <member name="T:Cv.CvContourScanner">
            <summary>
            CvContourScanner
            </summary>
        </member>
        <member name="F:Cv.CvContourScanner.storage1">
            <summary>
            contains fetched contours 
            </summary>
        </member>
        <member name="F:Cv.CvContourScanner.storage2">
            <summary>
            contains approximated contours 
            ( =storage1 if approx_method2 = approx_method1) 
            </summary>
        </member>
        <member name="F:Cv.CvContourScanner.cinfo_storage">
            <summary>
            contains _CvContourInfo nodes 
            </summary>
        </member>
        <member name="F:Cv.CvContourScanner.cinfo_set">
            <summary>
            set of _CvContourInfo nodes 
            </summary>
        </member>
        <member name="F:Cv.CvContourScanner.initial_pos">
            <summary>
            starting storage pos 
            </summary>
        </member>
        <member name="F:Cv.CvContourScanner.backup_pos">
            <summary>
            beginning of the latest approx contour 
            </summary>
        </member>
        <member name="F:Cv.CvContourScanner.backup_pos2">
            <summary>
            ending of the latest approx contour 
            </summary>
        </member>
        <member name="F:Cv.CvContourScanner.img0">
            <summary>
            image origin 
            </summary>
        </member>
        <member name="F:Cv.CvContourScanner.img">
            <summary>
            current image row 
            </summary>
        </member>
        <member name="F:Cv.CvContourScanner.img_step">
            <summary>
            image step 
            </summary>
        </member>
        <member name="F:Cv.CvContourScanner.img_size">
            <summary>
            ROI size 
            </summary>
        </member>
        <member name="F:Cv.CvContourScanner.offset">
            <summary>
            ROI offset: coordinates added to each contour point 
            </summary>
        </member>
        <member name="F:Cv.CvContourScanner.pt">
            <summary>
            current scanner position 
            </summary>
        </member>
        <member name="F:Cv.CvContourScanner.lnbd">
            <summary>
            position of the last met contour 
            </summary>
        </member>
        <member name="F:Cv.CvContourScanner.nbd">
            <summary>
            current mark val 
            </summary>
        </member>
        <member name="F:Cv.CvContourScanner.l_cinfo">
            <summary>
            information about latest approx contour 
            </summary>
        </member>
        <member name="F:Cv.CvContourScanner.cinfo_temp">
            <summary>
            temporary var which is used in simple modes 
            </summary>
        </member>
        <member name="F:Cv.CvContourScanner.frame_info">
            <summary>
            information about frame 
            </summary>
        </member>
        <member name="F:Cv.CvContourScanner.frame">
            <summary>
            frame itself 
            </summary>
        </member>
        <member name="F:Cv.CvContourScanner.approx_method1">
            <summary>
            approx method when tracing 
            </summary>
        </member>
        <member name="F:Cv.CvContourScanner.approx_method2">
            <summary>
            final approx method 
            </summary>
        </member>
        <member name="F:Cv.CvContourScanner.mode">
            <summary>
            contour scanning mode: 
            0 - external only 
            0 - external only 1 - all the contours w/o any hierarchy 
            1 - all the contours w/o any hierarchy
            2 - connected components (i e two-level structure - external contours and holes) 
            </summary>
        </member>
        <member name="F:Cv.CvContourScanner.subst_flag">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvContourScanner.seq_type1">
            <summary>
            type of fetched contours 
            </summary>
        </member>
        <member name="F:Cv.CvContourScanner.header_size1">
            <summary>
            hdr size of fetched contours 
            </summary>
        </member>
        <member name="F:Cv.CvContourScanner.elem_size1">
            <summary>
            elem size of fetched contours 
            </summary>
        </member>
        <member name="F:Cv.CvContourScanner.seq_type2">
            <summary>
            
            </summary>
        </member>
        <member name="F:Cv.CvContourScanner.header_size2">
            <summary>
            the same for approx contours 
            </summary>
        </member>
        <member name="F:Cv.CvContourScanner.elem_size2">
            <summary>
            
            MarshalAs(UnmanagedType ByValArray SizeConst=126) 
            </summary>
        </member>
        <member name="F:Cv.CvContourScanner.cinfo_table">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvContourScanner.ptr">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="T:Cv.CvChainPtReader">
            <summary>
            CvChainPtReader
            </summary>
        </member>
        <member name="F:Cv.CvChainPtReader.header_size">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvChainPtReader.seq">
            <summary>
            CvSeq sequence beign read 
            </summary>
        </member>
        <member name="F:Cv.CvChainPtReader.block">
            <summary>
            CvSeqBlock current block 
            </summary>
        </member>
        <member name="F:Cv.CvChainPtReader.ptr1">
            <summary>
            char pointer to element be read next 
            </summary>
        </member>
        <member name="F:Cv.CvChainPtReader.block_min">
            <summary>
            char pointer to the beginning of block 
            </summary>
        </member>
        <member name="F:Cv.CvChainPtReader.block_max">
            <summary>
            char pointer to the end of block 
            </summary>
        </member>
        <member name="F:Cv.CvChainPtReader.delta_index">
            <summary>
            = seq->first->start_index 
            </summary>
        </member>
        <member name="F:Cv.CvChainPtReader.prev_elem">
            <summary>
            char pointer to previous element 
            </summary>
        </member>
        <member name="F:Cv.CvChainPtReader.code">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvChainPtReader.pt">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvChainPtReader.deltas">
            <summary>
            8 2 ; 
            </summary>
        </member>
        <member name="F:Cv.CvChainPtReader.ptr">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="T:Cv.CvContourTree">
            <summary>
            Contour tree header
            </summary>
        </member>
        <member name="F:Cv.CvContourTree.flags">
            <summary>
            micsellaneous flags 
            </summary>
        </member>
        <member name="F:Cv.CvContourTree.header_size">
            <summary>
            size of sequence header 
            </summary>
        </member>
        <member name="F:Cv.CvContourTree.h_prev">
            <summary>
            previous sequence 
            </summary>
        </member>
        <member name="F:Cv.CvContourTree.h_next">
            <summary>
            next sequence 
            </summary>
        </member>
        <member name="F:Cv.CvContourTree.v_prev">
            <summary>
            2nd previous sequence 
            </summary>
        </member>
        <member name="F:Cv.CvContourTree.v_next">
            <summary>
            2nd next sequence 
            </summary>
        </member>
        <member name="F:Cv.CvContourTree.total">
            <summary>
            total number of elements 
            </summary>
        </member>
        <member name="F:Cv.CvContourTree.elem_size">
            <summary>
            size of sequence element in bytes 
            </summary>
        </member>
        <member name="F:Cv.CvContourTree.block_max">
            <summary>
            maximal bound of the last block 
            </summary>
        </member>
        <member name="F:Cv.CvContourTree.pt">
            <summary>
            current write pointer 
            </summary>
        </member>
        <member name="F:Cv.CvContourTree.delta_elems">
            <summary>
            how many elements allocated when the seq grows 
            </summary>
        </member>
        <member name="F:Cv.CvContourTree.storage">
            <summary>
            where the seq is stored 
            </summary>
        </member>
        <member name="F:Cv.CvContourTree.free_blocks">
            <summary>
            free blocks list 
            </summary>
        </member>
        <member name="F:Cv.CvContourTree.first">
            <summary>
            pointer to the first sequence block 
            </summary>
        </member>
        <member name="F:Cv.CvContourTree.p1">
            <summary>
            the first point of the binary tree root segment 
            </summary>
        </member>
        <member name="F:Cv.CvContourTree.p2">
            <summary>
            the last point of the binary tree root segment 
            </summary>
        </member>
        <member name="F:Cv.CvContourTree.ptr">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="T:Cv.CvConvexityDefect">
            <summary>
            Finds a sequence of convexity defects of given contour
            </summary>
        </member>
        <member name="F:Cv.CvConvexityDefect.start">
            <summary>
            point of the contour where the defect begins 
            </summary>
        </member>
        <member name="F:Cv.CvConvexityDefect.end">
            <summary>
            point of the contour where the defect ends 
            </summary>
        </member>
        <member name="F:Cv.CvConvexityDefect.depth_point">
            <summary>
            the farthest from the convex hull point within the defect 
            </summary>
        </member>
        <member name="F:Cv.CvConvexityDefect.depth">
            <summary>
            distance between the farthest point and the convex hull 
            </summary>
        </member>
        <member name="F:Cv.CvConvexityDefect.ptr">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="T:Cv.CvQuadEdge2D">
            <summary>
            CvQuadEdge2D
            </summary>
        </member>
        <member name="F:Cv.CvQuadEdge2D.flags">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvQuadEdge2D.pt">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvQuadEdge2D.next">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="T:Cv.CvSubdiv2DPoint">
            <summary>
            CvSubdiv2DPoint
            </summary>
        </member>
        <member name="F:Cv.CvSubdiv2DPoint.flags">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvSubdiv2DPoint.first">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvSubdiv2DPoint.pt">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvSubdiv2DPoint.ptr">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="T:Cv.CvSubdiv2D">
            <summary>
            CvSubdiv2D
            </summary>
        </member>
        <member name="F:Cv.CvSubdiv2D.flags">
            <summary>
            micsellaneous flags 
            </summary>
        </member>
        <member name="F:Cv.CvSubdiv2D.header_size">
            <summary>
            size of sequence header 
            </summary>
        </member>
        <member name="F:Cv.CvSubdiv2D.h_prev">
            <summary>
            previous sequence 
            </summary>
        </member>
        <member name="F:Cv.CvSubdiv2D.h_next">
            <summary>
            next sequence 
            </summary>
        </member>
        <member name="F:Cv.CvSubdiv2D.v_prev">
            <summary>
            2nd previous sequence 
            </summary>
        </member>
        <member name="F:Cv.CvSubdiv2D.v_next">
            <summary>
            2nd next sequence 
            </summary>
        </member>
        <member name="F:Cv.CvSubdiv2D.total">
            <summary>
            total number of elements 
            </summary>
        </member>
        <member name="F:Cv.CvSubdiv2D.elem_size">
            <summary>
            size of sequence element in bytes 
            </summary>
        </member>
        <member name="F:Cv.CvSubdiv2D.block_max">
            <summary>
            maximal bound of the last block 
            </summary>
        </member>
        <member name="F:Cv.CvSubdiv2D.pt">
            <summary>
            current write pointer 
            </summary>
        </member>
        <member name="F:Cv.CvSubdiv2D.delta_elems">
            <summary>
            how many elements allocated when the seq grows 
            </summary>
        </member>
        <member name="F:Cv.CvSubdiv2D.storage">
            <summary>
            where the seq is stored 
            </summary>
        </member>
        <member name="F:Cv.CvSubdiv2D.free_blocks">
            <summary>
            free blocks list 
            </summary>
        </member>
        <member name="F:Cv.CvSubdiv2D.first">
            <summary>
            pointer to the first sequence block 
            </summary>
        </member>
        <member name="F:Cv.CvSubdiv2D.free_elems">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvSubdiv2D.active_count">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvSubdiv2D.edges">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvSubdiv2D.quad_edges">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvSubdiv2D.is_geometry_valid">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvSubdiv2D.recent_edge">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvSubdiv2D.topleft">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvSubdiv2D.bottomright">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvSubdiv2D.ptr">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="T:Cv.CvSubdiv2DPointLocation">
            <summary>
            CvSubdiv2DPointLocation
            </summary>
        </member>
        <member name="F:Cv.CvSubdiv2DPointLocation.CV_PTLOC_ERROR">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvSubdiv2DPointLocation.CV_PTLOC_OUTSIDE_RECT">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvSubdiv2DPointLocation.CV_PTLOC_INSIDE">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvSubdiv2DPointLocation.CV_PTLOC_VERTEX">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvSubdiv2DPointLocation.CV_PTLOC_ON_EDGE">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="T:Cv.CvNextEdgeType">
            <summary>
            Type of next edge element
            </summary>
        </member>
        <member name="F:Cv.CvNextEdgeType.CV_NEXT_AROUND_ORG">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvNextEdgeType.CV_NEXT_AROUND_DST">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvNextEdgeType.CV_PREV_AROUND_ORG">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvNextEdgeType.CV_PREV_AROUND_DST">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvNextEdgeType.CV_NEXT_AROUND_LEFT">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvNextEdgeType.CV_NEXT_AROUND_RIGHT">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvNextEdgeType.CV_PREV_AROUND_LEFT">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvNextEdgeType.CV_PREV_AROUND_RIGHT">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="T:Cv.CvFilter">
            <summary>
            Filters used in pyramid decomposition
            </summary>
        </member>
        <member name="F:Cv.CvFilter.CV_GAUSSIAN_5x5">
            <summary>
            Mask = 7
            </summary>
        </member>
        <member name="T:Cv.CvMatrix3">
            <summary>
            A 3x3 Matrix
            </summary>
        </member>
        <member name="F:Cv.CvMatrix3.m">
            <summary>
            float [3][3] ; 
            </summary>
        </member>
        <member name="T:Cv.CvConDensation">
            <summary>
            Condensation Tracker
            </summary>
        </member>
        <member name="F:Cv.CvConDensation.MP">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvConDensation.DP">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvConDensation.DynamMatr">
            <summary>
            Matrix of the linear Dynamics system 
            </summary>
        </member>
        <member name="F:Cv.CvConDensation.State">
            <summary>
            Vector of State 
            </summary>
        </member>
        <member name="F:Cv.CvConDensation.SamplesNum">
            <summary>
            Number of the Samples 
            </summary>
        </member>
        <member name="F:Cv.CvConDensation.flSamples">
            <summary>
            arr of the Sample Vectors 
            </summary>
        </member>
        <member name="F:Cv.CvConDensation.flNewSamples">
            <summary>
            temporary array of the Sample Vectors 
            </summary>
        </member>
        <member name="F:Cv.CvConDensation.flConfidence">
            <summary>
            Confidence for each Sample 
            </summary>
        </member>
        <member name="F:Cv.CvConDensation.flCumulative">
            <summary>
            Cumulative confidence 
            </summary>
        </member>
        <member name="F:Cv.CvConDensation.Temp">
            <summary>
            Temporary vector 
            </summary>
        </member>
        <member name="F:Cv.CvConDensation.RandomSample">
            <summary>
            RandomVector to update sample set 
            </summary>
        </member>
        <member name="F:Cv.CvConDensation.RandS">
            <summary>
            Array of structures to generate random vectors 
            </summary>
        </member>
        <member name="F:Cv.CvConDensation.ptr">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="T:Cv.CvKalman">
            <summary>
            standard Kalman filter (in G. Welch' and G. Bishop's notation):
            x(k)=A*x(k-1)+B*u(k)+w(k)  p(w)~N(0,Q)
            z(k)=H*x(k)+v(k),p(v)~N(0,R)
            </summary>
        </member>
        <member name="F:Cv.CvKalman.MP">
            <summary>
            number of measurement vector dimensions 
            </summary>
        </member>
        <member name="F:Cv.CvKalman.DP">
            <summary>
            number of state vector dimensions 
            </summary>
        </member>
        <member name="F:Cv.CvKalman.CP">
            <summary>
            number of control vector dimensions 
            </summary>
        </member>
        <member name="F:Cv.CvKalman.PosterState">
            <summary>
            =state_pre->data fl 
            </summary>
        </member>
        <member name="F:Cv.CvKalman.PriorState">
            <summary>
            =state_post->data fl 
            </summary>
        </member>
        <member name="F:Cv.CvKalman.DynamMatr">
            <summary>
            =transition_matrix->data fl 
            </summary>
        </member>
        <member name="F:Cv.CvKalman.MeasurementMatr">
            <summary>
            =measurement_matrix->data fl 
            </summary>
        </member>
        <member name="F:Cv.CvKalman.MNCovariance">
            <summary>
            =measurement_noise_cov->data fl 
            </summary>
        </member>
        <member name="F:Cv.CvKalman.PNCovariance">
            <summary>
            =process_noise_cov->data fl 
            </summary>
        </member>
        <member name="F:Cv.CvKalman.KalmGainMatr">
            <summary>
            =gain->data fl 
            </summary>
        </member>
        <member name="F:Cv.CvKalman.PriorErrorCovariance">
            <summary>
            =error_cov_pre->data fl 
            </summary>
        </member>
        <member name="F:Cv.CvKalman.PosterErrorCovariance">
            <summary>
            =error_cov_post->data fl 
            </summary>
        </member>
        <member name="F:Cv.CvKalman.Temp1">
            <summary>
            temp1->data fl 
            </summary>
        </member>
        <member name="F:Cv.CvKalman.Temp2">
            <summary>
            temp2->data fl 
            </summary>
        </member>
        <member name="F:Cv.CvKalman.state_pre">
            <summary>
            predicted state (x'(k)): 
            x(k)=A x(k-1)+B u(k) 
            </summary>
        </member>
        <member name="F:Cv.CvKalman.state_post">
            <summary>
            corrected state (x(k)): 
            x(k)=x'(k)+K(k) (z(k)-H x'(k)) 
            </summary>
        </member>
        <member name="F:Cv.CvKalman.transition_matrix">
            <summary>
            state transition matrix (A) 
            </summary>
        </member>
        <member name="F:Cv.CvKalman.control_matrix">
            <summary>
            control matrix (B) 
            (it is not used if there is no control) 
            </summary>
        </member>
        <member name="F:Cv.CvKalman.measurement_matrix">
            <summary>
            measurement matrix (H) 
            </summary>
        </member>
        <member name="F:Cv.CvKalman.process_noise_cov">
            <summary>
            process noise covariance matrix (Q) 
            </summary>
        </member>
        <member name="F:Cv.CvKalman.measurement_noise_cov">
            <summary>
            measurement noise covariance matrix (R) 
            </summary>
        </member>
        <member name="F:Cv.CvKalman.error_cov_pre">
            <summary>
            priori error estimate covariance matrix (P'(k)): 
            P'(k)=A P(k-1) At + Q) 
            </summary>
        </member>
        <member name="F:Cv.CvKalman.gain">
            <summary>
            Kalman gain matrix (K(k)): 
            K(k)=P'(k) Ht inv(H P'(k) Ht+R) 
            </summary>
        </member>
        <member name="F:Cv.CvKalman.error_cov_post">
            <summary>
            posteriori error estimate covariance matrix (P(k)): 
            P(k)=(I-K(k) H) P'(k) 
            </summary>
        </member>
        <member name="F:Cv.CvKalman.temp1">
            <summary>
            temporary matrices 
            </summary>
        </member>
        <member name="F:Cv.CvKalman.temp2">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvKalman.temp3">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvKalman.temp4">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvKalman.temp5">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvKalman.ptr">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="T:Cv._rec">
            <summary>
            Internal
            </summary>
        </member>
        <member name="F:Cv._rec.r">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv._rec.weight">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="T:Cv.CvHaarFeature">
            <summary>
            A CvHaar Feature
            </summary>
        </member>
        <member name="F:Cv.CvHaarFeature.tilted">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvHaarFeature.rec">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvHaarFeature.ptr">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="T:Cv.CvHaarClassifier">
            <summary>
            The Harr classifier
            </summary>
        </member>
        <member name="F:Cv.CvHaarClassifier.count">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvHaarClassifier.haar_feature">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvHaarClassifier.threshold">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvHaarClassifier.left">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvHaarClassifier.right">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvHaarClassifier.alpha">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvHaarClassifier.ptr">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="T:Cv.CvHaarStageClassifier">
            <summary>
            The Haar Stage Classifier
            </summary>
        </member>
        <member name="F:Cv.CvHaarStageClassifier.count">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvHaarStageClassifier.threshold">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvHaarStageClassifier.classifier">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvHaarStageClassifier.next">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvHaarStageClassifier.child">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvHaarStageClassifier.parent">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvHaarStageClassifier.ptr">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="T:Cv.CvHidHaarClassifierCascade">
            <summary>
            CvHidHaarClassifierCascade
            </summary>
        </member>
        <member name="F:Cv.CvHidHaarClassifierCascade.flags">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvHidHaarClassifierCascade.count">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvHidHaarClassifierCascade.orig_window_size">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvHidHaarClassifierCascade.real_window_size">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvHidHaarClassifierCascade.scale">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvHidHaarClassifierCascade.stage_classifier">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvHidHaarClassifierCascade.hid_cascade">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvHidHaarClassifierCascade.ptr">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="T:Cv.CvHaarClassifierCascade">
            <summary>
            CvHaarClassifierCascade
            </summary>
        </member>
        <member name="F:Cv.CvHaarClassifierCascade.flags">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvHaarClassifierCascade.count">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvHaarClassifierCascade.orig_window_size">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvHaarClassifierCascade.real_window_size">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvHaarClassifierCascade.scale">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvHaarClassifierCascade.stage_classifier">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvHaarClassifierCascade.hid_cascade">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvHaarClassifierCascade.ptr">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="T:Cv.CvAvgComp">
            <summary>
            CvAvgComp
            </summary>
        </member>
        <member name="F:Cv.CvAvgComp.rect">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvAvgComp.neighbors">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="T:Cv.CvFont">
            <summary>
            Represents a font object
            </summary>
        </member>
        <member name="F:Cv.CvFont.font_face">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvFont.ascii">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvFont.greek">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvFont.cyrillic">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvFont.hscale">
            <summary>
            ; 
            </summary>
        </member>
        <member name="F:Cv.CvFont.vscale">
            <summary>
            ; 
            </summary>
        </member>
        <member name="F:Cv.CvFont.shear">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvFont.thickness">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvFont.dx">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.CvFont.line_type">
            <summary>
            No comment available for this member.
            </summary>
        </member>
        <member name="T:Cv.cvtypes">
            <summary>
            Contains Type definitions mostly for Cv class
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_GAUSSIAN_5x5">
            <summary>
            Value = 7. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_BGR2BGRA">
            <summary>
            Value = 0. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_RGB2RGBA">
            <summary>
            Value = CV_BGR2BGRA. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_BGRA2BGR">
            <summary>
            Value = 1. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_RGBA2RGB">
            <summary>
            Value = CV_BGRA2BGR. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_BGR2RGBA">
            <summary>
            Value = 2. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_RGB2BGRA">
            <summary>
            Value = CV_BGR2RGBA. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_RGBA2BGR">
            <summary>
            Value = 3. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_BGRA2RGB">
            <summary>
            Value = CV_RGBA2BGR. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_BGR2RGB">
            <summary>
            Value = 4. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_RGB2BGR">
            <summary>
            Value = CV_BGR2RGB. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_BGRA2RGBA">
            <summary>
            Value = 5. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_RGBA2BGRA">
            <summary>
            Value = CV_BGRA2RGBA. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_BGR2GRAY">
            <summary>
            Value = 6. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_RGB2GRAY">
            <summary>
            Value = 7. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_GRAY2BGR">
            <summary>
            Value = 8. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_GRAY2RGB">
            <summary>
            Value = CV_GRAY2BGR. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_GRAY2BGRA">
            <summary>
            Value = 9. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_GRAY2RGBA">
            <summary>
            Value = CV_GRAY2BGRA. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_BGRA2GRAY">
            <summary>
            Value = 10. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_RGBA2GRAY">
            <summary>
            Value = 11. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_BGR2BGR565">
            <summary>
            Value = 12. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_RGB2BGR565">
            <summary>
            Value = 13. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_BGR5652BGR">
            <summary>
            Value = 14. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_BGR5652RGB">
            <summary>
            Value = 15. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_BGRA2BGR565">
            <summary>
            Value = 16. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_RGBA2BGR565">
            <summary>
            Value = 17. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_BGR5652BGRA">
            <summary>
            Value = 18. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_BGR5652RGBA">
            <summary>
            Value = 19. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_GRAY2BGR565">
            <summary>
            Value = 20. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_BGR5652GRAY">
            <summary>
            Value = 21. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_BGR2BGR555">
            <summary>
            Value = 22. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_RGB2BGR555">
            <summary>
            Value = 23. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_BGR5552BGR">
            <summary>
            Value = 24. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_BGR5552RGB">
            <summary>
            Value = 25. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_BGRA2BGR555">
            <summary>
            Value = 26. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_RGBA2BGR555">
            <summary>
            Value = 27. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_BGR5552BGRA">
            <summary>
            Value = 28. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_BGR5552RGBA">
            <summary>
            Value = 29. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_GRAY2BGR555">
            <summary>
            Value = 30. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_BGR5552GRAY">
            <summary>
            Value = 31. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_BGR2XYZ">
            <summary>
            Value = 32. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_RGB2XYZ">
            <summary>
            Value = 33. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_XYZ2BGR">
            <summary>
            Value = 34. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_XYZ2RGB">
            <summary>
            Value = 35. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_BGR2YCrCb">
            <summary>
            Value = 36. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_RGB2YCrCb">
            <summary>
            Value = 37. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_YCrCb2BGR">
            <summary>
            Value = 38. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_YCrCb2RGB">
            <summary>
            Value = 39. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_BGR2HSV">
            <summary>
            Value = 40. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_RGB2HSV">
            <summary>
            Value = 41. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_BGR2Lab">
            <summary>
            Value = 44. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_RGB2Lab">
            <summary>
            Value = 45. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_BayerBG2BGR">
            <summary>
            Value = 46. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_BayerGB2BGR">
            <summary>
            Value = 47. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_BayerRG2BGR">
            <summary>
            Value = 48. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_BayerGR2BGR">
            <summary>
            Value = 49. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_BayerBG2RGB">
            <summary>
            Value = CV_BayerRG2BGR. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_BayerGB2RGB">
            <summary>
            Value = CV_BayerGR2BGR. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_BayerRG2RGB">
            <summary>
            Value = CV_BayerBG2BGR. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_BayerGR2RGB">
            <summary>
            Value = CV_BayerGB2BGR. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_BGR2Luv">
            <summary>
            Value = 50. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_RGB2Luv">
            <summary>
            Value = 51. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_BGR2HLS">
            <summary>
            Value = 52. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_RGB2HLS">
            <summary>
            Value = 53. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_HSV2BGR">
            <summary>
            Value = 54. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_HSV2RGB">
            <summary>
            Value = 55. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_Lab2BGR">
            <summary>
            Value = 56. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_Lab2RGB">
            <summary>
            Value = 57. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_Luv2BGR">
            <summary>
            Value = 58. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_Luv2RGB">
            <summary>
            Value = 59. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_HLS2BGR">
            <summary>
            Value = 60. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_HLS2RGB">
            <summary>
            Value = 61. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_COLORCVT_MAX">
            <summary>
            Value = 100. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_SHAPE_RECT">
            <summary>
            Value = 0. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_SHAPE_CROSS">
            <summary>
            Value = 1. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_SHAPE_ELLIPSE">
            <summary>
            Value = 2. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_SHAPE_CUSTOM">
            <summary>
            Value = 100. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_HAAR_MAGIC_VAL">
            <summary>
            Value = 0x42500000. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_TYPE_NAME_HAAR">
            <summary>
            Value = opencv-haar-classifier. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_RETR_EXTERNAL">
            <summary>
            Value = 0. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_RETR_LIST">
            <summary>
            Value = 1. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_RETR_CCOMP">
            <summary>
            Value = 2. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_RETR_TREE">
            <summary>
            Value = 3. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_CHAIN_CODE">
            <summary>
            Value = 0. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_CHAIN_APPROX_NONE">
            <summary>
            Value = 1. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_CHAIN_APPROX_SIMPLE">
            <summary>
            Value = 2. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_CHAIN_APPROX_TC89_L1">
            <summary>
            Value = 3. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_CHAIN_APPROX_TC89_KCOS">
            <summary>
            Value = 4. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_LINK_RUNS">
            <summary>
            Value = 5. No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_SUBDIV2D_VIRTUAL_POINT_FLAG">
            <summary>
            Value = (1 &lt;&lt; 30). No comment available for this member.
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_DIST_USER">
            <summary>
            Value = -1. User defined distance 
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_DIST_L1">
            <summary>
            Value = 1. distance = |x1-x2| + |y1-y2| 
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_DIST_L2">
            <summary>
            Value = 2. the simple euclidean distance 
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_DIST_C">
            <summary>
            Value = 3. distance = max(|x1-x2| |y1-y2|) 
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_DIST_L12">
            <summary>
            Value = 4. L1-L2 metric: distance = 2(sqrt(1+x*x/2) - 1)) 
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_DIST_FAIR">
            <summary>
            Value = 5. distance = c 2(|x| c-log(1+|x| c)) c = 1.3998 
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_DIST_WELSCH">
            <summary>
            Value = 6. distance = c 2 2(1-exp(-(x c) 2)) c = 2.9846 
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_DIST_HUBER">
            <summary>
            Value = 7. distance = |x|&lt;c x^2/2 : c(|x|-c/2) c=1.345 
            </summary>
        </member>
        <member name="F:Cv.cvtypes.CV_HAAR_FEATURE_MAX">
            <summary>
            Value = 3. No comment available for this member.
            </summary>
        </member>
        <member name="M:Cv.cvtypes.CV_SUBDIV2D_NEXT_EDGE(System.UInt32)">
            <summary>
            get the next edge with the same origin point (counterwise)
            </summary>
            <param name="edge">edge</param>
        </member>
        <member name="M:Cv.cvtypes.CV_INIT_3X3_DELTAS(System.Int32[]@,System.Int32,System.Int32)">
            <summary>
            initializes 8-element array for fast access to 3x3 neighborhood of a pixel�.
            </summary>
            <param name="deltas">deltas</param>
            <param name="step">step</param>
            <param name="nch">nch</param>
        </member>
        <member name="T:MachineLearning.CvSVMParams">
            <summary>
            SVM training parameters
            </summary>
        </member>
        <member name="F:MachineLearning.CvSVMParams.swigCMemOwn">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvSVMParams.Finalize">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvSVMParams.Dispose">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvSVMParams.#ctor">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvSVMParams.#ctor(System.Int32,System.Int32,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,CxCore.CvMat,CxCore.CvTermCriteria)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="_svm_type">Type of SVM, one of the following types: CvSVM::C_SVC - n-class classification (n>=2), allows imperfect separation of classes with penalty multiplier C for outliers. CvSVM::NU_SVC - n-class classification with possible imperfect separation. Parameter nu (in the range 0..1, the larger the value, the smoother the decision boundary) is used instead of C . CvSVM::ONE_CLASS - one-class SVM. All the training data are from the same class, SVM builds a boundary that separates the class from the rest of the feature space. CvSVM::EPS_SVR - regression. The distance between feature vectors from the training set and the fitting hyperplane must be less than p . For outliers the penalty multiplier C is used. CvSVM::NU_SVR - regression; nu is used instead of p . </param>
            <param name="_kernel_type">The kernel type, one of the following types: CvSVM::LINEAR - no mapping is done, linear discrimination (or regression) is done in the original feature space. It is the fastest option. d(x,y) = x•y == (x,y) CvSVM::POLY - polynomial kernel: d(x,y) = (gamma*(x•y)+coef0) degree CvSVM::RBF - radial-basis-function kernel; a good choice in most cases: d(x,y) = exp(-gamma*|x-y| 2 ) CvSVM::SIGMOID - sigmoid function is used as a kernel: d(x,y) = tanh(gamma*(x•y)+coef0) </param>
            <param name="_degree">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_gamma">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_coef0">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_C">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_nu">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_p">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_class_weights">Optional weights, assigned to particular classes. They are multiplied by C and thus affect the misclassification penalty for different classes. The larger weight, the larger penalty on misclassification of data from the corresponding class. </param>
            <param name="_term_crit">Termination procedure for iterative SVM training procedure (which solves a partial case of constrained quadratic optimization problem) </param>
        </member>
        <member name="P:MachineLearning.CvSVMParams.svm_type">
            <summary>
            Type of SVM, one of the following types: CvSVM::C_SVC - n-class classification (n>=2), allows imperfect separation of classes with penalty multiplier C for outliers. CvSVM::NU_SVC - n-class classification with possible imperfect separation. Parameter nu (in the range 0..1, the larger the value, the smoother the decision boundary) is used instead of C . CvSVM::ONE_CLASS - one-class SVM. All the training data are from the same class, SVM builds a boundary that separates the class from the rest of the feature space. CvSVM::EPS_SVR - regression. The distance between feature vectors from the training set and the fitting hyperplane must be less than p . For outliers the penalty multiplier C is used. CvSVM::NU_SVR - regression; nu is used instead of p . 
            </summary>
        </member>
        <member name="P:MachineLearning.CvSVMParams.kernel_type">
            <summary>
            The kernel type, one of the following types: CvSVM::LINEAR - no mapping is done, linear discrimination (or regression) is done in the original feature space. It is the fastest option. d(x,y) = x•y == (x,y) CvSVM::POLY - polynomial kernel: d(x,y) = (gamma*(x•y)+coef0) degree CvSVM::RBF - radial-basis-function kernel; a good choice in most cases: d(x,y) = exp(-gamma*|x-y| 2 ) CvSVM::SIGMOID - sigmoid function is used as a kernel: d(x,y) = tanh(gamma*(x•y)+coef0) 
            </summary>
        </member>
        <member name="P:MachineLearning.CvSVMParams.degree">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="P:MachineLearning.CvSVMParams.gamma">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="P:MachineLearning.CvSVMParams.coef0">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="P:MachineLearning.CvSVMParams.C">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="P:MachineLearning.CvSVMParams.nu">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="P:MachineLearning.CvSVMParams.p">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="P:MachineLearning.CvSVMParams.class_weights">
            <summary>
            Optional weights, assigned to particular classes. They are multiplied by C and thus affect the misclassification penalty for different classes. The larger weight, the larger penalty on misclassification of data from the corresponding class. 
            </summary>
        </member>
        <member name="P:MachineLearning.CvSVMParams.term_crit">
            <summary>
            Termination procedure for iterative SVM training procedure (which solves a partial case of constrained quadratic optimization problem) 
            </summary>
        </member>
        <member name="T:MachineLearning.cvlib">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
        </member>
        <member name="F:MachineLearning.cvlib.CV_LOG2PI">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:MachineLearning.cvlib.CV_COL_SAMPLE">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:MachineLearning.cvlib.CV_ROW_SAMPLE">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:MachineLearning.cvlib.CV_VAR_NUMERICAL">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:MachineLearning.cvlib.CV_VAR_ORDERED">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:MachineLearning.cvlib.CV_VAR_CATEGORICAL">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:MachineLearning.cvlib.CV_TYPE_NAME_ML_SVM">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:MachineLearning.cvlib.CV_TYPE_NAME_ML_KNN">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:MachineLearning.cvlib.CV_TYPE_NAME_ML_NBAYES">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:MachineLearning.cvlib.CV_TYPE_NAME_ML_EM">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:MachineLearning.cvlib.CV_TYPE_NAME_ML_BOOSTING">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:MachineLearning.cvlib.CV_TYPE_NAME_ML_TREE">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:MachineLearning.cvlib.CV_TYPE_NAME_ML_ANN_MLP">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:MachineLearning.cvlib.CV_TYPE_NAME_ML_CNN">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:MachineLearning.cvlib.CV_TYPE_NAME_ML_RTREES">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:MachineLearning.cvlib.CV_TS_CONCENTRIC_SPHERES">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="T:MachineLearning.CvForestTree">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvForestTree.Finalize">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvForestTree.Dispose">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvForestTree.#ctor">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvForestTree.train(MachineLearning.CvDTreeTrainData,CxCore.CvMat,MachineLearning.CvRTrees)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_subsample_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="forest">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvForestTree.get_var_count">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvForestTree.read(CxCore.CvFileStorage,CxCore.CvFileNode,MachineLearning.CvRTrees,MachineLearning.CvDTreeTrainData)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="fs">No comment available for this member. Please check the openCV documenation.</param>
            <param name="node">No comment available for this member. Please check the openCV documenation.</param>
            <param name="forest">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_data">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvForestTree.train(CxCore.CvMat,System.Int32,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,MachineLearning.CvDTreeParams)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_tflag">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_sample_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_type">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_missing_mask">No comment available for this member. Please check the openCV documenation.</param>
            <param name="arg7">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvForestTree.train(CxCore.CvMat,System.Int32,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_tflag">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_sample_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_type">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_missing_mask">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvForestTree.train(CxCore.CvMat,System.Int32,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_tflag">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_sample_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_type">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvForestTree.train(CxCore.CvMat,System.Int32,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_tflag">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_sample_idx">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvForestTree.train(CxCore.CvMat,System.Int32,CxCore.CvMat,CxCore.CvMat)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_tflag">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_idx">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvForestTree.train(CxCore.CvMat,System.Int32,CxCore.CvMat)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_tflag">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="T:MachineLearning.CvBoost">
            <summary>
            Boosted tree classifier
            </summary>
        </member>
        <member name="M:MachineLearning.CvBoost.Finalize">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvBoost.Dispose">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvBoost.#ctor">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvBoost.#ctor(CxCore.CvMat,System.Int32,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,MachineLearning.CvBoostParams)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_tflag">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_sample_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_type">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_missing_mask">No comment available for this member. Please check the openCV documenation.</param>
            <param name="arg7">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvBoost.#ctor(CxCore.CvMat,System.Int32,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_tflag">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_sample_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_type">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_missing_mask">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvBoost.#ctor(CxCore.CvMat,System.Int32,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_tflag">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_sample_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_type">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvBoost.#ctor(CxCore.CvMat,System.Int32,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_tflag">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_sample_idx">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvBoost.#ctor(CxCore.CvMat,System.Int32,CxCore.CvMat,CxCore.CvMat)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_tflag">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_idx">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvBoost.#ctor(CxCore.CvMat,System.Int32,CxCore.CvMat)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_tflag">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvBoost.train(CxCore.CvMat,System.Int32,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,MachineLearning.CvBoostParams,System.Boolean)">
            <summary>
            Trains boosted tree classifier
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_tflag">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_sample_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_type">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_missing_mask">No comment available for this member. Please check the openCV documenation.</param>
            <param name="arg7">No comment available for this member. Please check the openCV documenation.</param>
            <param name="update">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvBoost.train(CxCore.CvMat,System.Int32,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,MachineLearning.CvBoostParams)">
            <summary>
            Trains boosted tree classifier
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_tflag">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_sample_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_type">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_missing_mask">No comment available for this member. Please check the openCV documenation.</param>
            <param name="arg7">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvBoost.train(CxCore.CvMat,System.Int32,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat)">
            <summary>
            Trains boosted tree classifier
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_tflag">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_sample_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_type">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_missing_mask">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvBoost.train(CxCore.CvMat,System.Int32,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat)">
            <summary>
            Trains boosted tree classifier
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_tflag">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_sample_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_type">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvBoost.train(CxCore.CvMat,System.Int32,CxCore.CvMat,CxCore.CvMat,CxCore.CvMat)">
            <summary>
            Trains boosted tree classifier
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_tflag">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_sample_idx">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvBoost.train(CxCore.CvMat,System.Int32,CxCore.CvMat,CxCore.CvMat)">
            <summary>
            Trains boosted tree classifier
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_tflag">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_var_idx">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvBoost.train(CxCore.CvMat,System.Int32,CxCore.CvMat)">
            <summary>
            Trains boosted tree classifier
            </summary>
            <param name="_train_data">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_tflag">No comment available for this member. Please check the openCV documenation.</param>
            <param name="_responses">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvBoost.predict(CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,CxCore.CvSlice,System.Boolean)">
            <summary>
            Predicts response for the input sample
            </summary>
            <param name="_sample">The input sample. </param>
            <param name="_missing">The optional mask of missing measurements. To handle missing measurements, the weak classifiers must include surrogate splits (see CvDTreeParams::use_surrogates ). </param>
            <param name="weak_responses">No comment available for this member. Please check the openCV documenation.</param>
            <param name="slice">The continuous subset of the sequence of weak classifiers to be used for prediction. By default, all the weak classifiers are used. </param>
            <param name="raw_mode">It has the same meaning as in CvDTree::predict . Normally, it should be set to false. </param>
        </member>
        <member name="M:MachineLearning.CvBoost.predict(CxCore.CvMat,CxCore.CvMat,CxCore.CvMat,CxCore.CvSlice)">
            <summary>
            Predicts response for the input sample
            </summary>
            <param name="_sample">The input sample. </param>
            <param name="_missing">The optional mask of missing measurements. To handle missing measurements, the weak classifiers must include surrogate splits (see CvDTreeParams::use_surrogates ). </param>
            <param name="weak_responses">No comment available for this member. Please check the openCV documenation.</param>
            <param name="slice">The continuous subset of the sequence of weak classifiers to be used for prediction. By default, all the weak classifiers are used. </param>
        </member>
        <member name="M:MachineLearning.CvBoost.predict(CxCore.CvMat,CxCore.CvMat,CxCore.CvMat)">
            <summary>
            Predicts response for the input sample
            </summary>
            <param name="_sample">The input sample. </param>
            <param name="_missing">The optional mask of missing measurements. To handle missing measurements, the weak classifiers must include surrogate splits (see CvDTreeParams::use_surrogates ). </param>
            <param name="weak_responses">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvBoost.predict(CxCore.CvMat,CxCore.CvMat)">
            <summary>
            Predicts response for the input sample
            </summary>
            <param name="_sample">The input sample. </param>
            <param name="_missing">The optional mask of missing measurements. To handle missing measurements, the weak classifiers must include surrogate splits (see CvDTreeParams::use_surrogates ). </param>
        </member>
        <member name="M:MachineLearning.CvBoost.predict(CxCore.CvMat)">
            <summary>
            Predicts response for the input sample
            </summary>
            <param name="_sample">The input sample. </param>
        </member>
        <member name="M:MachineLearning.CvBoost.prune(CxCore.CvSlice)">
            <summary>
            Removes specified weak classifiers
            </summary>
            <param name="slice">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvBoost.clear">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvBoost.get_weak_predictors">
            <summary>
            Returns the sequence of weak tree classifiers
            </summary>
        </member>
        <member name="M:MachineLearning.CvBoost.get_weights">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvBoost.get_subtree_weights">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvBoost.get_weak_response">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvBoost.get_params">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:MachineLearning.CvBoost.DISCRETE">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:MachineLearning.CvBoost.REAL">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:MachineLearning.CvBoost.LOGIT">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:MachineLearning.CvBoost.GENTLE">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:MachineLearning.CvBoost.DEFAULT">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:MachineLearning.CvBoost.GINI">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:MachineLearning.CvBoost.MISCLASS">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:MachineLearning.CvBoost.SQERR">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="T:OtherLibs.CvCapture">
            <summary>
            Black box cvcapture
            </summary>
        </member>
        <member name="F:OtherLibs.CvCapture.ptr">
            <summary>
            this pointer
            </summary>
        </member>
        <member name="T:OtherLibs.CvVideoWriter">
            <summary>
            black box cvvideowriter
            </summary>
        </member>
        <member name="F:OtherLibs.CvVideoWriter.ptr">
            <summary>
            Internal memeber
            </summary>
        </member>
        <member name="T:OtherLibs.highgui">
            <summary>
            Provides methods and Constants for visualisation and video. 
            </summary>
        </member>
        <member name="F:OtherLibs.highgui.CV_LOAD_IMAGE_UNCHANGED">
            <summary>
            Left image unchanged
            </summary>
        </member>
        <member name="F:OtherLibs.highgui.CV_LOAD_IMAGE_GRAYSCALE">
            <summary>
            8 bit, gray
            </summary>
        </member>
        <member name="F:OtherLibs.highgui.CV_LOAD_IMAGE_COLOR">
            <summary>
            8 bit unless combined with CV_LOAD_IMAGE_ANYDEPTH, color
            </summary>
        </member>
        <member name="F:OtherLibs.highgui.CV_LOAD_IMAGE_ANYDEPTH">
            <summary>
            any depth, if specified on its own gray
            </summary>
        </member>
        <member name="F:OtherLibs.highgui.CV_LOAD_IMAGE_ANYCOLOR">
            <summary>
            by itself equivalent to CV_LOAD_IMAGE_UNCHANGED
            but can be modified with CV_LOAD_IMAGE_ANYDEPTH 
            </summary>
        </member>
        <member name="F:OtherLibs.highgui.CV_CAP_PROP_POS_MSEC">
            <summary>
            Value = 0. No further Comment available for this memeber. 
            </summary>
        </member>
        <member name="F:OtherLibs.highgui.CV_CAP_PROP_POS_FRAMES">
            <summary>
            Value = 1. No further Comment available for this memeber. 
            </summary>
        </member>
        <member name="F:OtherLibs.highgui.CV_CAP_PROP_POS_AVI_RATIO">
            <summary>
            Value = 2. No further Comment available for this memeber. 
            </summary>
        </member>
        <member name="F:OtherLibs.highgui.CV_CAP_PROP_FRAME_WIDTH">
            <summary>
            Value = 3. No further Comment available for this memeber. 
            </summary>
        </member>
        <member name="F:OtherLibs.highgui.CV_CAP_PROP_FRAME_HEIGHT">
            <summary>
            Value = 4. No further Comment available for this memeber. 
            </summary>
        </member>
        <member name="F:OtherLibs.highgui.CV_CAP_PROP_FPS">
            <summary>
            Value = 5. No further Comment available for this memeber. 
            </summary>
        </member>
        <member name="F:OtherLibs.highgui.CV_CAP_PROP_FOURCC">
            <summary>
            Value = 6. No further Comment available for this memeber. 
            </summary>
        </member>
        <member name="F:OtherLibs.highgui.CV_CAP_PROP_FRAME_COUNT">
            <summary>
            Value = 7. No further Comment available for this memeber. 
            </summary>
        </member>
        <member name="F:OtherLibs.highgui.CV_CAP_PROP_FORMAT">
            <summary>
            Value = 8. No further Comment available for this memeber. 
            </summary>
        </member>
        <member name="F:OtherLibs.highgui.CV_CAP_PROP_MODE">
            <summary>
            Value = 9. No further Comment available for this memeber. 
            </summary>
        </member>
        <member name="F:OtherLibs.highgui.CV_CAP_PROP_BRIGHTNESS">
            <summary>
            Value = 10. No further Comment available for this memeber. 
            </summary>
        </member>
        <member name="F:OtherLibs.highgui.CV_CAP_PROP_CONTRAST">
            <summary>
            Value = 11. No further Comment available for this memeber. 
            </summary>
        </member>
        <member name="F:OtherLibs.highgui.CV_CAP_PROP_SATURATION">
            <summary>
            Value = 12. No further Comment available for this memeber. 
            </summary>
        </member>
        <member name="F:OtherLibs.highgui.CV_CAP_PROP_HUE">
            <summary>
            Value = 13. No further Comment available for this memeber. 
            </summary>
        </member>
        <member name="F:OtherLibs.highgui.CV_CAP_PROP_GAIN">
            <summary>
            Value = 14. No further Comment available for this memeber. 
            </summary>
        </member>
        <member name="F:OtherLibs.highgui.CV_CAP_PROP_CONVERT_RGB">
            <summary>
            Value = 15. No further Comment available for this memeber. 
            </summary>
        </member>
        <member name="F:OtherLibs.highgui.CV_EVENT_MOUSEMOVE">
            <summary>
            Value = 0. No further Comment available for this memeber. 
            </summary>
        </member>
        <member name="F:OtherLibs.highgui.CV_EVENT_LBUTTONDOWN">
            <summary>
            Value = 1. No further Comment available for this memeber. 
            </summary>
        </member>
        <member name="F:OtherLibs.highgui.CV_EVENT_RBUTTONDOWN">
            <summary>
            Value = 2. No further Comment available for this memeber. 
            </summary>
        </member>
        <member name="F:OtherLibs.highgui.CV_EVENT_MBUTTONDOWN">
            <summary>
            Value = 3. No further Comment available for this memeber. 
            </summary>
        </member>
        <member name="F:OtherLibs.highgui.CV_EVENT_LBUTTONUP">
            <summary>
            Value = 4. No further Comment available for this memeber. 
            </summary>
        </member>
        <member name="F:OtherLibs.highgui.CV_EVENT_RBUTTONUP">
            <summary>
            Value = 5. No further Comment available for this memeber. 
            </summary>
        </member>
        <member name="F:OtherLibs.highgui.CV_EVENT_MBUTTONUP">
            <summary>
            Value = 6. No further Comment available for this memeber. 
            </summary>
        </member>
        <member name="F:OtherLibs.highgui.CV_EVENT_LBUTTONDBLCLK">
            <summary>
            Value = 7. No further Comment available for this memeber. 
            </summary>
        </member>
        <member name="F:OtherLibs.highgui.CV_EVENT_RBUTTONDBLCLK">
            <summary>
            Value = 8. No further Comment available for this memeber. 
            </summary>
        </member>
        <member name="F:OtherLibs.highgui.CV_EVENT_MBUTTONDBLCLK">
            <summary>
            Value = 9. No further Comment available for this memeber. 
            </summary>
        </member>
        <member name="F:OtherLibs.highgui.CV_EVENT_FLAG_LBUTTON">
            <summary>
            Value = 1. No further Comment available for this memeber. 
            </summary>
        </member>
        <member name="F:OtherLibs.highgui.CV_EVENT_FLAG_RBUTTON">
            <summary>
            Value = 2. No further Comment available for this memeber. 
            </summary>
        </member>
        <member name="F:OtherLibs.highgui.CV_EVENT_FLAG_MBUTTON">
            <summary>
            Value = 4. No further Comment available for this memeber. 
            </summary>
        </member>
        <member name="F:OtherLibs.highgui.CV_EVENT_FLAG_CTRLKEY">
            <summary>
            Value = 8. No further Comment available for this memeber. 
            </summary>
        </member>
        <member name="F:OtherLibs.highgui.CV_EVENT_FLAG_SHIFTKEY">
            <summary>
            Value = 16. No further Comment available for this memeber. 
            </summary>
        </member>
        <member name="F:OtherLibs.highgui.CV_EVENT_FLAG_ALTKEY">
            <summary>
            Value = 32. No further Comment available for this memeber. 
            </summary>
        </member>
        <member name="F:OtherLibs.highgui.CV_WINDOW_AUTOSIZE">
            <summary>
            Value = 1. No further Comment available for this memeber. 
            </summary>
        </member>
        <member name="F:OtherLibs.highgui.HG_WINDOW_AUTOSIZE">
            <summary>
            Value = 1. No further Comment available for this memeber. 
            </summary>
        </member>
        <member name="M:OtherLibs.highgui.CvLoadImage(System.String,System.Int32)">
            <summary>
            Loads an image from file
            </summary>
            <param name="path">path</param>
            <param name="flags">Specifies colorness and depth of the loaded image: The colorness specifies whether the loaded image is to be converted to       3 channels (CV_LOAD_IMAGE_COLOR), 1 channel (CV_LOAD_IMAGE_GRAYSCALE),       or left as it was in the input file (CV_LOAD_IMAGE_ANYCOLOR). Depth specifies whether the loaded image is to be converted to 8 bits       per pixel per color channel as was customary in previous versions of       OpenCV or left as they were in the input file.       If CV_LOAD_IMAGE_ANYDEPTH is passed the       pixel format can be 8 bit unsigned, 16 bit unsigned, 32 bit signed or       32 bit floating point. If conflicting flags are passed the flag with the smaller numerical       value wins. That is if       CV_LOAD_IMAGE_COLOR | CV_LOAD_IMAGE_ANYCOLOR       is passed the image is loaded with 3 channels.       CV_LOAD_IMAGE_ANYCOLOR is equivalent to specifying       CV_LOAD_IMAGE_UNCHANGED. However, CV_LOAD_IMAGE_ANYCOLOR has the       advantage that it can be combined with CV_LOAD_IMAGE_ANYDEPTH. So       CV_LOAD_IMAGE_UNCHANGED should not be used any longer. If you want to load the image as truthfully as possible pass       CV_LOAD_IMAGE_ANYDEPTH | CV_LOAD_IMAGE_ANYCOLOR. </param>
        </member>
        <member name="M:OtherLibs.highgui.CvLoadImage(System.String)">
            <summary>
            Loads an image from file
            </summary>
            <param name="path">path</param>
        </member>
        <member name="M:OtherLibs.highgui.CvSaveImage(System.String,CxCore.IplImage@)">
            <summary>
            Saves an image to the file
            </summary>
            <param name="path">path</param>
            <param name="img">img</param>
        </member>
        <member name="M:OtherLibs.highgui.ToBitmap(CxCore.IplImage,System.Boolean)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="image">image</param>
            <param name="dispose">dispose</param>
        </member>
        <member name="M:OtherLibs.highgui.ToIplImage(System.Drawing.Bitmap,System.Boolean)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="img">img</param>
            <param name="dispose">dispose</param>
        </member>
        <member name="M:OtherLibs.highgui.memcpy(System.IntPtr,System.IntPtr,System.Int32)">
            <summary>
            Low level w32 memcopy
            </summary>
            <param name="dest">destination pointer</param>
            <param name="src">source pointer</param>
            <param name="len">number of bytes to copy</param>
        </member>
        <member name="M:OtherLibs.highgui.CvCreateFileCapture(System.String)">
            <summary>
            Initializes capturing video from file
            </summary>
            <param name="path">path</param>
        </member>
        <member name="M:OtherLibs.highgui.CvCreateCameraCapture(System.Int32)">
            <summary>
            Initializes capturing video from camera
            </summary>
            <param name="idx">idx</param>
        </member>
        <member name="M:OtherLibs.highgui.CvReleaseCapture(OtherLibs.CvCapture@)">
            <summary>
            Releases the CvCapture structure
            </summary>
            <param name="capture">pointer to video capturing structure. </param>
        </member>
        <member name="M:OtherLibs.highgui.CvGrabFrame(OtherLibs.CvCapture@)">
            <summary>
            Grabs frame from camera or file
            </summary>
            <param name="capture">video capturing structure. </param>
        </member>
        <member name="M:OtherLibs.highgui.CvRetrieveFrame(OtherLibs.CvCapture@)">
            <summary>
            Gets the image grabbed with cvGrabFrame
            </summary>
            <param name="capture">video capturing structure. </param>
        </member>
        <member name="M:OtherLibs.highgui.CvQueryFrame(OtherLibs.CvCapture@)">
            <summary>
            Grabs and returns a frame from camera or file
            </summary>
            <param name="capture">video capturing structure. </param>
        </member>
        <member name="M:OtherLibs.highgui.cvGetCaptureProperty(OtherLibs.CvCapture,System.Int32)">
            <summary>
            Gets video capturing properties
            </summary>
            <param name="capture">video capturing structure. </param>
            <param name="property_id">property identifier. Can be one of the following: CV_CAP_PROP_POS_MSEC CV_CAP_PROP_POS_FRAMES CV_CAP_PROP_POS_AVI_RATIO CV_CAP_PROP_FRAME_WIDTH CV_CAP_PROP_FRAME_HEIGHT CV_CAP_PROP_FPS CV_CAP_PROP_FOURCC CV_CAP_PROP_FRAME_COUNT </param>
        </member>
        <member name="M:OtherLibs.highgui.CvSetCaptureProperty(OtherLibs.CvCapture@,System.Int32,System.Double)">
            <summary>
            Sets video capturing properties
            </summary>
            <param name="capture">video capturing structure. </param>
            <param name="property_id">property identifier. Can be one of the following: CV_CAP_PROP_POS_MSEC CV_CAP_PROP_POS_FRAMES CV_CAP_PROP_POS_AVI_RATIO CV_CAP_PROP_FRAME_WIDTH CV_CAP_PROP_FRAME_HEIGHT CV_CAP_PROP_FPS CV_CAP_PROP_FOURCC </param>
            <param name="value">value of the property. </param>
        </member>
        <member name="M:OtherLibs.highgui.CvCreateVideoWriter(System.String,System.Int32,System.Double,CxCore.CvSize,System.Int32)">
            <summary>
            Creates video file writer
            </summary>
            <param name="filename">Name of the output video file. </param>
            <param name="fourcc">4-character code of codec used to compress the frames.              For example, CV_FOURCC('P','I','M','1') CV_FOURCC('M','J','P','G') </param>
            <param name="fps">Framerate of the created video stream. </param>
            <param name="frame_size">Size of video frames. </param>
            <param name="is_color">If it is not zero, the encoder will expect and encode color frames, otherwise it will workwith grayscale frames (the flag is currently supported on Windows only). </param>
        </member>
        <member name="M:OtherLibs.highgui.CvCreateVideoWriter(System.String,System.Int32,System.Double,CxCore.CvSize)">
            <summary>
            Creates video file writer
            </summary>
            <param name="filename">Name of the output video file. </param>
            <param name="fourcc">4-character code of codec used to compress the frames.              For example, CV_FOURCC('P','I','M','1') CV_FOURCC('M','J','P','G') </param>
            <param name="fps">Framerate of the created video stream. </param>
            <param name="frame_size">Size of video frames. </param>
        </member>
        <member name="M:OtherLibs.highgui.CvReleaseVideoWriter(OtherLibs.CvVideoWriter@)">
            <summary>
            Releases AVI writer
            </summary>
            <param name="vw">vw</param>
        </member>
        <member name="M:OtherLibs.highgui.CvWriteFrame(OtherLibs.CvVideoWriter,CxCore.IplImage@)">
            <summary>
            Write a single Frame
            </summary>
            <param name="writer">The Video writer</param>
            <param name="image">Append this image to the video.</param>
        </member>
        <member name="M:OtherLibs.highgui.CvConvertImage(CxCore.IplImage@,CxCore.IplImage@,System.Int32)">
            <summary>
            Converts one image to another with optional vertical flip
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. Must be single-channel or 3-channel 8-bit image. </param>
            <param name="flags">The operation flags: CV_CVTIMG_FLIP CV_CVTIMG_SWAP_RB B </param>
        </member>
        <member name="M:OtherLibs.highgui.CvConvertImage(CxCore.IplImage@,CxCore.IplImage@)">
            <summary>
            Converts one image to another with optional vertical flip
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. Must be single-channel or 3-channel 8-bit image. </param>
        </member>
        <member name="M:OtherLibs.highgui.CvConvertImage(CxCore.CvMat@,CxCore.CvMat@,System.Int32)">
            <summary>
            Converts one image to another with optional vertical flip
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. Must be single-channel or 3-channel 8-bit image. </param>
            <param name="flags">The operation flags: CV_CVTIMG_FLIP CV_CVTIMG_SWAP_RB B </param>
        </member>
        <member name="M:OtherLibs.highgui.CvConvertImage(CxCore.CvMat@,CxCore.CvMat@)">
            <summary>
            Converts one image to another with optional vertical flip
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. Must be single-channel or 3-channel 8-bit image. </param>
        </member>
        <member name="M:OtherLibs.highgui.CvConvertImage(CxCore.CvSeq@,CxCore.CvSeq@,System.Int32)">
            <summary>
            Converts one image to another with optional vertical flip
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. Must be single-channel or 3-channel 8-bit image. </param>
            <param name="flags">The operation flags: CV_CVTIMG_FLIP CV_CVTIMG_SWAP_RB B </param>
        </member>
        <member name="M:OtherLibs.highgui.CvConvertImage(CxCore.CvSeq@,CxCore.CvSeq@)">
            <summary>
            Converts one image to another with optional vertical flip
            </summary>
            <param name="src">Source image. </param>
            <param name="dst">Destination image. Must be single-channel or 3-channel 8-bit image. </param>
        </member>
        <member name="M:OtherLibs.highgui.CvNamedWindow(System.String,System.Int32)">
            <summary>
            Creates window
            </summary>
            <param name="name">Name of the window which is used as window identifier and appears inthe window caption. </param>
            <param name="flags">Flags of the window. Currently the onlysupported flag is CV_WINDOW_AUTOSIZE </param>
        </member>
        <member name="M:OtherLibs.highgui.CvNamedWindow(System.String)">
            <summary>
            Creates window
            </summary>
            <param name="name">Name of the window which is used as window identifier and appears inthe window caption. </param>
        </member>
        <member name="M:OtherLibs.highgui.CvDestroyWindow(System.String)">
            <summary>
            Destroys a window
            </summary>
            <param name="name">Name of the window to be destroyed. </param>
        </member>
        <member name="M:OtherLibs.highgui.CvDestroyAllWindows">
            <summary>
            Destroys all the HighGUI windows
            </summary>
        </member>
        <member name="M:OtherLibs.highgui.CvMoveWindow(System.String,System.Int32,System.Int32)">
            <summary>
            Sets window position
            </summary>
            <param name="name">Name of the window to be resized. </param>
            <param name="x">New x coordinate of top-left corner </param>
            <param name="y">New y coordinate of top-left corner </param>
        </member>
        <member name="M:OtherLibs.highgui.CvGetWindowHandle(System.String)">
            <summary>
            Gets window handle by name
            </summary>
            <param name="name">Name of the window. </param>
        </member>
        <member name="M:OtherLibs.highgui.CvGetWindowName(System.IntPtr)">
            <summary>
            Gets window name by handle
            </summary>
            <param name="window_handle">Handle of the window. </param>
        </member>
        <member name="M:OtherLibs.highgui.CvShowImage(System.String,CxCore.IplImage@)">
            <summary>
            Shows the image in the specified window
            </summary>
            <param name="name">Name of the window. </param>
            <param name="image">Image to be shown. </param>
        </member>
        <member name="M:OtherLibs.highgui.CvShowImageFast(System.String,System.IntPtr)">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
            <param name="name">name</param>
            <param name="image">image</param>
        </member>
        <member name="M:OtherLibs.highgui.CvCreateTrackbar(System.String,System.String,System.Int32@,System.Int32,OtherLibs.highgui.OnTrackbarChangeCallback)">
            <summary>
            Creates the trackbar and attaches it to the specified window
            </summary>
            <param name="trackbar_name">Name of created trackbar. </param>
            <param name="window_name">Name of the window which will e used as a parent for created trackbar. </param>
            <param name="value">Pointer to the integer variable, which value will reflect the position of the slider.  Upon the creation the slider position is defined by this variable. </param>
            <param name="count">Maximal position of the slider. Minimal position is always 0. </param>
            <param name="on_change">Pointer to the function to be called every time the slider changes the position. This  function should be prototyped as void Foo(int); </param>
        </member>
        <member name="M:OtherLibs.highgui.CvCreateTrackbar(System.String,System.String,System.Int32@,System.Int32)">
            <summary>
            Creates the trackbar and attaches it to the specified window
            </summary>
            <param name="trackbar_name">Name of created trackbar. </param>
            <param name="window_name">Name of the window which will e used as a parent for created trackbar. </param>
            <param name="value">Pointer to the integer variable, which value will reflect the position of the slider.  Upon the creation the slider position is defined by this variable. </param>
            <param name="count">Maximal position of the slider. Minimal position is always 0. </param>
        </member>
        <member name="M:OtherLibs.highgui.CvGetTrackbarPos(System.String,System.String)">
            <summary>
            Retrieves trackbar position
            </summary>
            <param name="trackbar_name">Name of trackbar. </param>
            <param name="window_name">Name of the window which is the parent of trackbar. </param>
        </member>
        <member name="M:OtherLibs.highgui.CvSetTrackbarPos(System.String,System.String,System.Int32)">
            <summary>
            Sets trackbar position
            </summary>
            <param name="trackbar_name">Name of trackbar. </param>
            <param name="window_name">Name of the window which is the parent of trackbar. </param>
            <param name="pos">New position. </param>
        </member>
        <member name="M:OtherLibs.highgui.CvSetMouseCallback(System.String,OtherLibs.highgui.OnMouseCallback,System.IntPtr)">
            <summary>
            Assigns callback for mouse events
            </summary>
            <param name="window_name">Name of the window. </param>
            <param name="on_mouse">Pointer to the function to be called every time mouse event occurs                in the specified window. This function should be prototyped as event CV_EVENT_* x y flags CV_EVENT_FLAG param cvSetMouseCallback </param>
            <param name="param">User-defined parameter to be passed to the callback function. </param>
        </member>
        <member name="M:OtherLibs.highgui.CvWaitKey(System.Int32)">
            <summary>
            Waits for a pressed key
            </summary>
            <param name="delay">Delay in milliseconds. </param>
        </member>
        <member name="T:OtherLibs.highgui.OnTrackbarChangeCallback">
            <summary>
            Trackbar Event delegate
            </summary>
            <param name="value">Trackbar pos</param>
        </member>
        <member name="T:OtherLibs.highgui.OnMouseCallback">
            <summary>
            Mouse Callback delegate
            </summary>
            <param name="evnt">Event.</param>
            <param name="x">x pos of Cursor.</param>
            <param name="y">y pos of Cursor.</param>
            <param name="flags">Flags.</param>
            <param name="param">User Param.</param>
        </member>
        <member name="T:CvAux.CvCamShiftTracker">
            <summary>
            No comment available. Please check the openCV Documentation.
            </summary>
        </member>
        <member name="F:CvAux.CvCamShiftTracker.swigCMemOwn">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:CvAux.CvCamShiftTracker.Finalize">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:CvAux.CvCamShiftTracker.Dispose">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:CvAux.CvCamShiftTracker.#ctor">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:CvAux.CvCamShiftTracker.get_orientation">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:CvAux.CvCamShiftTracker.get_length">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:CvAux.CvCamShiftTracker.get_width">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:CvAux.CvCamShiftTracker.get_center">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:CvAux.CvCamShiftTracker.get_window">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:CvAux.CvCamShiftTracker.get_threshold">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:CvAux.CvCamShiftTracker.get_hist_dims(System.Int32[])">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="dims">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.CvCamShiftTracker.get_hist_dims">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:CvAux.CvCamShiftTracker.get_min_ch_val(System.Int32)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="channel">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.CvCamShiftTracker.get_max_ch_val(System.Int32)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="channel">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.CvCamShiftTracker.set_window(CxCore.CvRect)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="window">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.CvCamShiftTracker.set_threshold(System.Int32)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="threshold">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.CvCamShiftTracker.set_hist_bin_range(System.Int32,System.Int32,System.Int32)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="dim">No comment available for this member. Please check the openCV documenation.</param>
            <param name="min_val">No comment available for this member. Please check the openCV documenation.</param>
            <param name="max_val">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.CvCamShiftTracker.set_hist_dims(System.Int32,System.Int32[])">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="c_dims">No comment available for this member. Please check the openCV documenation.</param>
            <param name="dims">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.CvCamShiftTracker.set_min_ch_val(System.Int32,System.Int32)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="channel">No comment available for this member. Please check the openCV documenation.</param>
            <param name="val">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.CvCamShiftTracker.set_max_ch_val(System.Int32,System.Int32)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="channel">No comment available for this member. Please check the openCV documenation.</param>
            <param name="val">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.CvCamShiftTracker.track_object(CxCore.IplImage)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="cur_frame">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.CvCamShiftTracker.update_histogram(CxCore.IplImage)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="cur_frame">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:CvAux.CvCamShiftTracker.reset_histogram">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:CvAux.CvCamShiftTracker.get_back_project">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:CvAux.CvCamShiftTracker.query(System.Int32[])">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="bin">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="T:MachineLearning.CvBoostParams">
            <summary>
            Boosting training parameters
            </summary>
        </member>
        <member name="M:MachineLearning.CvBoostParams.Finalize">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvBoostParams.Dispose">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvBoostParams.#ctor">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvBoostParams.#ctor(System.Int32,System.Int32,System.Double,System.Int32,System.Boolean,System.Single[])">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="boost_type">Boosting type, one of the following: CvBoost::DISCRETE - Discrete AdaBoost CvBoost::REAL - Real AdaBoost CvBoost::LOGIT - LogitBoost CvBoost::GENTLE - Gentle AdaBoost Gentle AdaBoost and Real AdaBoost are often the preferrable choices. </param>
            <param name="weak_count">The number of weak classifiers to build. </param>
            <param name="weight_trim_rate">The weight trimming ratio, within 0..1. See the discussion of it above. If the parameter is ≤0 or >1, the trimming is not used, all the samples are used at each iteration. The default value is 0.95. </param>
            <param name="max_depth">No comment available for this member. Please check the openCV documenation.</param>
            <param name="use_surrogates">No comment available for this member. Please check the openCV documenation.</param>
            <param name="priors">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="P:MachineLearning.CvBoostParams.boost_type">
            <summary>
            Boosting type, one of the following: CvBoost::DISCRETE - Discrete AdaBoost CvBoost::REAL - Real AdaBoost CvBoost::LOGIT - LogitBoost CvBoost::GENTLE - Gentle AdaBoost Gentle AdaBoost and Real AdaBoost are often the preferrable choices. 
            </summary>
        </member>
        <member name="P:MachineLearning.CvBoostParams.weak_count">
            <summary>
            The number of weak classifiers to build. 
            </summary>
        </member>
        <member name="P:MachineLearning.CvBoostParams.split_criteria">
            <summary>
            Splitting criteria, used to choose optimal splits during a weak tree construction: CvBoost::DEFAULT - Use the default criteria for the particular boosting method, see below. CvBoost::GINI - Use Gini index. This is default option for Real AdaBoost; may be also used for Discrete AdaBoost. CvBoost::MISCLASS - Use misclassification rate. This is default option for Discrete AdaBoost; may be also used for Real AdaBoost. CvBoost::SQERR - Use least squares criteria. This is default and the only option for LogitBoost and Gentle AdaBoost. 
            </summary>
        </member>
        <member name="P:MachineLearning.CvBoostParams.weight_trim_rate">
            <summary>
            The weight trimming ratio, within 0..1. See the discussion of it above. If the parameter is ≤0 or >1, the trimming is not used, all the samples are used at each iteration. The default value is 0.95. 
            </summary>
        </member>
        <member name="T:MachineLearning.CvEM">
            <summary>
            EM model
            </summary>
        </member>
        <member name="M:MachineLearning.CvEM.Finalize">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvEM.Dispose">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvEM.#ctor">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvEM.#ctor(CxCore.CvMat,CxCore.CvMat,MachineLearning.CvEMParams,CxCore.CvMat)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="samples">No comment available for this member. Please check the openCV documenation.</param>
            <param name="sample_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="arg2">No comment available for this member. Please check the openCV documenation.</param>
            <param name="labels">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvEM.#ctor(CxCore.CvMat,CxCore.CvMat,MachineLearning.CvEMParams)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="samples">No comment available for this member. Please check the openCV documenation.</param>
            <param name="sample_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="arg2">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvEM.#ctor(CxCore.CvMat,CxCore.CvMat)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="samples">No comment available for this member. Please check the openCV documenation.</param>
            <param name="sample_idx">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvEM.#ctor(CxCore.CvMat)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="samples">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvEM.train(CxCore.CvMat,CxCore.CvMat,MachineLearning.CvEMParams,CxCore.CvMat)">
            <summary>
            Estimates Gaussian mixture parameters from the sample set
            </summary>
            <param name="samples">No comment available for this member. Please check the openCV documenation.</param>
            <param name="sample_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="arg2">No comment available for this member. Please check the openCV documenation.</param>
            <param name="labels">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvEM.train(CxCore.CvMat,CxCore.CvMat,MachineLearning.CvEMParams)">
            <summary>
            Estimates Gaussian mixture parameters from the sample set
            </summary>
            <param name="samples">No comment available for this member. Please check the openCV documenation.</param>
            <param name="sample_idx">No comment available for this member. Please check the openCV documenation.</param>
            <param name="arg2">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvEM.train(CxCore.CvMat,CxCore.CvMat)">
            <summary>
            Estimates Gaussian mixture parameters from the sample set
            </summary>
            <param name="samples">No comment available for this member. Please check the openCV documenation.</param>
            <param name="sample_idx">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvEM.train(CxCore.CvMat)">
            <summary>
            Estimates Gaussian mixture parameters from the sample set
            </summary>
            <param name="samples">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvEM.predict(CxCore.CvMat,CxCore.CvMat)">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
            <param name="sample">No comment available for this member. Please check the openCV documenation.</param>
            <param name="probs">No comment available for this member. Please check the openCV documenation.</param>
        </member>
        <member name="M:MachineLearning.CvEM.clear">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvEM.get_nclusters">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvEM.get_means">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvEM.get_covs">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvEM.get_weights">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvEM.get_probs">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="M:MachineLearning.CvEM.get_log_likelihood">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:MachineLearning.CvEM.COV_MAT_SPHERICAL">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:MachineLearning.CvEM.COV_MAT_DIAGONAL">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:MachineLearning.CvEM.COV_MAT_GENERIC">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:MachineLearning.CvEM.START_E_STEP">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:MachineLearning.CvEM.START_M_STEP">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="F:MachineLearning.CvEM.START_AUTO_STEP">
            <summary>
            No comment available for this member. Please check the openCV documenation.
            </summary>
        </member>
        <member name="T:Cv.CvPOSITObject">
            <summary>
            Internal Structure
            </summary>
        </member>
        <member name="F:Cv.CvPOSITObject.N">
            <summary>
            Internal
            </summary>
        </member>
        <member name="F:Cv.CvPOSITObject.inv_matr">
            <summary>
            Internal
            </summary>
        </member>
        <member name="F:Cv.CvPOSITObject.obj_vecs">
            <summary>
            Internal
            </summary>
        </member>
        <member name="F:Cv.CvPOSITObject.img_vecs">
            <summary>
            Internal
            </summary>
        </member>
        <member name="F:Cv.CvPOSITObject.ptr">
            <summary>
            Internal
            </summary>
        </member>
    </members>
</doc>
